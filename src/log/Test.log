<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='25884' time_ms='1715741551853'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.251-b08
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.251-b08) for bsd-amd64 JRE (1.8.0_251-b08), built on Mar 12 2020 02:36:37 by &quot;java_re&quot; with gcc 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly -XX:+LogCompilation -XX:LogFile=Test.log -javaagent:/Users/wuyulun/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/222.3739.54/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=50728:/Users/wuyulun/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/222.3739.54/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 
</args>
<command>
com.garden.alanni.asm.Test
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.251-b08
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=/Users/wuyulun/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java
java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/endorsed
sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib
java.library.path=/Users/wuyulun/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre
java.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/lib/dt.jar
sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
file.encoding=UTF-8
sun.java.command=com.garden.alanni.asm.Test
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='16131'/>
<thread_logfile thread='16131' filename='/var/folders/6s/7b6zkq850bj_5tnt2qq5fp3m0000gn/T//hs_c16131_pid25884.log'/>
<writer thread='15619'/>
<task_queued compile_id='1' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='2048' iicount='2048' level='3' stamp='0.170' comment='tiered' hot_count='2048'/>
<task_queued compile_id='2' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='2176' iicount='2176' level='3' stamp='0.170' comment='tiered' hot_count='2176'/>
<task_queued compile_id='3' method='java/lang/ref/SoftReference get ()Ljava/lang/Object;' bytes='29' count='768' iicount='768' level='3' stamp='0.171' comment='tiered' hot_count='768'/>
<task_queued compile_id='4' method='java/lang/ThreadLocal getMap (Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap;' bytes='5' count='768' iicount='768' level='3' stamp='0.171' comment='tiered' hot_count='768'/>
<writer thread='16643'/>
<thread_logfile thread='16643' filename='/var/folders/6s/7b6zkq850bj_5tnt2qq5fp3m0000gn/T//hs_c16643_pid25884.log'/>
<writer thread='18435'/>
<thread_logfile thread='18435' filename='/var/folders/6s/7b6zkq850bj_5tnt2qq5fp3m0000gn/T//hs_c18435_pid25884.log'/>
<writer thread='17923'/>
<thread_logfile thread='17923' filename='/var/folders/6s/7b6zkq850bj_5tnt2qq5fp3m0000gn/T//hs_c17923_pid25884.log'/>
<writer thread='3331'/>
<task_queued compile_id='5' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='1024' iicount='1024' level='3' stamp='0.171' comment='tiered' hot_count='1024'/>
<task_queued compile_id='6' compile_kind='osr' method='java/lang/String hashCode ()I' bytes='55' count='2829' backedge_count='72704' iicount='2829' osr_bci='24' stamp='0.171' comment='tiered' hot_count='72704'/>
<task_queued compile_id='7' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='768' iicount='768' level='3' stamp='0.171' comment='tiered' hot_count='768'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
<task_queued compile_id='8' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='20055' backedge_count='11265' iicount='20055' stamp='0.172' comment='tiered' hot_count='20055'/>
Loaded disassembler from /Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/lib/hsdis-amd64.dylib
Decoding compiled method 0x000000010da06e90:
Code:
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
  # {method} {0x000000010bcee868} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x000000010da07000: mov    0x8(%rsi),%r10d
  0x000000010da07004: shl    $0x3,%r10
  0x000000010da07008: cmp    %r10,%rax
  0x000000010da0700b: je     0x000000010da07018
  0x000000010da07011: jmpq   0x000000010d949e60  ;   {runtime_call}
  0x000000010da07016: xchg   %ax,%ax
[Verified Entry Point]
  0x000000010da07018: mov    %eax,-0x14000(%rsp)
  0x000000010da0701f: push   %rbp
  0x000000010da07020: mov    %rsp,%rbp
  0x000000010da07023: sub    $0x50,%rsp
  0x000000010da07027: mov    %r9,(%rsp)
  0x000000010da0702b: mov    %r8,%r9
  0x000000010da0702e: mov    %rcx,0x18(%rsp)
  0x000000010da07033: cmp    $0x0,%rcx
  0x000000010da07037: lea    0x18(%rsp),%r8
  0x000000010da0703c: cmove  0x18(%rsp),%r8
  0x000000010da07042: mov    %rdx,%rcx
  0x000000010da07045: mov    %rsi,0x8(%rsp)
  0x000000010da0704a: cmp    $0x0,%rsi
  0x000000010da0704e: lea    0x8(%rsp),%rdx
  0x000000010da07053: cmove  0x8(%rsp),%rdx
  0x000000010da07059: movabs $0x76ab00c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x000000010da07063: mov    %r14,0x38(%rsp)
  0x000000010da07068: lea    0x38(%rsp),%r14
  0x000000010da0706d: mov    %r14,%rsi          ; OopMap{[24]=Oop [8]=Oop [56]=Oop off=112}
  0x000000010da07070: movabs $0x10da07070,%r10  ;   {section_word}
  0x000000010da0707a: mov    %r10,0x1e0(%r15)
  0x000000010da07081: mov    %rsp,0x1d8(%r15)
  0x000000010da07088: cmpb   $0x0,-0x3d0fbad(%rip)        # 0x0000000109cf74e2
                                                ;   {external_word}
  0x000000010da0708f: je     0x000000010da070d3
  0x000000010da07095: push   %rsi
  0x000000010da07096: push   %rdx
  0x000000010da07097: push   %rcx
  0x000000010da07098: push   %r8
  0x000000010da0709a: push   %r9
  0x000000010da0709c: movabs $0x10bcee868,%rsi  ;   {metadata({method} {0x000000010bcee868} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x000000010da070a6: mov    %r15,%rdi
  0x000000010da070a9: test   $0xf,%esp
  0x000000010da070af: je     0x000000010da070c7
  0x000000010da070b5: sub    $0x8,%rsp
  0x000000010da070b9: callq  0x00000001098edc50  ;   {runtime_call}
  0x000000010da070be: add    $0x8,%rsp
  0x000000010da070c2: jmpq   0x000000010da070cc
  0x000000010da070c7: callq  0x00000001098edc50  ;   {runtime_call}
  0x000000010da070cc: pop    %r9
  0x000000010da070ce: pop    %r8
  0x000000010da070d0: pop    %rcx
  0x000000010da070d1: pop    %rdx
  0x000000010da070d2: pop    %rsi
  0x000000010da070d3: lea    0x1f8(%r15),%rdi
  0x000000010da070da: movl   $0x4,0x270(%r15)
  0x000000010da070e5: callq  0x0000000109746a61  ;   {runtime_call}
  0x000000010da070ea: vzeroupper 
  0x000000010da070ed: movl   $0x5,0x270(%r15)
  0x000000010da070f8: lock addl $0x0,(%rsp)
  0x000000010da070fd: cmpl   $0x0,-0x3d05277(%rip)        # 0x0000000109d01e90
                                                ;   {external_word}
  0x000000010da07107: jne    0x000000010da0711b
  0x000000010da0710d: cmpl   $0x0,0x30(%r15)
  0x000000010da07115: je     0x000000010da07134
  0x000000010da0711b: mov    %r15,%rdi
  0x000000010da0711e: mov    %rsp,%r12
  0x000000010da07121: sub    $0x0,%rsp
  0x000000010da07125: and    $0xfffffffffffffff0,%rsp
  0x000000010da07129: callq  0x0000000109974fce  ;   {runtime_call}
  0x000000010da0712e: mov    %r12,%rsp
  0x000000010da07131: xor    %r12,%r12
  0x000000010da07134: movl   $0x8,0x270(%r15)
  0x000000010da0713f: cmpl   $0x1,0x29c(%r15)
  0x000000010da0714a: je     0x000000010da071d2
  0x000000010da07150: cmpb   $0x0,-0x3d0fc75(%rip)        # 0x0000000109cf74e2
                                                ;   {external_word}
  0x000000010da07157: je     0x000000010da0718d
  0x000000010da0715d: movabs $0x10bcee868,%rsi  ;   {metadata({method} {0x000000010bcee868} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x000000010da07167: mov    %r15,%rdi
  0x000000010da0716a: test   $0xf,%esp
  0x000000010da07170: je     0x000000010da07188
  0x000000010da07176: sub    $0x8,%rsp
  0x000000010da0717a: callq  0x00000001098edbc2  ;   {runtime_call}
  0x000000010da0717f: add    $0x8,%rsp
  0x000000010da07183: jmpq   0x000000010da0718d
  0x000000010da07188: callq  0x00000001098edbc2  ;   {runtime_call}
  0x000000010da0718d: movabs $0x0,%r10
  0x000000010da07197: mov    %r10,0x1d8(%r15)
  0x000000010da0719e: movabs $0x0,%r10
  0x000000010da071a8: mov    %r10,0x1e0(%r15)
  0x000000010da071af: mov    0x38(%r15),%rcx
  0x000000010da071b3: movl   $0x0,0x100(%rcx)
  0x000000010da071bd: leaveq 
  0x000000010da071be: cmpq   $0x0,0x8(%r15)
  0x000000010da071c6: jne    0x000000010da071cd
  0x000000010da071cc: retq   
  0x000000010da071cd: jmpq   Stub::forward exception  ;   {runtime_call}
  0x000000010da071d2: mov    %rsp,%r12
  0x000000010da071d5: sub    $0x0,%rsp
  0x000000010da071d9: and    $0xfffffffffffffff0,%rsp
  0x000000010da071dd: callq  0x00000001098eb908  ;   {runtime_call}
  0x000000010da071e2: mov    %r12,%rsp
  0x000000010da071e5: xor    %r12,%r12
  0x000000010da071e8: jmpq   0x000000010da07150
  0x000000010da071ed: hlt    
  0x000000010da071ee: hlt    
  0x000000010da071ef: hlt    
<nmethod compile_id='9' compile_kind='c2n' level='0' entry='0x000000010da07000' size='864' address='0x000000010da06e90' relocation_offset='296' consts_offset='864' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='7424' iicount='7424' stamp='0.178'/>
<writer thread='17923'/>
Decoding compiled method 0x000000010da06b50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010bcee6b0} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000010da06ca0: mov    %eax,-0x14000(%rsp)
  0x000000010da06ca7: push   %rbp
  0x000000010da06ca8: sub    $0x30,%rsp
  0x000000010da06cac: movabs $0x10bef52c0,%rax  ;   {metadata(method data for {method} {0x000000010bcee6b0} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x000000010da06cb6: mov    0xdc(%rax),%esi
  0x000000010da06cbc: add    $0x8,%esi
  0x000000010da06cbf: mov    %esi,0xdc(%rax)
  0x000000010da06cc5: movabs $0x10bcee6b0,%rax  ;   {metadata({method} {0x000000010bcee6b0} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x000000010da06ccf: and    $0x1ff8,%esi
  0x000000010da06cd5: cmp    $0x0,%esi
  0x000000010da06cd8: je     0x000000010da06cfb
  0x000000010da06cde: movabs $0x76ab00c78,%rax  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x000000010da06ce8: mov    0x74(%rax),%eax
  0x000000010da06ceb: shl    $0x3,%rax          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)

  0x000000010da06cef: add    $0x30,%rsp
  0x000000010da06cf3: pop    %rbp
  0x000000010da06cf4: test   %eax,-0x5720bfa(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da06cfa: retq   
  0x000000010da06cfb: mov    %rax,0x8(%rsp)
  0x000000010da06d00: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da06d08: callq  0x000000010da074e0  ; OopMap{off=109}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ;   {runtime_call}
  0x000000010da06d0d: jmp    0x000000010da06cde
  0x000000010da06d0f: nop
  0x000000010da06d10: nop
  0x000000010da06d11: mov    0x2a8(%r15),%rax
  0x000000010da06d18: movabs $0x0,%r10
  0x000000010da06d22: mov    %r10,0x2a8(%r15)
  0x000000010da06d29: movabs $0x0,%r10
  0x000000010da06d33: mov    %r10,0x2b0(%r15)
  0x000000010da06d3a: add    $0x30,%rsp
  0x000000010da06d3e: pop    %rbp
  0x000000010da06d3f: jmpq   0x000000010d976a20  ;   {runtime_call}
  0x000000010da06d44: hlt    
  0x000000010da06d45: hlt    
  0x000000010da06d46: hlt    
  0x000000010da06d47: hlt    
  0x000000010da06d48: hlt    
  0x000000010da06d49: hlt    
  0x000000010da06d4a: hlt    
  0x000000010da06d4b: hlt    
  0x000000010da06d4c: hlt    
  0x000000010da06d4d: hlt    
  0x000000010da06d4e: hlt    
  0x000000010da06d4f: hlt    
  0x000000010da06d50: hlt    
  0x000000010da06d51: hlt    
  0x000000010da06d52: hlt    
  0x000000010da06d53: hlt    
  0x000000010da06d54: hlt    
  0x000000010da06d55: hlt    
  0x000000010da06d56: hlt    
  0x000000010da06d57: hlt    
  0x000000010da06d58: hlt    
  0x000000010da06d59: hlt    
  0x000000010da06d5a: hlt    
  0x000000010da06d5b: hlt    
  0x000000010da06d5c: hlt    
  0x000000010da06d5d: hlt    
  0x000000010da06d5e: hlt    
  0x000000010da06d5f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010da06d60: callq  0x000000010d974060  ;   {no_reloc}
  0x000000010da06d65: mov    %rsp,-0x28(%rsp)
  0x000000010da06d6a: sub    $0x80,%rsp
  0x000000010da06d71: mov    %rax,0x78(%rsp)
  0x000000010da06d76: mov    %rcx,0x70(%rsp)
  0x000000010da06d7b: mov    %rdx,0x68(%rsp)
  0x000000010da06d80: mov    %rbx,0x60(%rsp)
  0x000000010da06d85: mov    %rbp,0x50(%rsp)
  0x000000010da06d8a: mov    %rsi,0x48(%rsp)
  0x000000010da06d8f: mov    %rdi,0x40(%rsp)
  0x000000010da06d94: mov    %r8,0x38(%rsp)
  0x000000010da06d99: mov    %r9,0x30(%rsp)
  0x000000010da06d9e: mov    %r10,0x28(%rsp)
  0x000000010da06da3: mov    %r11,0x20(%rsp)
  0x000000010da06da8: mov    %r12,0x18(%rsp)
  0x000000010da06dad: mov    %r13,0x10(%rsp)
  0x000000010da06db2: mov    %r14,0x8(%rsp)
  0x000000010da06db7: mov    %r15,(%rsp)
  0x000000010da06dbb: movabs $0x1099e391c,%rdi  ;   {external_word}
  0x000000010da06dc5: movabs $0x10da06d65,%rsi  ;   {internal_word}
  0x000000010da06dcf: mov    %rsp,%rdx
  0x000000010da06dd2: and    $0xfffffffffffffff0,%rsp
  0x000000010da06dd6: callq  0x0000000109807a0e  ;   {runtime_call}
  0x000000010da06ddb: hlt    
[Deopt Handler Code]
  0x000000010da06ddc: movabs $0x10da06ddc,%r10  ;   {section_word}
  0x000000010da06de6: push   %r10
  0x000000010da06de8: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da06ded: hlt    
  0x000000010da06dee: hlt    
  0x000000010da06def: hlt    
<nmethod compile_id='5' compiler='C1' level='3' entry='0x000000010da06ca0' size='768' address='0x000000010da06b50' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='696' dependencies_offset='760' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='1057' iicount='1057' stamp='0.180'/>
<writer thread='3331'/>
<task_queued compile_id='10' method='java/lang/String charAt (I)C' bytes='29' count='59776' iicount='59776' stamp='0.180' comment='tiered' hot_count='59776'/>
<task_queued compile_id='11' method='java/lang/ThreadLocal access$400 (Ljava/lang/ThreadLocal;)I' bytes='5' count='768' iicount='768' level='1' stamp='0.180' comment='tiered' hot_count='768'/>
<writer thread='17923'/>
Decoding compiled method 0x000000010da06550:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010bcfd8d0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;
  # this:     rsi:rsi   = &apos;java/lang/ref/Reference&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/ref/ReferenceQueue&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000010da066c0: mov    0x8(%rsi),%r10d
  0x000000010da066c4: shl    $0x3,%r10
  0x000000010da066c8: cmp    %rax,%r10
  0x000000010da066cb: jne    0x000000010d949e60  ;   {runtime_call}
  0x000000010da066d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010da066dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010da066e0: mov    %eax,-0x14000(%rsp)
  0x000000010da066e7: push   %rbp
  0x000000010da066e8: sub    $0x30,%rsp
  0x000000010da066ec: movabs $0x10bf00258,%rdi  ;   {metadata(method data for {method} {0x000000010bcfd8d0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x000000010da066f6: mov    0xdc(%rdi),%ebx
  0x000000010da066fc: add    $0x8,%ebx
  0x000000010da066ff: mov    %ebx,0xdc(%rdi)
  0x000000010da06705: movabs $0x10bcfd8d0,%rdi  ;   {metadata({method} {0x000000010bcfd8d0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x000000010da0670f: and    $0x1ff8,%ebx
  0x000000010da06715: cmp    $0x0,%ebx
  0x000000010da06718: je     0x000000010da06816  ;*aload_0
                                                ; - java.lang.ref.Reference::&lt;init&gt;@0 (line 306)

  0x000000010da0671e: mov    %rsi,%rdi
  0x000000010da06721: movabs $0x10bf00258,%rbx  ;   {metadata(method data for {method} {0x000000010bcfd8d0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x000000010da0672b: addq   $0x1,0x108(%rbx)
  0x000000010da06733: movabs $0x10be4d1a8,%rdi  ;   {metadata(method data for {method} {0x000000010bcd5480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000010da0673d: mov    0xdc(%rdi),%ebx
  0x000000010da06743: add    $0x8,%ebx
  0x000000010da06746: mov    %ebx,0xdc(%rdi)
  0x000000010da0674c: movabs $0x10bcd5480,%rdi  ;   {metadata({method} {0x000000010bcd5480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000010da06756: and    $0x7ffff8,%ebx
  0x000000010da0675c: cmp    $0x0,%ebx
  0x000000010da0675f: je     0x000000010da0682d
  0x000000010da06765: mov    %rdx,%r10
  0x000000010da06768: shr    $0x3,%r10
  0x000000010da0676c: mov    %r10d,0xc(%rsi)
  0x000000010da06770: mov    %rsi,%rdi
  0x000000010da06773: shr    $0x9,%rdi
  0x000000010da06777: movabs $0x10717e000,%rbx
  0x000000010da06781: movb   $0x0,(%rdi,%rbx,1)  ;*putfield referent
                                                ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 307)

  0x000000010da06785: cmp    $0x0,%rcx
  0x000000010da06789: movabs $0x10bf00258,%rdi  ;   {metadata(method data for {method} {0x000000010bcfd8d0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x000000010da06793: movabs $0x118,%rbx
  0x000000010da0679d: jne    0x000000010da067ad
  0x000000010da067a3: movabs $0x128,%rbx
  0x000000010da067ad: mov    (%rdi,%rbx,1),%rax
  0x000000010da067b1: lea    0x1(%rax),%rax
  0x000000010da067b5: mov    %rax,(%rdi,%rbx,1)
  0x000000010da067b9: jne    0x000000010da067e5  ;*ifnonnull
                                                ; - java.lang.ref.Reference::&lt;init&gt;@11 (line 308)

  0x000000010da067bf: movabs $0x76ab01b90,%rdi  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x000000010da067c9: mov    0x68(%rdi),%edi
  0x000000010da067cc: shl    $0x3,%rdi          ;*getstatic NULL
                                                ; - java.lang.ref.Reference::&lt;init&gt;@14 (line 308)

  0x000000010da067d0: movabs $0x10bf00258,%rbx  ;   {metadata(method data for {method} {0x000000010bcfd8d0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x000000010da067da: incl   0x138(%rbx)
  0x000000010da067e0: jmpq   0x000000010da067e8  ;*goto
                                                ; - java.lang.ref.Reference::&lt;init&gt;@17 (line 308)

  0x000000010da067e5: mov    %rcx,%rdi
  0x000000010da067e8: mov    %rdi,%r10
  0x000000010da067eb: shr    $0x3,%r10
  0x000000010da067ef: mov    %r10d,0x10(%rsi)
  0x000000010da067f3: shr    $0x9,%rsi
  0x000000010da067f7: movabs $0x10717e000,%rdi
  0x000000010da06801: movb   $0x0,(%rsi,%rdi,1)
  0x000000010da06805: lock addl $0x0,(%rsp)     ;*putfield queue
                                                ; - java.lang.ref.Reference::&lt;init&gt;@21 (line 308)

  0x000000010da0680a: add    $0x30,%rsp
  0x000000010da0680e: pop    %rbp
  0x000000010da0680f: test   %eax,-0x5720715(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da06815: retq   
  0x000000010da06816: mov    %rdi,0x8(%rsp)
  0x000000010da0681b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da06823: callq  0x000000010da074e0  ; OopMap{rsi=Oop rdx=Oop rcx=Oop off=360}
                                                ;*synchronization entry
                                                ; - java.lang.ref.Reference::&lt;init&gt;@-1 (line 306)
                                                ;   {runtime_call}
  0x000000010da06828: jmpq   0x000000010da0671e
  0x000000010da0682d: mov    %rdi,0x8(%rsp)
  0x000000010da06832: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da0683a: callq  0x000000010da074e0  ; OopMap{rsi=Oop rdx=Oop rcx=Oop off=383}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.ref.Reference::&lt;init&gt;@1 (line 306)
                                                ;   {runtime_call}
  0x000000010da0683f: jmpq   0x000000010da06765
  0x000000010da06844: nop
  0x000000010da06845: nop
  0x000000010da06846: mov    0x2a8(%r15),%rax
  0x000000010da0684d: movabs $0x0,%r10
  0x000000010da06857: mov    %r10,0x2a8(%r15)
  0x000000010da0685e: movabs $0x0,%r10
  0x000000010da06868: mov    %r10,0x2b0(%r15)
  0x000000010da0686f: add    $0x30,%rsp
  0x000000010da06873: pop    %rbp
  0x000000010da06874: jmpq   0x000000010d976a20  ;   {runtime_call}
  0x000000010da06879: hlt    
  0x000000010da0687a: hlt    
  0x000000010da0687b: hlt    
  0x000000010da0687c: hlt    
  0x000000010da0687d: hlt    
  0x000000010da0687e: hlt    
  0x000000010da0687f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010da06880: callq  0x000000010d974060  ;   {no_reloc}
  0x000000010da06885: mov    %rsp,-0x28(%rsp)
  0x000000010da0688a: sub    $0x80,%rsp
  0x000000010da06891: mov    %rax,0x78(%rsp)
  0x000000010da06896: mov    %rcx,0x70(%rsp)
  0x000000010da0689b: mov    %rdx,0x68(%rsp)
  0x000000010da068a0: mov    %rbx,0x60(%rsp)
  0x000000010da068a5: mov    %rbp,0x50(%rsp)
  0x000000010da068aa: mov    %rsi,0x48(%rsp)
  0x000000010da068af: mov    %rdi,0x40(%rsp)
  0x000000010da068b4: mov    %r8,0x38(%rsp)
  0x000000010da068b9: mov    %r9,0x30(%rsp)
  0x000000010da068be: mov    %r10,0x28(%rsp)
  0x000000010da068c3: mov    %r11,0x20(%rsp)
  0x000000010da068c8: mov    %r12,0x18(%rsp)
  0x000000010da068cd: mov    %r13,0x10(%rsp)
  0x000000010da068d2: mov    %r14,0x8(%rsp)
  0x000000010da068d7: mov    %r15,(%rsp)
  0x000000010da068db: movabs $0x1099e391c,%rdi  ;   {external_word}
  0x000000010da068e5: movabs $0x10da06885,%rsi  ;   {internal_word}
  0x000000010da068ef: mov    %rsp,%rdx
  0x000000010da068f2: and    $0xfffffffffffffff0,%rsp
  0x000000010da068f6: callq  0x0000000109807a0e  ;   {runtime_call}
  0x000000010da068fb: hlt    
[Deopt Handler Code]
  0x000000010da068fc: movabs $0x10da068fc,%r10  ;   {section_word}
  0x000000010da06906: push   %r10
  0x000000010da06908: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da0690d: hlt    
  0x000000010da0690e: hlt    
  0x000000010da0690f: hlt    
<nmethod compile_id='7' compiler='C1' level='3' entry='0x000000010da066c0' size='1224' address='0x000000010da06550' relocation_offset='296' insts_offset='368' stub_offset='816' scopes_data_offset='984' scopes_pcs_offset='1056' dependencies_offset='1216' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='768' iicount='768' stamp='0.182'/>
<writer thread='15619'/>
<task_queued compile_id='12' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='10624' iicount='10624' stamp='0.183' comment='tiered' hot_count='10624'/>
<writer thread='3331'/>
<task_queued compile_id='13' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='640' iicount='640' level='3' stamp='0.183' comment='tiered' hot_count='640'/>
<task_queued compile_id='14' method='java/lang/Character toLowerCase (I)I' bytes='9' count='2048' iicount='2048' level='3' stamp='0.183' comment='tiered' hot_count='2048'/>
<task_queued compile_id='15' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='2048' iicount='2048' level='3' stamp='0.183' comment='tiered' hot_count='2048'/>
<task_queued compile_id='16' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='128' iicount='128' level='1' stamp='0.183' comment='tiered' hot_count='128'/>
<task_queued compile_id='17' method='java/lang/String indexOf (I)I' bytes='7' count='1664' iicount='1664' level='3' stamp='0.183' comment='tiered' hot_count='1664'/>
<task_queued compile_id='18' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='6784' iicount='6784' level='3' stamp='0.183' comment='tiered' hot_count='6784'/>
<task_queued compile_id='19' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='6784' iicount='6784' level='3' stamp='0.183' comment='tiered' hot_count='6784'/>
<writer thread='17923'/>
Decoding compiled method 0x000000010da0fe10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010bdf0d50} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0xb0]  (sp of caller)
  0x000000010da10020: mov    %eax,-0x14000(%rsp)
  0x000000010da10027: push   %rbp
  0x000000010da10028: sub    $0xa0,%rsp
  0x000000010da1002f: mov    %rsi,%r8
  0x000000010da10032: mov    %rdx,%r9
  0x000000010da10035: movabs $0x10beab188,%rbx  ;   {metadata(method data for {method} {0x000000010bdf0d50} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000010da1003f: mov    0xdc(%rbx),%edx
  0x000000010da10045: add    $0x8,%edx
  0x000000010da10048: mov    %edx,0xdc(%rbx)
  0x000000010da1004e: movabs $0x10bdf0d50,%rbx  ;   {metadata({method} {0x000000010bdf0d50} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000010da10058: and    $0x1ff8,%edx
  0x000000010da1005e: cmp    $0x0,%edx
  0x000000010da10061: je     0x000000010da108c1  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x000000010da10067: mov    %rcx,%r11
  0x000000010da1006a: sub    %r9d,%r11d
  0x000000010da1006d: cmp    $0x0,%r11d
  0x000000010da10071: movabs $0x10beab188,%rbx  ;   {metadata(method data for {method} {0x000000010bdf0d50} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000010da1007b: movabs $0x108,%rdx
  0x000000010da10085: jge    0x000000010da10095
  0x000000010da1008b: movabs $0x118,%rdx
  0x000000010da10095: mov    (%rbx,%rdx,1),%rsi
  0x000000010da10099: lea    0x1(%rsi),%rsi
  0x000000010da1009d: mov    %rsi,(%rbx,%rdx,1)
  0x000000010da100a1: jl     0x000000010da10264  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x000000010da100a7: mov    %r11,%rbx
  0x000000010da100aa: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010da100b4: movslq %ebx,%rbx
  0x000000010da100b7: mov    %rbx,%rdi
  0x000000010da100ba: cmp    $0xffffff,%rbx
  0x000000010da100c1: ja     0x000000010da108d8
  0x000000010da100c7: movabs $0x17,%rsi
  0x000000010da100d1: lea    (%rsi,%rbx,2),%rsi
  0x000000010da100d5: and    $0xfffffffffffffff8,%rsi
  0x000000010da100d9: mov    0x60(%r15),%rax
  0x000000010da100dd: lea    (%rax,%rsi,1),%rsi
  0x000000010da100e1: cmp    0x70(%r15),%rsi
  0x000000010da100e5: ja     0x000000010da108d8
  0x000000010da100eb: mov    %rsi,0x60(%r15)
  0x000000010da100ef: sub    %rax,%rsi
  0x000000010da100f2: movq   $0x1,(%rax)
  0x000000010da100f9: mov    %rdx,%rcx
  0x000000010da100fc: shr    $0x3,%rcx
  0x000000010da10100: mov    %ecx,0x8(%rax)
  0x000000010da10103: mov    %ebx,0xc(%rax)
  0x000000010da10106: sub    $0x10,%rsi
  0x000000010da1010a: je     0x000000010da10121
  0x000000010da10110: xor    %rbx,%rbx
  0x000000010da10113: shr    $0x3,%rsi
  0x000000010da10117: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010da1011c: dec    %rsi
  0x000000010da1011f: jne    0x000000010da10117  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x000000010da10121: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x000000010da108e2
  0x000000010da10125: sub    %r9d,%esi
  0x000000010da10128: movabs $0x10beab188,%rdx  ;   {metadata(method data for {method} {0x000000010bdf0d50} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000010da10132: addq   $0x1,0x208(%rdx)
  0x000000010da1013a: movabs $0x10bea22f0,%rdx  ;   {metadata(method data for {method} {0x000000010bdcbe40} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000010da10144: mov    0xdc(%rdx),%ecx
  0x000000010da1014a: add    $0x8,%ecx
  0x000000010da1014d: mov    %ecx,0xdc(%rdx)
  0x000000010da10153: movabs $0x10bdcbe40,%rdx  ;   {metadata({method} {0x000000010bdcbe40} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000010da1015d: and    $0x7ffff8,%ecx
  0x000000010da10163: cmp    $0x0,%ecx
  0x000000010da10166: je     0x000000010da108e7
  0x000000010da1016c: cmp    %r11d,%esi
  0x000000010da1016f: movabs $0x10bea22f0,%rdx  ;   {metadata(method data for {method} {0x000000010bdcbe40} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000010da10179: movabs $0x108,%rcx
  0x000000010da10183: jg     0x000000010da10193
  0x000000010da10189: movabs $0x118,%rcx
  0x000000010da10193: mov    (%rdx,%rcx,1),%rdi
  0x000000010da10197: lea    0x1(%rdi),%rdi
  0x000000010da1019b: mov    %rdi,(%rdx,%rcx,1)
  0x000000010da1019f: jg     0x000000010da101bd  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x000000010da101a5: movabs $0x10bea22f0,%rdx  ;   {metadata(method data for {method} {0x000000010bdcbe40} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000010da101af: incl   0x128(%rdx)
  0x000000010da101b5: mov    %rsi,%rdi
  0x000000010da101b8: jmpq   0x000000010da101c0  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x000000010da101bd: mov    %r11,%rdi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x000000010da101c0: movabs $0x10beab188,%rsi  ;   {metadata(method data for {method} {0x000000010bdf0d50} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000010da101ca: addq   $0x1,0x218(%rsi)
  0x000000010da101d2: mov    %r8,%rsi
  0x000000010da101d5: mov    %r9,%rdx
  0x000000010da101d8: mov    %rax,%rcx
  0x000000010da101db: mov    $0x0,%r8d
  0x000000010da101e1: mov    %rdi,%r9
  0x000000010da101e4: mov    %rax,0x70(%rsp)
  0x000000010da101e9: test   %edx,%edx
  0x000000010da101eb: jl     0x000000010da108fe
  0x000000010da101f1: lea    (%rdx,%r9,1),%rdi
  0x000000010da101f5: cmp    0xc(%rsi),%edi
  0x000000010da101f8: ja     0x000000010da108fe
  0x000000010da101fe: lea    (%r8,%r9,1),%rdi
  0x000000010da10202: cmp    0xc(%rcx),%edi
  0x000000010da10205: ja     0x000000010da108fe
  0x000000010da1020b: test   %r9d,%r9d
  0x000000010da1020e: jl     0x000000010da108fe
  0x000000010da10214: je     0x000000010da10250
  0x000000010da1021a: movslq %edx,%rdx
  0x000000010da1021d: movslq %r8d,%r8
  0x000000010da10220: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010da10225: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010da1022a: mov    %r9,%rdx
  0x000000010da1022d: test   $0xf,%esp
  0x000000010da10233: je     0x000000010da1024b
  0x000000010da10239: sub    $0x8,%rsp
  0x000000010da1023d: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000010da10242: add    $0x8,%rsp
  0x000000010da10246: jmpq   0x000000010da10250
  0x000000010da1024b: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {runtime_call}
  0x000000010da10250: mov    0x70(%rsp),%rax
  0x000000010da10255: add    $0xa0,%rsp
  0x000000010da1025c: pop    %rbp
  0x000000010da1025d: test   %eax,-0x572a163(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da10263: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x000000010da10264: mov    %ecx,0x80(%rsp)
  0x000000010da1026b: nopl   0x0(%rax,%rax,1)
  0x000000010da10270: jmpq   0x000000010da10918  ;   {no_reloc}
  0x000000010da10275: add    %al,(%rax)
  0x000000010da10277: add    %al,(%rax)
  0x000000010da10279: add    %cl,-0x75(%rcx)
  0x000000010da1027c: rex.RXB (bad) 
  0x000000010da1027e: lea    0x20(%rax),%rdi
  0x000000010da10282: cmp    0x70(%r15),%rdi
  0x000000010da10286: ja     0x000000010da10922
  0x000000010da1028c: mov    %rdi,0x60(%r15)
  0x000000010da10290: mov    0xa8(%rdx),%rcx
  0x000000010da10297: mov    %rcx,(%rax)
  0x000000010da1029a: mov    %rdx,%rcx
  0x000000010da1029d: shr    $0x3,%rcx
  0x000000010da102a1: mov    %ecx,0x8(%rax)
  0x000000010da102a4: xor    %rcx,%rcx
  0x000000010da102a7: mov    %ecx,0xc(%rax)
  0x000000010da102aa: xor    %rcx,%rcx
  0x000000010da102ad: mov    %rcx,0x10(%rax)
  0x000000010da102b1: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x000000010da102b5: data16 xchg %ax,%ax
  0x000000010da102b8: jmpq   0x000000010da1093e  ;   {no_reloc}
  0x000000010da102bd: add    %al,(%rax)
  0x000000010da102bf: add    %al,(%rax)
  0x000000010da102c1: add    %cl,-0x77(%rax)
  0x000000010da102c4: test   %ah,(%rax,%rcx,4)
  0x000000010da102c7: add    %al,(%rax)
  0x000000010da102c9: add    %cl,-0x75(%rcx)
  0x000000010da102cc: rex.RXB (bad) 
  0x000000010da102ce: lea    0x18(%rax),%rdi
  0x000000010da102d2: cmp    0x70(%r15),%rdi
  0x000000010da102d6: ja     0x000000010da10948
  0x000000010da102dc: mov    %rdi,0x60(%r15)
  0x000000010da102e0: mov    0xa8(%rdx),%rcx
  0x000000010da102e7: mov    %rcx,(%rax)
  0x000000010da102ea: mov    %rdx,%rcx
  0x000000010da102ed: shr    $0x3,%rcx
  0x000000010da102f1: mov    %ecx,0x8(%rax)
  0x000000010da102f4: xor    %rcx,%rcx
  0x000000010da102f7: mov    %ecx,0xc(%rax)
  0x000000010da102fa: xor    %rcx,%rcx
  0x000000010da102fd: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x000000010da10301: mov    %rax,%rbx
  0x000000010da10304: movabs $0x10beab188,%rdx  ;   {metadata(method data for {method} {0x000000010bdf0d50} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000010da1030e: addq   $0x1,0x128(%rdx)
  0x000000010da10316: movabs $0x10bf53750,%rbx  ;   {metadata(method data for {method} {0x000000010bd4df58} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000010da10320: mov    0xdc(%rbx),%edx
  0x000000010da10326: add    $0x8,%edx
  0x000000010da10329: mov    %edx,0xdc(%rbx)
  0x000000010da1032f: movabs $0x10bd4df58,%rbx  ;   {metadata({method} {0x000000010bd4df58} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000010da10339: and    $0x7ffff8,%edx
  0x000000010da1033f: cmp    $0x0,%edx
  0x000000010da10342: je     0x000000010da10955
  0x000000010da10348: mov    %rax,%rbx
  0x000000010da1034b: movabs $0x10bf53750,%rdx  ;   {metadata(method data for {method} {0x000000010bd4df58} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000010da10355: addq   $0x1,0x108(%rdx)
  0x000000010da1035d: movabs $0x10bf011f0,%rbx  ;   {metadata(method data for {method} {0x000000010bd4a288} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000010da10367: mov    0xdc(%rbx),%edx
  0x000000010da1036d: add    $0x8,%edx
  0x000000010da10370: mov    %edx,0xdc(%rbx)
  0x000000010da10376: movabs $0x10bd4a288,%rbx  ;   {metadata({method} {0x000000010bd4a288} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000010da10380: and    $0x7ffff8,%edx
  0x000000010da10386: cmp    $0x0,%edx
  0x000000010da10389: je     0x000000010da1096c
  0x000000010da1038f: mov    %rax,%rbx
  0x000000010da10392: movabs $0x10bf011f0,%rdx  ;   {metadata(method data for {method} {0x000000010bd4a288} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000010da1039c: addq   $0x1,0x108(%rdx)
  0x000000010da103a4: movabs $0x10be4d1a8,%rbx  ;   {metadata(method data for {method} {0x000000010bcd5480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000010da103ae: mov    0xdc(%rbx),%edx
  0x000000010da103b4: add    $0x8,%edx
  0x000000010da103b7: mov    %edx,0xdc(%rbx)
  0x000000010da103bd: movabs $0x10bcd5480,%rbx  ;   {metadata({method} {0x000000010bcd5480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000010da103c7: and    $0x7ffff8,%edx
  0x000000010da103cd: cmp    $0x0,%edx
  0x000000010da103d0: je     0x000000010da10983
  0x000000010da103d6: mov    $0x10,%ebx
  0x000000010da103db: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010da103e5: mov    %rax,%r13
  0x000000010da103e8: movslq %ebx,%rbx
  0x000000010da103eb: mov    %rbx,%rdi
  0x000000010da103ee: cmp    $0xffffff,%rbx
  0x000000010da103f5: ja     0x000000010da1099a
  0x000000010da103fb: movabs $0x17,%rsi
  0x000000010da10405: lea    (%rsi,%rbx,2),%rsi
  0x000000010da10409: and    $0xfffffffffffffff8,%rsi
  0x000000010da1040d: mov    0x60(%r15),%rax
  0x000000010da10411: lea    (%rax,%rsi,1),%rsi
  0x000000010da10415: cmp    0x70(%r15),%rsi
  0x000000010da10419: ja     0x000000010da1099a
  0x000000010da1041f: mov    %rsi,0x60(%r15)
  0x000000010da10423: sub    %rax,%rsi
  0x000000010da10426: movq   $0x1,(%rax)
  0x000000010da1042d: mov    %rdx,%rcx
  0x000000010da10430: shr    $0x3,%rcx
  0x000000010da10434: mov    %ecx,0x8(%rax)
  0x000000010da10437: mov    %ebx,0xc(%rax)
  0x000000010da1043a: sub    $0x10,%rsi
  0x000000010da1043e: je     0x000000010da10455
  0x000000010da10444: xor    %rbx,%rbx
  0x000000010da10447: shr    $0x3,%rsi
  0x000000010da1044b: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010da10450: dec    %rsi
  0x000000010da10453: jne    0x000000010da1044b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x000000010da10455: mov    %rax,%r10
  0x000000010da10458: shr    $0x3,%r10
  0x000000010da1045c: mov    %r10d,0x10(%r13)
  0x000000010da10460: mov    %r13,%rax
  0x000000010da10463: shr    $0x9,%rax
  0x000000010da10467: movabs $0x10717e000,%rdx
  0x000000010da10471: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x000000010da10475: mov    %r13,%rax
  0x000000010da10478: movabs $0x10beab188,%rdx  ;   {metadata(method data for {method} {0x000000010bdf0d50} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000010da10482: mov    0x8(%rax),%eax
  0x000000010da10485: shl    $0x3,%rax
  0x000000010da10489: cmp    0x140(%rdx),%rax
  0x000000010da10490: jne    0x000000010da1049f
  0x000000010da10492: addq   $0x1,0x148(%rdx)
  0x000000010da1049a: jmpq   0x000000010da10505
  0x000000010da1049f: cmp    0x150(%rdx),%rax
  0x000000010da104a6: jne    0x000000010da104b5
  0x000000010da104a8: addq   $0x1,0x158(%rdx)
  0x000000010da104b0: jmpq   0x000000010da10505
  0x000000010da104b5: cmpq   $0x0,0x140(%rdx)
  0x000000010da104c0: jne    0x000000010da104d9
  0x000000010da104c2: mov    %rax,0x140(%rdx)
  0x000000010da104c9: movq   $0x1,0x148(%rdx)
  0x000000010da104d4: jmpq   0x000000010da10505
  0x000000010da104d9: cmpq   $0x0,0x150(%rdx)
  0x000000010da104e4: jne    0x000000010da104fd
  0x000000010da104e6: mov    %rax,0x150(%rdx)
  0x000000010da104ed: movq   $0x1,0x158(%rdx)
  0x000000010da104f8: jmpq   0x000000010da10505
  0x000000010da104fd: addq   $0x1,0x138(%rdx)
  0x000000010da10505: movabs $0x10bf54448,%rdx  ;   {metadata(method data for {method} {0x000000010bd4e730} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000010da1050f: mov    0xdc(%rdx),%esi
  0x000000010da10515: add    $0x8,%esi
  0x000000010da10518: mov    %esi,0xdc(%rdx)
  0x000000010da1051e: movabs $0x10bd4e730,%rdx  ;   {metadata({method} {0x000000010bd4e730} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000010da10528: and    $0x7ffff8,%esi
  0x000000010da1052e: cmp    $0x0,%esi
  0x000000010da10531: je     0x000000010da109a4
  0x000000010da10537: mov    %r13,%rax
  0x000000010da1053a: movabs $0x10bf54448,%rdx  ;   {metadata(method data for {method} {0x000000010bd4e730} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000010da10544: addq   $0x1,0x108(%rdx)
  0x000000010da1054c: mov    %r9,%rdx
  0x000000010da1054f: mov    %r13,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x000000010da10552: mov    %r13,0x78(%rsp)
  0x000000010da10557: callq  0x000000010d94a0a0  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000010da1055c: mov    0x78(%rsp),%rax
  0x000000010da10561: movabs $0x10beab188,%rdx  ;   {metadata(method data for {method} {0x000000010bdf0d50} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000010da1056b: mov    0x8(%rax),%eax
  0x000000010da1056e: shl    $0x3,%rax
  0x000000010da10572: cmp    0x170(%rdx),%rax
  0x000000010da10579: jne    0x000000010da10588
  0x000000010da1057b: addq   $0x1,0x178(%rdx)
  0x000000010da10583: jmpq   0x000000010da105ee
  0x000000010da10588: cmp    0x180(%rdx),%rax
  0x000000010da1058f: jne    0x000000010da1059e
  0x000000010da10591: addq   $0x1,0x188(%rdx)
  0x000000010da10599: jmpq   0x000000010da105ee
  0x000000010da1059e: cmpq   $0x0,0x170(%rdx)
  0x000000010da105a9: jne    0x000000010da105c2
  0x000000010da105ab: mov    %rax,0x170(%rdx)
  0x000000010da105b2: movq   $0x1,0x178(%rdx)
  0x000000010da105bd: jmpq   0x000000010da105ee
  0x000000010da105c2: cmpq   $0x0,0x180(%rdx)
  0x000000010da105cd: jne    0x000000010da105e6
  0x000000010da105cf: mov    %rax,0x180(%rdx)
  0x000000010da105d6: movq   $0x1,0x188(%rdx)
  0x000000010da105e1: jmpq   0x000000010da105ee
  0x000000010da105e6: addq   $0x1,0x168(%rdx)
  0x000000010da105ee: movabs $0x10bef4d98,%rdx  ;   {metadata(method data for {method} {0x000000010bd4e270} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000010da105f8: mov    0xdc(%rdx),%esi
  0x000000010da105fe: add    $0x8,%esi
  0x000000010da10601: mov    %esi,0xdc(%rdx)
  0x000000010da10607: movabs $0x10bd4e270,%rdx  ;   {metadata({method} {0x000000010bd4e270} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000010da10611: and    $0x7ffff8,%esi
  0x000000010da10617: cmp    $0x0,%esi
  0x000000010da1061a: je     0x000000010da109bb
  0x000000010da10620: mov    0x78(%rsp),%rax
  0x000000010da10625: movabs $0x10bef4d98,%rdx  ;   {metadata(method data for {method} {0x000000010bd4e270} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000010da1062f: addq   $0x1,0x108(%rdx)
  0x000000010da10637: movabs $0x76b01ed18,%rdx  ;   {oop(&quot; &gt; &quot;)}
  0x000000010da10641: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x000000010da10646: nop
  0x000000010da10647: callq  0x000000010d94a0a0  ; OopMap{[120]=Oop [136]=Oop off=1580}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000010da1064c: mov    0x78(%rsp),%rax
  0x000000010da10651: movabs $0x10beab188,%rdx  ;   {metadata(method data for {method} {0x000000010bdf0d50} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000010da1065b: mov    0x8(%rax),%eax
  0x000000010da1065e: shl    $0x3,%rax
  0x000000010da10662: cmp    0x1a0(%rdx),%rax
  0x000000010da10669: jne    0x000000010da10678
  0x000000010da1066b: addq   $0x1,0x1a8(%rdx)
  0x000000010da10673: jmpq   0x000000010da106de
  0x000000010da10678: cmp    0x1b0(%rdx),%rax
  0x000000010da1067f: jne    0x000000010da1068e
  0x000000010da10681: addq   $0x1,0x1b8(%rdx)
  0x000000010da10689: jmpq   0x000000010da106de
  0x000000010da1068e: cmpq   $0x0,0x1a0(%rdx)
  0x000000010da10699: jne    0x000000010da106b2
  0x000000010da1069b: mov    %rax,0x1a0(%rdx)
  0x000000010da106a2: movq   $0x1,0x1a8(%rdx)
  0x000000010da106ad: jmpq   0x000000010da106de
  0x000000010da106b2: cmpq   $0x0,0x1b0(%rdx)
  0x000000010da106bd: jne    0x000000010da106d6
  0x000000010da106bf: mov    %rax,0x1b0(%rdx)
  0x000000010da106c6: movq   $0x1,0x1b8(%rdx)
  0x000000010da106d1: jmpq   0x000000010da106de
  0x000000010da106d6: addq   $0x1,0x198(%rdx)
  0x000000010da106de: movabs $0x10bf54448,%rdx  ;   {metadata(method data for {method} {0x000000010bd4e730} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000010da106e8: mov    0xdc(%rdx),%esi
  0x000000010da106ee: add    $0x8,%esi
  0x000000010da106f1: mov    %esi,0xdc(%rdx)
  0x000000010da106f7: movabs $0x10bd4e730,%rdx  ;   {metadata({method} {0x000000010bd4e730} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000010da10701: and    $0x7ffff8,%esi
  0x000000010da10707: cmp    $0x0,%esi
  0x000000010da1070a: je     0x000000010da109d2
  0x000000010da10710: mov    0x78(%rsp),%rax
  0x000000010da10715: movabs $0x10bf54448,%rdx  ;   {metadata(method data for {method} {0x000000010bd4e730} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000010da1071f: addq   $0x1,0x108(%rdx)
  0x000000010da10727: mov    0x80(%rsp),%edx
  0x000000010da1072e: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x000000010da10733: nop
  0x000000010da10734: nop
  0x000000010da10735: nop
  0x000000010da10736: nop
  0x000000010da10737: callq  0x000000010d94a0a0  ; OopMap{[120]=Oop [136]=Oop off=1820}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000010da1073c: mov    0x78(%rsp),%rax
  0x000000010da10741: movabs $0x10beab188,%rdx  ;   {metadata(method data for {method} {0x000000010bdf0d50} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000010da1074b: mov    0x8(%rax),%eax
  0x000000010da1074e: shl    $0x3,%rax
  0x000000010da10752: cmp    0x1d0(%rdx),%rax
  0x000000010da10759: jne    0x000000010da10768
  0x000000010da1075b: addq   $0x1,0x1d8(%rdx)
  0x000000010da10763: jmpq   0x000000010da107ce
  0x000000010da10768: cmp    0x1e0(%rdx),%rax
  0x000000010da1076f: jne    0x000000010da1077e
  0x000000010da10771: addq   $0x1,0x1e8(%rdx)
  0x000000010da10779: jmpq   0x000000010da107ce
  0x000000010da1077e: cmpq   $0x0,0x1d0(%rdx)
  0x000000010da10789: jne    0x000000010da107a2
  0x000000010da1078b: mov    %rax,0x1d0(%rdx)
  0x000000010da10792: movq   $0x1,0x1d8(%rdx)
  0x000000010da1079d: jmpq   0x000000010da107ce
  0x000000010da107a2: cmpq   $0x0,0x1e0(%rdx)
  0x000000010da107ad: jne    0x000000010da107c6
  0x000000010da107af: mov    %rax,0x1e0(%rdx)
  0x000000010da107b6: movq   $0x1,0x1e8(%rdx)
  0x000000010da107c1: jmpq   0x000000010da107ce
  0x000000010da107c6: addq   $0x1,0x1c8(%rdx)
  0x000000010da107ce: movabs $0x10bf54e90,%rdx  ;   {metadata(method data for {method} {0x000000010bd4f620} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000010da107d8: mov    0xdc(%rdx),%esi
  0x000000010da107de: add    $0x8,%esi
  0x000000010da107e1: mov    %esi,0xdc(%rdx)
  0x000000010da107e7: movabs $0x10bd4f620,%rdx  ;   {metadata({method} {0x000000010bd4f620} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000010da107f1: and    $0x7ffff8,%esi
  0x000000010da107f7: cmp    $0x0,%esi
  0x000000010da107fa: je     0x000000010da109e9
  0x000000010da10800: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010da1080a: mov    0x60(%r15),%rax
  0x000000010da1080e: lea    0x18(%rax),%rdi
  0x000000010da10812: cmp    0x70(%r15),%rdi
  0x000000010da10816: ja     0x000000010da10a00
  0x000000010da1081c: mov    %rdi,0x60(%r15)
  0x000000010da10820: mov    0xa8(%rdx),%rcx
  0x000000010da10827: mov    %rcx,(%rax)
  0x000000010da1082a: mov    %rdx,%rcx
  0x000000010da1082d: shr    $0x3,%rcx
  0x000000010da10831: mov    %ecx,0x8(%rax)
  0x000000010da10834: xor    %rcx,%rcx
  0x000000010da10837: mov    %ecx,0xc(%rax)
  0x000000010da1083a: xor    %rcx,%rcx
  0x000000010da1083d: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000010da10841: mov    0x78(%rsp),%rdx
  0x000000010da10846: mov    0x10(%rdx),%ecx
  0x000000010da10849: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000010da1084d: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000010da10851: mov    %rax,%rdx
  0x000000010da10854: movabs $0x10bf54e90,%rsi  ;   {metadata(method data for {method} {0x000000010bd4f620} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000010da1085e: addq   $0x1,0x108(%rsi)
  0x000000010da10866: mov    %rcx,%rdx
  0x000000010da10869: mov    $0x0,%ecx
  0x000000010da1086e: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000010da10871: mov    %rax,0x90(%rsp)
  0x000000010da10879: nop
  0x000000010da1087a: nop
  0x000000010da1087b: nop
  0x000000010da1087c: nop
  0x000000010da1087d: nop
  0x000000010da1087e: nop
  0x000000010da1087f: callq  0x000000010d94a0a0  ; OopMap{[136]=Oop [144]=Oop off=2148}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000010da10884: mov    0x88(%rsp),%rax
  0x000000010da1088c: movabs $0x10beab188,%rdx  ;   {metadata(method data for {method} {0x000000010bdf0d50} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000010da10896: addq   $0x1,0x1f8(%rdx)
  0x000000010da1089e: mov    0x90(%rsp),%rdx
  0x000000010da108a6: mov    0x88(%rsp),%rsi    ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x000000010da108ae: nop
  0x000000010da108af: callq  0x000000010d94a0a0  ; OopMap{[136]=Oop off=2196}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000010da108b4: mov    0x88(%rsp),%rax
  0x000000010da108bc: jmpq   0x000000010da10a38
  0x000000010da108c1: mov    %rbx,0x8(%rsp)
  0x000000010da108c6: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da108ce: callq  0x000000010da074e0  ; OopMap{r8=Oop off=2227}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x000000010da108d3: jmpq   0x000000010da10067
  0x000000010da108d8: callq  0x000000010d975360  ; OopMap{r8=Oop off=2237}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x000000010da108dd: jmpq   0x000000010da10121
  0x000000010da108e2: callq  0x000000010d9749c0  ; OopMap{r8=Oop rax=Oop off=2247}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x000000010da108e7: mov    %rdx,0x8(%rsp)
  0x000000010da108ec: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da108f4: callq  0x000000010da074e0  ; OopMap{r8=Oop rax=Oop off=2265}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x000000010da108f9: jmpq   0x000000010da1016c
  0x000000010da108fe: nop
  0x000000010da108ff: callq  0x000000010d94a520  ; OopMap{[112]=Oop off=2276}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x000000010da10904: jmpq   0x000000010da10250
  0x000000010da10909: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010da10913: mov    $0xa050f00,%eax
  0x000000010da10918: callq  0x000000010da05ba0  ; OopMap{off=2301}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x000000010da1091d: jmpq   0x000000010da10270
  0x000000010da10922: mov    %rdx,%rdx
  0x000000010da10925: callq  0x000000010d975ca0  ; OopMap{off=2314}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x000000010da1092a: jmpq   0x000000010da102b5
  0x000000010da1092f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010da10939: mov    $0xa050f00,%eax
  0x000000010da1093e: callq  0x000000010da05ba0  ; OopMap{rax=Oop off=2339}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x000000010da10943: jmpq   0x000000010da102b8
  0x000000010da10948: mov    %rdx,%rdx
  0x000000010da1094b: callq  0x000000010d975ca0  ; OopMap{[136]=Oop off=2352}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x000000010da10950: jmpq   0x000000010da10301
  0x000000010da10955: mov    %rbx,0x8(%rsp)
  0x000000010da1095a: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da10962: callq  0x000000010da074e0  ; OopMap{[136]=Oop rax=Oop off=2375}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000010da10967: jmpq   0x000000010da10348
  0x000000010da1096c: mov    %rbx,0x8(%rsp)
  0x000000010da10971: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da10979: callq  0x000000010da074e0  ; OopMap{[136]=Oop rax=Oop off=2398}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000010da1097e: jmpq   0x000000010da1038f
  0x000000010da10983: mov    %rbx,0x8(%rsp)
  0x000000010da10988: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da10990: callq  0x000000010da074e0  ; OopMap{[136]=Oop rax=Oop off=2421}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000010da10995: jmpq   0x000000010da103d6
  0x000000010da1099a: callq  0x000000010d975360  ; OopMap{[136]=Oop r13=Oop off=2431}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000010da1099f: jmpq   0x000000010da10455
  0x000000010da109a4: mov    %rdx,0x8(%rsp)
  0x000000010da109a9: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da109b1: callq  0x000000010da074e0  ; OopMap{[136]=Oop r13=Oop off=2454}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x000000010da109b6: jmpq   0x000000010da10537
  0x000000010da109bb: mov    %rdx,0x8(%rsp)
  0x000000010da109c0: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da109c8: callq  0x000000010da074e0  ; OopMap{[120]=Oop [136]=Oop off=2477}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x000000010da109cd: jmpq   0x000000010da10620
  0x000000010da109d2: mov    %rdx,0x8(%rsp)
  0x000000010da109d7: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da109df: callq  0x000000010da074e0  ; OopMap{[120]=Oop [136]=Oop off=2500}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x000000010da109e4: jmpq   0x000000010da10710
  0x000000010da109e9: mov    %rdx,0x8(%rsp)
  0x000000010da109ee: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da109f6: callq  0x000000010da074e0  ; OopMap{[120]=Oop [136]=Oop off=2523}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x000000010da109fb: jmpq   0x000000010da10800
  0x000000010da10a00: mov    %rdx,%rdx
  0x000000010da10a03: callq  0x000000010d975ca0  ; OopMap{[120]=Oop [136]=Oop off=2536}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x000000010da10a08: jmpq   0x000000010da10841
  0x000000010da10a0d: nop
  0x000000010da10a0e: nop
  0x000000010da10a0f: mov    0x2a8(%r15),%rax
  0x000000010da10a16: movabs $0x0,%r10
  0x000000010da10a20: mov    %r10,0x2a8(%r15)
  0x000000010da10a27: movabs $0x0,%r10
  0x000000010da10a31: mov    %r10,0x2b0(%r15)
  0x000000010da10a38: add    $0xa0,%rsp
  0x000000010da10a3f: pop    %rbp
  0x000000010da10a40: jmpq   0x000000010d976a20  ;   {runtime_call}
  0x000000010da10a45: hlt    
  0x000000010da10a46: hlt    
  0x000000010da10a47: hlt    
  0x000000010da10a48: hlt    
  0x000000010da10a49: hlt    
  0x000000010da10a4a: hlt    
  0x000000010da10a4b: hlt    
  0x000000010da10a4c: hlt    
  0x000000010da10a4d: hlt    
  0x000000010da10a4e: hlt    
  0x000000010da10a4f: hlt    
  0x000000010da10a50: hlt    
  0x000000010da10a51: hlt    
  0x000000010da10a52: hlt    
  0x000000010da10a53: hlt    
  0x000000010da10a54: hlt    
  0x000000010da10a55: hlt    
  0x000000010da10a56: hlt    
  0x000000010da10a57: hlt    
  0x000000010da10a58: hlt    
  0x000000010da10a59: hlt    
  0x000000010da10a5a: hlt    
  0x000000010da10a5b: hlt    
  0x000000010da10a5c: hlt    
  0x000000010da10a5d: hlt    
  0x000000010da10a5e: hlt    
  0x000000010da10a5f: hlt    
[Stub Code]
  0x000000010da10a60: nop                       ;   {no_reloc}
  0x000000010da10a61: nop
  0x000000010da10a62: nop
  0x000000010da10a63: nop
  0x000000010da10a64: nop
  0x000000010da10a65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010da10a6f: jmpq   0x000000010da10a6f  ;   {runtime_call}
  0x000000010da10a74: nop
  0x000000010da10a75: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010da10a7f: jmpq   0x000000010da10a7f  ;   {runtime_call}
  0x000000010da10a84: nop
  0x000000010da10a85: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010da10a8f: jmpq   0x000000010da10a8f  ;   {runtime_call}
  0x000000010da10a94: nop
  0x000000010da10a95: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010da10a9f: jmpq   0x000000010da10a9f  ;   {runtime_call}
  0x000000010da10aa4: nop
  0x000000010da10aa5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010da10aaf: jmpq   0x000000010da10aaf  ;   {runtime_call}
  0x000000010da10ab4: nop
  0x000000010da10ab5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010da10abf: jmpq   0x000000010da10abf  ;   {runtime_call}
[Exception Handler]
  0x000000010da10ac4: callq  0x000000010d974060  ;   {runtime_call}
  0x000000010da10ac9: mov    %rsp,-0x28(%rsp)
  0x000000010da10ace: sub    $0x80,%rsp
  0x000000010da10ad5: mov    %rax,0x78(%rsp)
  0x000000010da10ada: mov    %rcx,0x70(%rsp)
  0x000000010da10adf: mov    %rdx,0x68(%rsp)
  0x000000010da10ae4: mov    %rbx,0x60(%rsp)
  0x000000010da10ae9: mov    %rbp,0x50(%rsp)
  0x000000010da10aee: mov    %rsi,0x48(%rsp)
  0x000000010da10af3: mov    %rdi,0x40(%rsp)
  0x000000010da10af8: mov    %r8,0x38(%rsp)
  0x000000010da10afd: mov    %r9,0x30(%rsp)
  0x000000010da10b02: mov    %r10,0x28(%rsp)
  0x000000010da10b07: mov    %r11,0x20(%rsp)
  0x000000010da10b0c: mov    %r12,0x18(%rsp)
  0x000000010da10b11: mov    %r13,0x10(%rsp)
  0x000000010da10b16: mov    %r14,0x8(%rsp)
  0x000000010da10b1b: mov    %r15,(%rsp)
  0x000000010da10b1f: movabs $0x1099e391c,%rdi  ;   {external_word}
  0x000000010da10b29: movabs $0x10da10ac9,%rsi  ;   {internal_word}
  0x000000010da10b33: mov    %rsp,%rdx
  0x000000010da10b36: and    $0xfffffffffffffff0,%rsp
  0x000000010da10b3a: callq  0x0000000109807a0e  ;   {runtime_call}
  0x000000010da10b3f: hlt    
[Deopt Handler Code]
  0x000000010da10b40: movabs $0x10da10b40,%r10  ;   {section_word}
  0x000000010da10b4a: push   %r10
  0x000000010da10b4c: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da10b51: hlt    
  0x000000010da10b52: hlt    
  0x000000010da10b53: hlt    
  0x000000010da10b54: hlt    
  0x000000010da10b55: hlt    
  0x000000010da10b56: hlt    
  0x000000010da10b57: hlt    
<nmethod compile_id='2' compiler='C1' level='3' entry='0x000000010da10020' size='4856' address='0x000000010da0fe10' relocation_offset='296' insts_offset='528' stub_offset='3152' scopes_data_offset='3472' scopes_pcs_offset='4096' dependencies_offset='4832' nul_chk_table_offset='4840' oops_offset='3400' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='2205' iicount='2205' stamp='0.193'/>
<writer thread='3331'/>
<task_queued compile_id='20' method='java/lang/String length ()I' bytes='6' count='5888' iicount='5888' level='3' stamp='0.193' comment='tiered' hot_count='5888'/>
<task_queued compile_id='21' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='1664' iicount='1664' level='1' stamp='0.193' comment='tiered' hot_count='1664'/>
<writer thread='17923'/>
Decoding compiled method 0x000000010da12a50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010bcd8c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000010da12ba0: mov    0x8(%rsi),%r10d
  0x000000010da12ba4: shl    $0x3,%r10
  0x000000010da12ba8: cmp    %rax,%r10
  0x000000010da12bab: jne    0x000000010d949e60  ;   {runtime_call}
  0x000000010da12bb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010da12bbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010da12bc0: mov    %eax,-0x14000(%rsp)
  0x000000010da12bc7: push   %rbp
  0x000000010da12bc8: sub    $0x30,%rsp
  0x000000010da12bcc: movabs $0x10bd8e378,%rax
  0x000000010da12bd6: mov    0x8(%rax),%edi
  0x000000010da12bd9: add    $0x8,%edi
  0x000000010da12bdc: mov    %edi,0x8(%rax)
  0x000000010da12bdf: movabs $0x10bcd8c60,%rax  ;   {metadata({method} {0x000000010bcd8c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000010da12be9: and    $0x3ff8,%edi
  0x000000010da12bef: cmp    $0x0,%edi
  0x000000010da12bf2: je     0x000000010da12c0e  ;*aload_0
                                                ; - java.lang.String::length@0 (line 623)

  0x000000010da12bf8: mov    0xc(%rsi),%eax
  0x000000010da12bfb: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x000000010da12bff: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; implicit exception: dispatches to 0x000000010da12c22
  0x000000010da12c02: add    $0x30,%rsp
  0x000000010da12c06: pop    %rbp
  0x000000010da12c07: test   %eax,-0x572cb0d(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da12c0d: retq   
  0x000000010da12c0e: mov    %rax,0x8(%rsp)
  0x000000010da12c13: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da12c1b: callq  0x000000010da074e0  ; OopMap{rsi=Oop off=128}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ;   {runtime_call}
  0x000000010da12c20: jmp    0x000000010da12bf8
  0x000000010da12c22: callq  0x000000010d9749c0  ; OopMap{off=135}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x000000010da12c27: nop
  0x000000010da12c28: nop
  0x000000010da12c29: mov    0x2a8(%r15),%rax
  0x000000010da12c30: movabs $0x0,%r10
  0x000000010da12c3a: mov    %r10,0x2a8(%r15)
  0x000000010da12c41: movabs $0x0,%r10
  0x000000010da12c4b: mov    %r10,0x2b0(%r15)
  0x000000010da12c52: add    $0x30,%rsp
  0x000000010da12c56: pop    %rbp
  0x000000010da12c57: jmpq   0x000000010d976a20  ;   {runtime_call}
  0x000000010da12c5c: hlt    
  0x000000010da12c5d: hlt    
  0x000000010da12c5e: hlt    
  0x000000010da12c5f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010da12c60: callq  0x000000010d974060  ;   {no_reloc}
  0x000000010da12c65: mov    %rsp,-0x28(%rsp)
  0x000000010da12c6a: sub    $0x80,%rsp
  0x000000010da12c71: mov    %rax,0x78(%rsp)
  0x000000010da12c76: mov    %rcx,0x70(%rsp)
  0x000000010da12c7b: mov    %rdx,0x68(%rsp)
  0x000000010da12c80: mov    %rbx,0x60(%rsp)
  0x000000010da12c85: mov    %rbp,0x50(%rsp)
  0x000000010da12c8a: mov    %rsi,0x48(%rsp)
  0x000000010da12c8f: mov    %rdi,0x40(%rsp)
  0x000000010da12c94: mov    %r8,0x38(%rsp)
  0x000000010da12c99: mov    %r9,0x30(%rsp)
  0x000000010da12c9e: mov    %r10,0x28(%rsp)
  0x000000010da12ca3: mov    %r11,0x20(%rsp)
  0x000000010da12ca8: mov    %r12,0x18(%rsp)
  0x000000010da12cad: mov    %r13,0x10(%rsp)
  0x000000010da12cb2: mov    %r14,0x8(%rsp)
  0x000000010da12cb7: mov    %r15,(%rsp)
  0x000000010da12cbb: movabs $0x1099e391c,%rdi  ;   {external_word}
  0x000000010da12cc5: movabs $0x10da12c65,%rsi  ;   {internal_word}
  0x000000010da12ccf: mov    %rsp,%rdx
  0x000000010da12cd2: and    $0xfffffffffffffff0,%rsp
  0x000000010da12cd6: callq  0x0000000109807a0e  ;   {runtime_call}
  0x000000010da12cdb: hlt    
[Deopt Handler Code]
  0x000000010da12cdc: movabs $0x10da12cdc,%r10  ;   {section_word}
  0x000000010da12ce6: push   %r10
  0x000000010da12ce8: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da12ced: hlt    
  0x000000010da12cee: hlt    
  0x000000010da12cef: hlt    
<nmethod compile_id='20' compiler='C1' level='2' entry='0x000000010da12ba0' size='856' address='0x000000010da12a50' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='720' dependencies_offset='832' nul_chk_table_offset='840' method='java/lang/String length ()I' bytes='6' count='5927' iicount='5927' stamp='0.194'/>
<writer thread='3331'/>
<task_queued compile_id='22' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='1280' iicount='1280' level='3' stamp='0.194' comment='tiered' hot_count='1280'/>
<task_queued compile_id='23' method='java/lang/ThreadLocal get ()Ljava/lang/Object;' bytes='38' count='768' iicount='768' level='3' stamp='0.194' comment='tiered' hot_count='768'/>
<writer thread='17923'/>
Decoding compiled method 0x000000010da11bd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010be9ae80} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010da11d80: mov    %eax,-0x14000(%rsp)
  0x000000010da11d87: push   %rbp
  0x000000010da11d88: sub    $0x30,%rsp
  0x000000010da11d8c: movabs $0x10be9b008,%rax
  0x000000010da11d96: mov    0x8(%rax),%edi
  0x000000010da11d99: add    $0x8,%edi
  0x000000010da11d9c: mov    %edi,0x8(%rax)
  0x000000010da11d9f: movabs $0x10be9ae80,%rax  ;   {metadata({method} {0x000000010be9ae80} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x000000010da11da9: and    $0x3ff8,%edi
  0x000000010da11daf: cmp    $0x0,%edi
  0x000000010da11db2: je     0x000000010da11f04  ;*iload_0
                                                ; - java.lang.CharacterData::of@0 (line 77)

  0x000000010da11db8: mov    %rsi,%rax
  0x000000010da11dbb: shr    $0x8,%eax
  0x000000010da11dbe: cmp    $0x0,%eax
  0x000000010da11dc1: je     0x000000010da11eee  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x000000010da11dc7: shr    $0x10,%esi
  0x000000010da11dca: cmp    $0x0,%esi
  0x000000010da11dcd: je     0x000000010da11ec6
  0x000000010da11dd3: cmp    $0x1,%esi
  0x000000010da11dd6: je     0x000000010da11e9e
  0x000000010da11ddc: cmp    $0x2,%esi
  0x000000010da11ddf: je     0x000000010da11e76
  0x000000010da11de5: cmp    $0xe,%esi
  0x000000010da11de8: je     0x000000010da11e4e
  0x000000010da11dee: cmp    $0xf,%esi
  0x000000010da11df1: je     0x000000010da11e00
  0x000000010da11df7: cmp    $0x10,%esi
  0x000000010da11dfa: jne    0x000000010da11e26  ;*tableswitch
                                                ; - java.lang.CharacterData::of@15 (line 80)

  0x000000010da11e00: jmpq   0x000000010da11f78  ;   {no_reloc}
  0x000000010da11e05: add    %al,(%rax)
  0x000000010da11e07: add    %al,(%rax)
  0x000000010da11e09: add    %ah,0xf(%rsi)
  0x000000010da11e0c: (bad)  
  0x000000010da11e0d: add    %r8b,(%rax)
  0x000000010da11e10: jmpq   0x000000010da11f92  ; implicit exception: dispatches to 0x000000010da11f82
  0x000000010da11e15: nop
  0x000000010da11e16: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)

  0x000000010da11e1a: add    $0x30,%rsp
  0x000000010da11e1e: pop    %rbp
  0x000000010da11e1f: test   %eax,-0x572bd25(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da11e25: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@115 (line 91)

  0x000000010da11e26: xchg   %ax,%ax
  0x000000010da11e28: jmpq   0x000000010da11ff9  ;   {no_reloc}
  0x000000010da11e2d: add    %al,(%rax)
  0x000000010da11e2f: add    %al,(%rax)
  0x000000010da11e31: add    %ah,0xf(%rsi)
  0x000000010da11e34: (bad)  
  0x000000010da11e35: add    %r8b,(%rax)
  0x000000010da11e38: jmpq   0x000000010da12013  ; implicit exception: dispatches to 0x000000010da12003
  0x000000010da11e3d: nop
  0x000000010da11e3e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)

  0x000000010da11e42: add    $0x30,%rsp
  0x000000010da11e46: pop    %rbp
  0x000000010da11e47: test   %eax,-0x572bd4d(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da11e4d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@119 (line 93)

  0x000000010da11e4e: xchg   %ax,%ax
  0x000000010da11e50: jmpq   0x000000010da1207a  ;   {no_reloc}
  0x000000010da11e55: add    %al,(%rax)
  0x000000010da11e57: add    %al,(%rax)
  0x000000010da11e59: add    %ah,0xf(%rsi)
  0x000000010da11e5c: (bad)  
  0x000000010da11e5d: add    %r8b,(%rax)
  0x000000010da11e60: jmpq   0x000000010da12094  ; implicit exception: dispatches to 0x000000010da12084
  0x000000010da11e65: nop
  0x000000010da11e66: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)

  0x000000010da11e6a: add    $0x30,%rsp
  0x000000010da11e6e: pop    %rbp
  0x000000010da11e6f: test   %eax,-0x572bd75(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da11e75: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@111 (line 88)

  0x000000010da11e76: xchg   %ax,%ax
  0x000000010da11e78: jmpq   0x000000010da120fb  ;   {no_reloc}
  0x000000010da11e7d: add    %al,(%rax)
  0x000000010da11e7f: add    %al,(%rax)
  0x000000010da11e81: add    %ah,0xf(%rsi)
  0x000000010da11e84: (bad)  
  0x000000010da11e85: add    %r8b,(%rax)
  0x000000010da11e88: jmpq   0x000000010da12115  ; implicit exception: dispatches to 0x000000010da12105
  0x000000010da11e8d: nop
  0x000000010da11e8e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)

  0x000000010da11e92: add    $0x30,%rsp
  0x000000010da11e96: pop    %rbp
  0x000000010da11e97: test   %eax,-0x572bd9d(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da11e9d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@107 (line 86)

  0x000000010da11e9e: xchg   %ax,%ax
  0x000000010da11ea0: jmpq   0x000000010da1217c  ;   {no_reloc}
  0x000000010da11ea5: add    %al,(%rax)
  0x000000010da11ea7: add    %al,(%rax)
  0x000000010da11ea9: add    %ah,0xf(%rsi)
  0x000000010da11eac: (bad)  
  0x000000010da11ead: add    %r8b,(%rax)
  0x000000010da11eb0: jmpq   0x000000010da12196  ; implicit exception: dispatches to 0x000000010da12186
  0x000000010da11eb5: nop
  0x000000010da11eb6: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)

  0x000000010da11eba: add    $0x30,%rsp
  0x000000010da11ebe: pop    %rbp
  0x000000010da11ebf: test   %eax,-0x572bdc5(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da11ec5: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@103 (line 84)

  0x000000010da11ec6: xchg   %ax,%ax
  0x000000010da11ec8: jmpq   0x000000010da121fd  ;   {no_reloc}
  0x000000010da11ecd: add    %al,(%rax)
  0x000000010da11ecf: add    %al,(%rax)
  0x000000010da11ed1: add    %ah,0xf(%rsi)
  0x000000010da11ed4: (bad)  
  0x000000010da11ed5: add    %r8b,(%rax)
  0x000000010da11ed8: jmpq   0x000000010da12217  ; implicit exception: dispatches to 0x000000010da12207
  0x000000010da11edd: nop
  0x000000010da11ede: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)

  0x000000010da11ee2: add    $0x30,%rsp
  0x000000010da11ee6: pop    %rbp
  0x000000010da11ee7: test   %eax,-0x572bded(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da11eed: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@99 (line 82)

  0x000000010da11eee: movabs $0x76ab516d8,%rax  ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000010da11ef8: add    $0x30,%rsp
  0x000000010da11efc: pop    %rbp
  0x000000010da11efd: test   %eax,-0x572be03(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da11f03: retq   
  0x000000010da11f04: mov    %rax,0x8(%rsp)
  0x000000010da11f09: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da11f11: callq  0x000000010da074e0  ; OopMap{off=406}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)
                                                ;   {runtime_call}
  0x000000010da11f16: jmpq   0x000000010da11db8
  0x000000010da11f1b: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010da11f25: push   %rax
  0x000000010da11f26: push   %rbx
  0x000000010da11f27: mov    0x48(%rax),%rbx
  0x000000010da11f2b: push   %rdi
  0x000000010da11f2c: push   %rsi
  0x000000010da11f2d: push   %rdx
  0x000000010da11f2e: push   %rcx
  0x000000010da11f2f: push   %r8
  0x000000010da11f31: push   %r9
  0x000000010da11f33: push   %r10
  0x000000010da11f35: mov    %rsp,%r10
  0x000000010da11f38: and    $0xfffffffffffffff0,%rsp
  0x000000010da11f3c: push   %r10
  0x000000010da11f3e: push   %r11
  0x000000010da11f40: mov    $0x10c,%edi
  0x000000010da11f45: movabs $0x7fff6db7fbf5,%r10  ;   {runtime_call}
  0x000000010da11f4f: callq  *%r10
  0x000000010da11f52: pop    %r11
  0x000000010da11f54: pop    %rsp
  0x000000010da11f55: pop    %r10
  0x000000010da11f57: pop    %r9
  0x000000010da11f59: pop    %r8
  0x000000010da11f5b: pop    %rcx
  0x000000010da11f5c: pop    %rdx
  0x000000010da11f5d: pop    %rsi
  0x000000010da11f5e: pop    %rdi
  0x000000010da11f5f: cmp    0x118(%rbx),%rax
  0x000000010da11f66: pop    %rbx
  0x000000010da11f67: pop    %rax
  0x000000010da11f68: jne    0x000000010da11f78
  0x000000010da11f6e: jmpq   0x000000010da11e0a
  0x000000010da11f73: mov    $0xa535d00,%eax
  0x000000010da11f78: callq  0x000000010da05fa0  ; OopMap{off=509}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x000000010da11f7d: jmpq   0x000000010da11e00
  0x000000010da11f82: callq  0x000000010d9749c0  ; OopMap{rax=Oop off=519}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x000000010da11f87: mov    0x0(%rax),%eax
  0x000000010da11f8d: mov    $0x6050b00,%eax
  0x000000010da11f92: callq  0x000000010da055a0  ; OopMap{rax=Oop off=535}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x000000010da11f97: jmpq   0x000000010da11e10
  0x000000010da11f9c: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010da11fa6: push   %rax
  0x000000010da11fa7: push   %rbx
  0x000000010da11fa8: mov    0x48(%rax),%rbx
  0x000000010da11fac: push   %rdi
  0x000000010da11fad: push   %rsi
  0x000000010da11fae: push   %rdx
  0x000000010da11faf: push   %rcx
  0x000000010da11fb0: push   %r8
  0x000000010da11fb2: push   %r9
  0x000000010da11fb4: push   %r10
  0x000000010da11fb6: mov    %rsp,%r10
  0x000000010da11fb9: and    $0xfffffffffffffff0,%rsp
  0x000000010da11fbd: push   %r10
  0x000000010da11fbf: push   %r11
  0x000000010da11fc1: mov    $0x10c,%edi
  0x000000010da11fc6: movabs $0x7fff6db7fbf5,%r10  ;   {runtime_call}
  0x000000010da11fd0: callq  *%r10
  0x000000010da11fd3: pop    %r11
  0x000000010da11fd5: pop    %rsp
  0x000000010da11fd6: pop    %r10
  0x000000010da11fd8: pop    %r9
  0x000000010da11fda: pop    %r8
  0x000000010da11fdc: pop    %rcx
  0x000000010da11fdd: pop    %rdx
  0x000000010da11fde: pop    %rsi
  0x000000010da11fdf: pop    %rdi
  0x000000010da11fe0: cmp    0x118(%rbx),%rax
  0x000000010da11fe7: pop    %rbx
  0x000000010da11fe8: pop    %rax
  0x000000010da11fe9: jne    0x000000010da11ff9
  0x000000010da11fef: jmpq   0x000000010da11e32
  0x000000010da11ff4: mov    $0xa535d00,%eax
  0x000000010da11ff9: callq  0x000000010da05fa0  ; OopMap{off=638}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x000000010da11ffe: jmpq   0x000000010da11e28
  0x000000010da12003: callq  0x000000010d9749c0  ; OopMap{rax=Oop off=648}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x000000010da12008: mov    0x0(%rax),%eax
  0x000000010da1200e: mov    $0x6050b00,%eax
  0x000000010da12013: callq  0x000000010da055a0  ; OopMap{rax=Oop off=664}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x000000010da12018: jmpq   0x000000010da11e38
  0x000000010da1201d: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010da12027: push   %rax
  0x000000010da12028: push   %rbx
  0x000000010da12029: mov    0x48(%rax),%rbx
  0x000000010da1202d: push   %rdi
  0x000000010da1202e: push   %rsi
  0x000000010da1202f: push   %rdx
  0x000000010da12030: push   %rcx
  0x000000010da12031: push   %r8
  0x000000010da12033: push   %r9
  0x000000010da12035: push   %r10
  0x000000010da12037: mov    %rsp,%r10
  0x000000010da1203a: and    $0xfffffffffffffff0,%rsp
  0x000000010da1203e: push   %r10
  0x000000010da12040: push   %r11
  0x000000010da12042: mov    $0x10c,%edi
  0x000000010da12047: movabs $0x7fff6db7fbf5,%r10  ;   {runtime_call}
  0x000000010da12051: callq  *%r10
  0x000000010da12054: pop    %r11
  0x000000010da12056: pop    %rsp
  0x000000010da12057: pop    %r10
  0x000000010da12059: pop    %r9
  0x000000010da1205b: pop    %r8
  0x000000010da1205d: pop    %rcx
  0x000000010da1205e: pop    %rdx
  0x000000010da1205f: pop    %rsi
  0x000000010da12060: pop    %rdi
  0x000000010da12061: cmp    0x118(%rbx),%rax
  0x000000010da12068: pop    %rbx
  0x000000010da12069: pop    %rax
  0x000000010da1206a: jne    0x000000010da1207a
  0x000000010da12070: jmpq   0x000000010da11e5a
  0x000000010da12075: mov    $0xa535d00,%eax
  0x000000010da1207a: callq  0x000000010da05fa0  ; OopMap{off=767}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x000000010da1207f: jmpq   0x000000010da11e50
  0x000000010da12084: callq  0x000000010d9749c0  ; OopMap{rax=Oop off=777}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x000000010da12089: mov    0x0(%rax),%eax
  0x000000010da1208f: mov    $0x6050b00,%eax
  0x000000010da12094: callq  0x000000010da055a0  ; OopMap{rax=Oop off=793}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x000000010da12099: jmpq   0x000000010da11e60
  0x000000010da1209e: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010da120a8: push   %rax
  0x000000010da120a9: push   %rbx
  0x000000010da120aa: mov    0x48(%rax),%rbx
  0x000000010da120ae: push   %rdi
  0x000000010da120af: push   %rsi
  0x000000010da120b0: push   %rdx
  0x000000010da120b1: push   %rcx
  0x000000010da120b2: push   %r8
  0x000000010da120b4: push   %r9
  0x000000010da120b6: push   %r10
  0x000000010da120b8: mov    %rsp,%r10
  0x000000010da120bb: and    $0xfffffffffffffff0,%rsp
  0x000000010da120bf: push   %r10
  0x000000010da120c1: push   %r11
  0x000000010da120c3: mov    $0x10c,%edi
  0x000000010da120c8: movabs $0x7fff6db7fbf5,%r10  ;   {runtime_call}
  0x000000010da120d2: callq  *%r10
  0x000000010da120d5: pop    %r11
  0x000000010da120d7: pop    %rsp
  0x000000010da120d8: pop    %r10
  0x000000010da120da: pop    %r9
  0x000000010da120dc: pop    %r8
  0x000000010da120de: pop    %rcx
  0x000000010da120df: pop    %rdx
  0x000000010da120e0: pop    %rsi
  0x000000010da120e1: pop    %rdi
  0x000000010da120e2: cmp    0x118(%rbx),%rax
  0x000000010da120e9: pop    %rbx
  0x000000010da120ea: pop    %rax
  0x000000010da120eb: jne    0x000000010da120fb
  0x000000010da120f1: jmpq   0x000000010da11e82
  0x000000010da120f6: mov    $0xa535d00,%eax
  0x000000010da120fb: callq  0x000000010da05fa0  ; OopMap{off=896}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x000000010da12100: jmpq   0x000000010da11e78
  0x000000010da12105: callq  0x000000010d9749c0  ; OopMap{rax=Oop off=906}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x000000010da1210a: mov    0x0(%rax),%eax
  0x000000010da12110: mov    $0x6050b00,%eax
  0x000000010da12115: callq  0x000000010da055a0  ; OopMap{rax=Oop off=922}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x000000010da1211a: jmpq   0x000000010da11e88
  0x000000010da1211f: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010da12129: push   %rax
  0x000000010da1212a: push   %rbx
  0x000000010da1212b: mov    0x48(%rax),%rbx
  0x000000010da1212f: push   %rdi
  0x000000010da12130: push   %rsi
  0x000000010da12131: push   %rdx
  0x000000010da12132: push   %rcx
  0x000000010da12133: push   %r8
  0x000000010da12135: push   %r9
  0x000000010da12137: push   %r10
  0x000000010da12139: mov    %rsp,%r10
  0x000000010da1213c: and    $0xfffffffffffffff0,%rsp
  0x000000010da12140: push   %r10
  0x000000010da12142: push   %r11
  0x000000010da12144: mov    $0x10c,%edi
  0x000000010da12149: movabs $0x7fff6db7fbf5,%r10  ;   {runtime_call}
  0x000000010da12153: callq  *%r10
  0x000000010da12156: pop    %r11
  0x000000010da12158: pop    %rsp
  0x000000010da12159: pop    %r10
  0x000000010da1215b: pop    %r9
  0x000000010da1215d: pop    %r8
  0x000000010da1215f: pop    %rcx
  0x000000010da12160: pop    %rdx
  0x000000010da12161: pop    %rsi
  0x000000010da12162: pop    %rdi
  0x000000010da12163: cmp    0x118(%rbx),%rax
  0x000000010da1216a: pop    %rbx
  0x000000010da1216b: pop    %rax
  0x000000010da1216c: jne    0x000000010da1217c
  0x000000010da12172: jmpq   0x000000010da11eaa
  0x000000010da12177: mov    $0xa535d00,%eax
  0x000000010da1217c: callq  0x000000010da05fa0  ; OopMap{off=1025}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x000000010da12181: jmpq   0x000000010da11ea0
  0x000000010da12186: callq  0x000000010d9749c0  ; OopMap{rax=Oop off=1035}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x000000010da1218b: mov    0x0(%rax),%eax
  0x000000010da12191: mov    $0x6050b00,%eax
  0x000000010da12196: callq  0x000000010da055a0  ; OopMap{rax=Oop off=1051}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x000000010da1219b: jmpq   0x000000010da11eb0
  0x000000010da121a0: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010da121aa: push   %rax
  0x000000010da121ab: push   %rbx
  0x000000010da121ac: mov    0x48(%rax),%rbx
  0x000000010da121b0: push   %rdi
  0x000000010da121b1: push   %rsi
  0x000000010da121b2: push   %rdx
  0x000000010da121b3: push   %rcx
  0x000000010da121b4: push   %r8
  0x000000010da121b6: push   %r9
  0x000000010da121b8: push   %r10
  0x000000010da121ba: mov    %rsp,%r10
  0x000000010da121bd: and    $0xfffffffffffffff0,%rsp
  0x000000010da121c1: push   %r10
  0x000000010da121c3: push   %r11
  0x000000010da121c5: mov    $0x10c,%edi
  0x000000010da121ca: movabs $0x7fff6db7fbf5,%r10  ;   {runtime_call}
  0x000000010da121d4: callq  *%r10
  0x000000010da121d7: pop    %r11
  0x000000010da121d9: pop    %rsp
  0x000000010da121da: pop    %r10
  0x000000010da121dc: pop    %r9
  0x000000010da121de: pop    %r8
  0x000000010da121e0: pop    %rcx
  0x000000010da121e1: pop    %rdx
  0x000000010da121e2: pop    %rsi
  0x000000010da121e3: pop    %rdi
  0x000000010da121e4: cmp    0x118(%rbx),%rax
  0x000000010da121eb: pop    %rbx
  0x000000010da121ec: pop    %rax
  0x000000010da121ed: jne    0x000000010da121fd
  0x000000010da121f3: jmpq   0x000000010da11ed2
  0x000000010da121f8: mov    $0xa535d00,%eax
  0x000000010da121fd: callq  0x000000010da05fa0  ; OopMap{off=1154}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x000000010da12202: jmpq   0x000000010da11ec8
  0x000000010da12207: callq  0x000000010d9749c0  ; OopMap{rax=Oop off=1164}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x000000010da1220c: mov    0x0(%rax),%eax
  0x000000010da12212: mov    $0x6050b00,%eax
  0x000000010da12217: callq  0x000000010da055a0  ; OopMap{rax=Oop off=1180}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x000000010da1221c: jmpq   0x000000010da11ed8
  0x000000010da12221: nop
  0x000000010da12222: nop
  0x000000010da12223: mov    0x2a8(%r15),%rax
  0x000000010da1222a: movabs $0x0,%r10
  0x000000010da12234: mov    %r10,0x2a8(%r15)
  0x000000010da1223b: movabs $0x0,%r10
  0x000000010da12245: mov    %r10,0x2b0(%r15)
  0x000000010da1224c: add    $0x30,%rsp
  0x000000010da12250: pop    %rbp
  0x000000010da12251: jmpq   0x000000010d976a20  ;   {runtime_call}
  0x000000010da12256: hlt    
  0x000000010da12257: hlt    
  0x000000010da12258: hlt    
  0x000000010da12259: hlt    
  0x000000010da1225a: hlt    
  0x000000010da1225b: hlt    
  0x000000010da1225c: hlt    
  0x000000010da1225d: hlt    
  0x000000010da1225e: hlt    
  0x000000010da1225f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010da12260: callq  0x000000010d974060  ;   {no_reloc}
  0x000000010da12265: mov    %rsp,-0x28(%rsp)
  0x000000010da1226a: sub    $0x80,%rsp
  0x000000010da12271: mov    %rax,0x78(%rsp)
  0x000000010da12276: mov    %rcx,0x70(%rsp)
  0x000000010da1227b: mov    %rdx,0x68(%rsp)
  0x000000010da12280: mov    %rbx,0x60(%rsp)
  0x000000010da12285: mov    %rbp,0x50(%rsp)
  0x000000010da1228a: mov    %rsi,0x48(%rsp)
  0x000000010da1228f: mov    %rdi,0x40(%rsp)
  0x000000010da12294: mov    %r8,0x38(%rsp)
  0x000000010da12299: mov    %r9,0x30(%rsp)
  0x000000010da1229e: mov    %r10,0x28(%rsp)
  0x000000010da122a3: mov    %r11,0x20(%rsp)
  0x000000010da122a8: mov    %r12,0x18(%rsp)
  0x000000010da122ad: mov    %r13,0x10(%rsp)
  0x000000010da122b2: mov    %r14,0x8(%rsp)
  0x000000010da122b7: mov    %r15,(%rsp)
  0x000000010da122bb: movabs $0x1099e391c,%rdi  ;   {external_word}
  0x000000010da122c5: movabs $0x10da12265,%rsi  ;   {internal_word}
  0x000000010da122cf: mov    %rsp,%rdx
  0x000000010da122d2: and    $0xfffffffffffffff0,%rsp
  0x000000010da122d6: callq  0x0000000109807a0e  ;   {runtime_call}
  0x000000010da122db: hlt    
[Deopt Handler Code]
  0x000000010da122dc: movabs $0x10da122dc,%r10  ;   {section_word}
  0x000000010da122e6: push   %r10
  0x000000010da122e8: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da122ed: hlt    
  0x000000010da122ee: hlt    
  0x000000010da122ef: hlt    
<nmethod compile_id='18' compiler='C1' level='2' entry='0x000000010da11d80' size='2616' address='0x000000010da11bd0' relocation_offset='296' insts_offset='432' stub_offset='1680' scopes_data_offset='1832' scopes_pcs_offset='1976' dependencies_offset='2552' nul_chk_table_offset='2560' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='6787' iicount='6787' stamp='0.202'/>
<writer thread='18435'/>
Decoding compiled method 0x000000010da1be10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010bcd8db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x000000010da1bf60: mov    0x8(%rsi),%r10d
  0x000000010da1bf64: shl    $0x3,%r10
  0x000000010da1bf68: cmp    %r10,%rax
  0x000000010da1bf6b: jne    0x000000010d949e60  ;   {runtime_call}
  0x000000010da1bf71: data16 xchg %ax,%ax
  0x000000010da1bf74: nopl   0x0(%rax,%rax,1)
  0x000000010da1bf7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010da1bf80: mov    %eax,-0x14000(%rsp)
  0x000000010da1bf87: push   %rbp
  0x000000010da1bf88: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x000000010da1bf8c: test   %edx,%edx
  0x000000010da1bf8e: jl     0x000000010da1bfcd  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x000000010da1bf90: mov    0xc(%rsi),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x000000010da1bf94: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x000000010da1bffd
  0x000000010da1bf99: cmp    %ebp,%edx
  0x000000010da1bf9b: jge    0x000000010da1bfe5  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x000000010da1bf9d: cmp    %ebp,%edx
  0x000000010da1bf9f: jae    0x000000010da1bfb7
  0x000000010da1bfa1: shl    $0x3,%r10
  0x000000010da1bfa5: movzwl 0x10(%r10,%rdx,2),%eax
  0x000000010da1bfab: add    $0x20,%rsp
  0x000000010da1bfaf: pop    %rbp
  0x000000010da1bfb0: test   %eax,-0x5735fb6(%rip)        # 0x00000001082e6000
                                                ;   {poll_return}
  0x000000010da1bfb6: retq   
  0x000000010da1bfb7: mov    $0xffffffe4,%esi
  0x000000010da1bfbc: mov    %edx,%ebp
  0x000000010da1bfbe: mov    %r10d,(%rsp)
  0x000000010da1bfc2: nop
  0x000000010da1bfc3: callq  0x000000010d9496a0  ; OopMap{[0]=NarrowOop off=104}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x000000010da1bfc8: callq  0x000000010988b424  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x000000010da1bfcd: mov    %rsi,%rbp
  0x000000010da1bfd0: mov    %edx,0x4(%rsp)
  0x000000010da1bfd4: mov    $0xffffff65,%esi
  0x000000010da1bfd9: xchg   %ax,%ax
  0x000000010da1bfdb: callq  0x000000010d9496a0  ; OopMap{rbp=Oop off=128}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x000000010da1bfe0: callq  0x000000010988b424  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x000000010da1bfe5: mov    %rsi,(%rsp)
  0x000000010da1bfe9: mov    %edx,0xc(%rsp)
  0x000000010da1bfed: mov    $0xffffff65,%esi
  0x000000010da1bff2: nop
  0x000000010da1bff3: callq  0x000000010d9496a0  ; OopMap{[0]=Oop off=152}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x000000010da1bff8: callq  0x000000010988b424  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x000000010da1bffd: mov    $0xfffffff6,%esi
  0x000000010da1c002: nop
  0x000000010da1c003: callq  0x000000010d9496a0  ; OopMap{off=168}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000010da1c008: callq  0x000000010988b424  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000010da1c00d: hlt    
  0x000000010da1c00e: hlt    
  0x000000010da1c00f: hlt    
  0x000000010da1c010: hlt    
  0x000000010da1c011: hlt    
  0x000000010da1c012: hlt    
  0x000000010da1c013: hlt    
  0x000000010da1c014: hlt    
  0x000000010da1c015: hlt    
  0x000000010da1c016: hlt    
  0x000000010da1c017: hlt    
  0x000000010da1c018: hlt    
  0x000000010da1c019: hlt    
  0x000000010da1c01a: hlt    
  0x000000010da1c01b: hlt    
  0x000000010da1c01c: hlt    
  0x000000010da1c01d: hlt    
  0x000000010da1c01e: hlt    
  0x000000010da1c01f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010da1c020: jmpq   0x000000010d973d60  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010da1c025: callq  0x000000010da1c02a
  0x000000010da1c02a: subq   $0x5,(%rsp)
  0x000000010da1c02f: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da1c034: hlt    
  0x000000010da1c035: hlt    
  0x000000010da1c036: hlt    
  0x000000010da1c037: hlt    
<nmethod compile_id='10' compiler='C2' level='4' entry='0x000000010da1bf60' size='928' address='0x000000010da1be10' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='560' scopes_pcs_offset='664' dependencies_offset='904' nul_chk_table_offset='912' method='java/lang/String charAt (I)C' bytes='29' count='60390' iicount='60390' stamp='0.204'/>
<writer thread='17923'/>
Decoding compiled method 0x000000010da18790:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010be9b558} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rsi:rsi   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010da18900: mov    0x8(%rsi),%r10d
  0x000000010da18904: shl    $0x3,%r10
  0x000000010da18908: cmp    %rax,%r10
  0x000000010da1890b: jne    0x000000010d949e60  ;   {runtime_call}
  0x000000010da18911: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010da1891c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010da18920: mov    %eax,-0x14000(%rsp)
  0x000000010da18927: push   %rbp
  0x000000010da18928: sub    $0x30,%rsp
  0x000000010da1892c: movabs $0x10be9c868,%rax
  0x000000010da18936: mov    0x8(%rax),%edi
  0x000000010da18939: add    $0x8,%edi
  0x000000010da1893c: mov    %edi,0x8(%rax)
  0x000000010da1893f: movabs $0x10be9b558,%rax  ;   {metadata({method} {0x000000010be9b558} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000010da18949: and    $0x3ff8,%edi
  0x000000010da1894f: cmp    $0x0,%edi
  0x000000010da18952: je     0x000000010da18984  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x000000010da18958: and    $0xffff,%edx
  0x000000010da1895e: movabs $0x76ab516e8,%rax  ;   {oop([I)}
  0x000000010da18968: movslq %edx,%rsi
  0x000000010da1896b: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x000000010da18998
  0x000000010da1896e: jae    0x000000010da189a2
  0x000000010da18974: mov    0x10(%rax,%rsi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x000000010da18978: add    $0x30,%rsp
  0x000000010da1897c: pop    %rbp
  0x000000010da1897d: test   %eax,-0x5732883(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da18983: retq   
  0x000000010da18984: mov    %rax,0x8(%rsp)
  0x000000010da18989: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da18991: callq  0x000000010da074e0  ; OopMap{rsi=Oop off=150}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ;   {runtime_call}
  0x000000010da18996: jmp    0x000000010da18958
  0x000000010da18998: callq  0x000000010d9749c0  ; OopMap{rax=Oop off=157}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x000000010da1899d: callq  0x000000010d9749c0  ; OopMap{rax=Oop off=162}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x000000010da189a2: mov    %rdx,(%rsp)
  0x000000010da189a6: callq  0x000000010d976580  ; OopMap{rax=Oop off=171}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x000000010da189ab: nop
  0x000000010da189ac: nop
  0x000000010da189ad: mov    0x2a8(%r15),%rax
  0x000000010da189b4: movabs $0x0,%r10
  0x000000010da189be: mov    %r10,0x2a8(%r15)
  0x000000010da189c5: movabs $0x0,%r10
  0x000000010da189cf: mov    %r10,0x2b0(%r15)
  0x000000010da189d6: add    $0x30,%rsp
  0x000000010da189da: pop    %rbp
  0x000000010da189db: jmpq   0x000000010d976a20  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x000000010da189e0: callq  0x000000010d974060  ;   {no_reloc}
  0x000000010da189e5: mov    %rsp,-0x28(%rsp)
  0x000000010da189ea: sub    $0x80,%rsp
  0x000000010da189f1: mov    %rax,0x78(%rsp)
  0x000000010da189f6: mov    %rcx,0x70(%rsp)
  0x000000010da189fb: mov    %rdx,0x68(%rsp)
  0x000000010da18a00: mov    %rbx,0x60(%rsp)
  0x000000010da18a05: mov    %rbp,0x50(%rsp)
  0x000000010da18a0a: mov    %rsi,0x48(%rsp)
  0x000000010da18a0f: mov    %rdi,0x40(%rsp)
  0x000000010da18a14: mov    %r8,0x38(%rsp)
  0x000000010da18a19: mov    %r9,0x30(%rsp)
  0x000000010da18a1e: mov    %r10,0x28(%rsp)
  0x000000010da18a23: mov    %r11,0x20(%rsp)
  0x000000010da18a28: mov    %r12,0x18(%rsp)
  0x000000010da18a2d: mov    %r13,0x10(%rsp)
  0x000000010da18a32: mov    %r14,0x8(%rsp)
  0x000000010da18a37: mov    %r15,(%rsp)
  0x000000010da18a3b: movabs $0x1099e391c,%rdi  ;   {external_word}
  0x000000010da18a45: movabs $0x10da189e5,%rsi  ;   {internal_word}
  0x000000010da18a4f: mov    %rsp,%rdx
  0x000000010da18a52: and    $0xfffffffffffffff0,%rsp
  0x000000010da18a56: callq  0x0000000109807a0e  ;   {runtime_call}
  0x000000010da18a5b: hlt    
[Deopt Handler Code]
  0x000000010da18a5c: movabs $0x10da18a5c,%r10  ;   {section_word}
  0x000000010da18a66: push   %r10
  0x000000010da18a68: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da18a6d: hlt    
  0x000000010da18a6e: hlt    
  0x000000010da18a6f: hlt    
<nmethod compile_id='19' compiler='C1' level='2' entry='0x000000010da18900' size='952' address='0x000000010da18790' relocation_offset='296' insts_offset='368' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='792' dependencies_offset='920' nul_chk_table_offset='928' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='6787' iicount='6787' stamp='0.205'/>
<writer thread='16131'/>
Decoding compiled method 0x000000010da17f50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010bcd9618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000010da180a0: mov    0x8(%rsi),%r10d
  0x000000010da180a4: shl    $0x3,%r10
  0x000000010da180a8: cmp    %r10,%rax
  0x000000010da180ab: jne    0x000000010d949e60  ;   {runtime_call}
  0x000000010da180b1: data16 xchg %ax,%ax
  0x000000010da180b4: nopl   0x0(%rax,%rax,1)
  0x000000010da180bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010da180c0: mov    %eax,-0x14000(%rsp)
  0x000000010da180c7: push   %rbp
  0x000000010da180c8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)

  0x000000010da180cc: cmp    %rdx,%rsi
  0x000000010da180cf: je     0x000000010da1810a  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x000000010da180d1: test   %rdx,%rdx
  0x000000010da180d4: je     0x000000010da180fc
  0x000000010da180d6: mov    0x8(%rdx),%r11d
  0x000000010da180da: cmp    $0xf80002da,%r11d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010da180e1: jne    0x000000010da182b1  ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x000000010da180e7: mov    0xc(%rsi),%edi     ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x000000010da180ea: mov    0xc(%r12,%rdi,8),%eax  ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ; implicit exception: dispatches to 0x000000010da182c9
  0x000000010da180ef: mov    0xc(%rdx),%r9d     ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x000000010da180f3: mov    0xc(%r12,%r9,8),%ecx  ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x000000010da182d9
  0x000000010da180f8: cmp    %ecx,%eax
  0x000000010da180fa: je     0x000000010da18111  ;*iconst_0
                                                ; - java.lang.String::equals@79 (line 995)

  0x000000010da180fc: xor    %eax,%eax          ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)

  0x000000010da180fe: add    $0x30,%rsp
  0x000000010da18102: pop    %rbp
  0x000000010da18103: test   %eax,-0x5732109(%rip)        # 0x00000001082e6000
                                                ;   {poll_return}
  0x000000010da18109: retq   
  0x000000010da1810a: mov    $0x1,%eax
  0x000000010da1810f: jmp    0x000000010da180fe
  0x000000010da18111: test   %eax,%eax
  0x000000010da18113: je     0x000000010da1825d  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x000000010da18119: mov    %eax,%r10d
  0x000000010da1811c: dec    %r10d              ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x000000010da1811f: movslq %eax,%r11
  0x000000010da18122: vmovq  %r11,%xmm0
  0x000000010da18127: lea    (%r12,%rdi,8),%r8
  0x000000010da1812b: lea    (%r12,%r9,8),%r14
  0x000000010da1812f: mov    %eax,%r13d
  0x000000010da18132: add    $0xfffffffe,%r13d
  0x000000010da18136: mov    $0xffffffff,%esi
  0x000000010da1813b: cmp    %esi,%r13d
  0x000000010da1813e: cmovl  %esi,%r13d
  0x000000010da18142: mov    %r10d,%ebx
  0x000000010da18145: xor    %r11d,%r11d
  0x000000010da18148: mov    %r10d,%edx
  0x000000010da1814b: sub    %ebx,%edx          ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x000000010da1814d: cmp    %eax,%edx
  0x000000010da1814f: jae    0x000000010da18270
  0x000000010da18155: vmovd  %r10d,%xmm2
  0x000000010da1815a: vmovd  %r11d,%xmm1
  0x000000010da1815f: movslq %ebx,%r11
  0x000000010da18162: vmovq  %xmm0,%r10
  0x000000010da18167: sub    %r11,%r10
  0x000000010da1816a: movzwl 0xe(%r8,%r10,2),%ebp  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010da18170: cmp    %ecx,%edx
  0x000000010da18172: jae    0x000000010da18291  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010da18178: movzwl 0xe(%r14,%r10,2),%r10d
  0x000000010da1817e: cmp    %r10d,%ebp
  0x000000010da18181: jne    0x000000010da18267  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010da18187: dec    %ebx               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x000000010da18189: cmp    %r13d,%ebx
  0x000000010da1818c: jle    0x000000010da1819a  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x000000010da1818e: vmovd  %xmm1,%r11d
  0x000000010da18193: vmovd  %xmm2,%r10d
  0x000000010da18198: jmp    0x000000010da18148
  0x000000010da1819a: mov    %eax,%r11d
  0x000000010da1819d: sub    %ecx,%r11d
  0x000000010da181a0: dec    %r11d
  0x000000010da181a3: cmp    %esi,%r11d
  0x000000010da181a6: cmovl  %esi,%r11d
  0x000000010da181aa: mov    %r11d,%edx
  0x000000010da181ad: add    $0x3,%edx
  0x000000010da181b0: mov    $0x7fffffff,%r10d
  0x000000010da181b6: cmp    %edx,%r11d
  0x000000010da181b9: cmovg  %r10d,%edx
  0x000000010da181bd: cmp    %edx,%ebx
  0x000000010da181bf: jle    0x000000010da18224  ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x000000010da181c1: movslq %ebx,%r10
  0x000000010da181c4: vmovq  %xmm0,%rsi
  0x000000010da181c9: sub    %r10,%rsi          ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010da181cc: movzwl 0xe(%r14,%rsi,2),%r11d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010da181d2: movzwl 0xe(%r8,%rsi,2),%r10d  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010da181d8: cmp    %r11d,%r10d
  0x000000010da181db: jne    0x000000010da18267  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010da181e1: movzwl 0x10(%r14,%rsi,2),%r11d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010da181e7: movzwl 0x10(%r8,%rsi,2),%esi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010da181ed: cmp    %r11d,%esi
  0x000000010da181f0: jne    0x000000010da18267  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010da181f2: mov    %eax,%r11d
  0x000000010da181f5: sub    %ebx,%r11d
  0x000000010da181f8: movslq %r11d,%r11
  0x000000010da181fb: movzwl 0x12(%r8,%r11,2),%r10d  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010da18201: movzwl 0x12(%r14,%r11,2),%esi  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010da18207: cmp    %esi,%r10d
  0x000000010da1820a: jne    0x000000010da18267  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010da1820c: movzwl 0x14(%r14,%r11,2),%r10d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010da18212: movzwl 0x14(%r8,%r11,2),%r11d  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010da18218: cmp    %r10d,%r11d
  0x000000010da1821b: jne    0x000000010da18267  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010da1821d: add    $0xfffffffc,%ebx   ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x000000010da18220: cmp    %edx,%ebx
  0x000000010da18222: jg     0x000000010da181c1  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x000000010da18224: cmp    $0xffffffff,%ebx
  0x000000010da18227: je     0x000000010da1825d
  0x000000010da18229: data16 xchg %ax,%ax
  0x000000010da1822c: vmovd  %xmm2,%edx
  0x000000010da18230: sub    %ebx,%edx          ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x000000010da18232: cmp    %eax,%edx
  0x000000010da18234: jae    0x000000010da18270
  0x000000010da18236: movslq %ebx,%r11
  0x000000010da18239: vmovq  %xmm0,%r10
  0x000000010da1823e: sub    %r11,%r10
  0x000000010da18241: movzwl 0xe(%r8,%r10,2),%ebp  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010da18247: cmp    %ecx,%edx
  0x000000010da18249: jae    0x000000010da18291  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010da1824b: movzwl 0xe(%r14,%r10,2),%r10d
  0x000000010da18251: cmp    %r10d,%ebp
  0x000000010da18254: jne    0x000000010da18267  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010da18256: dec    %ebx               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x000000010da18258: cmp    $0xffffffff,%ebx
  0x000000010da1825b: jne    0x000000010da1822c  ;*iconst_1
                                                ; - java.lang.String::equals@77 (line 992)

  0x000000010da1825d: mov    $0x1,%eax
  0x000000010da18262: jmpq   0x000000010da180fe
  0x000000010da18267: vmovd  %xmm1,%eax
  0x000000010da1826b: jmpq   0x000000010da180fe
  0x000000010da18270: mov    $0xffffffe4,%esi
  0x000000010da18275: mov    %ebx,%ebp
  0x000000010da18277: mov    %r9d,0x4(%rsp)
  0x000000010da1827c: mov    %edi,0xc(%rsp)
  0x000000010da18280: mov    %edx,0x10(%rsp)
  0x000000010da18284: data16 xchg %ax,%ax
  0x000000010da18287: callq  0x000000010d9496a0  ; OopMap{[4]=NarrowOop [12]=NarrowOop off=492}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x000000010da1828c: callq  0x000000010988b424  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x000000010da18291: mov    $0xffffffe4,%esi
  0x000000010da18296: mov    %ebx,(%rsp)
  0x000000010da18299: mov    %edi,0x4(%rsp)
  0x000000010da1829d: mov    %r9d,0x10(%rsp)
  0x000000010da182a2: mov    %edx,0x14(%rsp)
  0x000000010da182a6: nop
  0x000000010da182a7: callq  0x000000010d9496a0  ; OopMap{[4]=NarrowOop [16]=NarrowOop off=524}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x000000010da182ac: callq  0x000000010988b424  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x000000010da182b1: mov    %rsi,%rbp
  0x000000010da182b4: mov    %rdx,0x8(%rsp)
  0x000000010da182b9: mov    $0xffffffde,%esi
  0x000000010da182be: nop
  0x000000010da182bf: callq  0x000000010d9496a0  ; OopMap{rbp=Oop [8]=Oop off=548}
                                                ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ;   {runtime_call}
  0x000000010da182c4: callq  0x000000010988b424  ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ;   {runtime_call}
  0x000000010da182c9: mov    $0xfffffff6,%esi
  0x000000010da182ce: nop
  0x000000010da182cf: callq  0x000000010d9496a0  ; OopMap{off=564}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x000000010da182d4: callq  0x000000010988b424  ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x000000010da182d9: mov    $0xfffffff6,%esi
  0x000000010da182de: nop
  0x000000010da182df: callq  0x000000010d9496a0  ; OopMap{off=580}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x000000010da182e4: callq  0x000000010988b424  ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x000000010da182e9: hlt    
  0x000000010da182ea: hlt    
  0x000000010da182eb: hlt    
  0x000000010da182ec: hlt    
  0x000000010da182ed: hlt    
  0x000000010da182ee: hlt    
  0x000000010da182ef: hlt    
  0x000000010da182f0: hlt    
  0x000000010da182f1: hlt    
  0x000000010da182f2: hlt    
  0x000000010da182f3: hlt    
  0x000000010da182f4: hlt    
  0x000000010da182f5: hlt    
  0x000000010da182f6: hlt    
  0x000000010da182f7: hlt    
  0x000000010da182f8: hlt    
  0x000000010da182f9: hlt    
  0x000000010da182fa: hlt    
  0x000000010da182fb: hlt    
  0x000000010da182fc: hlt    
  0x000000010da182fd: hlt    
  0x000000010da182fe: hlt    
  0x000000010da182ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000010da18300: jmpq   0x000000010d973d60  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010da18305: callq  0x000000010da1830a
  0x000000010da1830a: subq   $0x5,(%rsp)
  0x000000010da1830f: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da18314: hlt    
  0x000000010da18315: hlt    
  0x000000010da18316: hlt    
  0x000000010da18317: hlt    
<nmethod compile_id='8' compiler='C2' level='4' entry='0x000000010da180a0' size='2048' address='0x000000010da17f50' relocation_offset='296' insts_offset='336' stub_offset='944' scopes_data_offset='984' scopes_pcs_offset='1200' dependencies_offset='2016' nul_chk_table_offset='2024' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='20115' backedge_count='11503' iicount='20115' stamp='0.209'/>
<writer thread='16643'/>
Decoding compiled method 0x000000010da143d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010bcda000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  0x000000010da14520: callq  0x000000010988b424  ;   {runtime_call}
  0x000000010da14525: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010da14530: mov    %eax,-0x14000(%rsp)
  0x000000010da14537: push   %rbp
  0x000000010da14538: sub    $0x30,%rsp
  0x000000010da1453c: mov    (%rsi),%r13d
  0x000000010da1453f: mov    0x10(%rsi),%ebx
  0x000000010da14542: mov    0x18(%rsi),%rbp
  0x000000010da14546: mov    0x8(%rsi),%r14
  0x000000010da1454a: mov    %rsi,%rdi
  0x000000010da1454d: movabs $0x1098ea73e,%r10
  0x000000010da14557: callq  *%r10
  0x000000010da1455a: test   %rbp,%rbp
  0x000000010da1455d: je     0x000000010da14685
  0x000000010da14563: mov    0x8(%rbp),%r10d
  0x000000010da14567: cmp    $0xf80002da,%r10d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010da1456e: jne    0x000000010da146b5
  0x000000010da14574: mov    %rbp,%rcx
  0x000000010da14577: test   %r14,%r14
  0x000000010da1457a: je     0x000000010da1468c
  0x000000010da14580: mov    0x8(%r14),%r11d
  0x000000010da14584: cmp    $0xf8000041,%r11d  ;   {metadata({type array char})}
  0x000000010da1458b: jne    0x000000010da146b5  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x000000010da14591: mov    0xc(%rcx),%r10d    ;*getfield value
                                                ; - java.lang.String::hashCode@26 (line 1470)
                                                ; implicit exception: dispatches to 0x000000010da146d1
  0x000000010da14595: mov    0xc(%r12,%r10,8),%esi  ;*arraylength
                                                ; - java.lang.String::hashCode@29 (line 1470)
                                                ; implicit exception: dispatches to 0x000000010da146d1
  0x000000010da1459a: cmp    %esi,%r13d
  0x000000010da1459d: jge    0x000000010da14674  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000010da145a3: mov    %r13d,%r10d
  0x000000010da145a6: inc    %r10d
  0x000000010da145a9: xor    %r11d,%r11d
  0x000000010da145ac: cmp    %r11d,%r10d
  0x000000010da145af: cmovl  %r11d,%r10d
  0x000000010da145b3: cmp    %esi,%r10d
  0x000000010da145b6: cmovg  %esi,%r10d
  0x000000010da145ba: mov    0xc(%r14),%edx     ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ; implicit exception: dispatches to 0x000000010da146f1
  0x000000010da145be: mov    %ebx,%ebp
  0x000000010da145c0: shl    $0x5,%ebp
  0x000000010da145c3: sub    %ebx,%ebp          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x000000010da145c5: cmp    %edx,%r13d
  0x000000010da145c8: jae    0x000000010da14694  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x000000010da145ce: movzwl 0x10(%r14,%r13,2),%ebx
  0x000000010da145d4: add    %ebp,%ebx          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x000000010da145d6: inc    %r13d              ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x000000010da145d9: cmp    %r10d,%r13d
  0x000000010da145dc: jl     0x000000010da145ba  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000010da145de: cmp    %edx,%esi
  0x000000010da145e0: mov    %esi,%r8d
  0x000000010da145e3: cmovg  %edx,%r8d
  0x000000010da145e7: mov    %r8d,%r10d
  0x000000010da145ea: add    $0xfffffffd,%r10d
  0x000000010da145ee: mov    $0x80000000,%r9d
  0x000000010da145f4: cmp    %r10d,%r8d
  0x000000010da145f7: cmovl  %r9d,%r10d
  0x000000010da145fb: cmp    %r10d,%r13d
  0x000000010da145fe: jge    0x000000010da14650  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x000000010da14600: movzwl 0x10(%r14,%r13,2),%r11d
  0x000000010da14606: movslq %r13d,%rdi
  0x000000010da14609: movzwl 0x12(%r14,%rdi,2),%r9d
  0x000000010da1460f: movzwl 0x16(%r14,%rdi,2),%r8d
  0x000000010da14615: movzwl 0x14(%r14,%rdi,2),%edi
  0x000000010da1461b: mov    %ebx,%eax
  0x000000010da1461d: shl    $0x5,%eax
  0x000000010da14620: sub    %ebx,%eax
  0x000000010da14622: add    %r11d,%eax
  0x000000010da14625: mov    %eax,%r11d
  0x000000010da14628: shl    $0x5,%r11d
  0x000000010da1462c: sub    %eax,%r11d
  0x000000010da1462f: add    %r9d,%r11d
  0x000000010da14632: mov    %r11d,%eax
  0x000000010da14635: shl    $0x5,%eax
  0x000000010da14638: sub    %r11d,%eax
  0x000000010da1463b: add    %edi,%eax
  0x000000010da1463d: mov    %eax,%ebx
  0x000000010da1463f: shl    $0x5,%ebx
  0x000000010da14642: sub    %eax,%ebx
  0x000000010da14644: add    %r8d,%ebx          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x000000010da14647: add    $0x4,%r13d         ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x000000010da1464b: cmp    %r10d,%r13d
  0x000000010da1464e: jl     0x000000010da14600  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000010da14650: cmp    %esi,%r13d
  0x000000010da14653: jge    0x000000010da14674
  0x000000010da14655: data16 xchg %ax,%ax       ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x000000010da14658: mov    %ebx,%ebp
  0x000000010da1465a: shl    $0x5,%ebp
  0x000000010da1465d: sub    %ebx,%ebp          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x000000010da1465f: cmp    %edx,%r13d
  0x000000010da14662: jae    0x000000010da14694  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x000000010da14664: movzwl 0x10(%r14,%r13,2),%ebx
  0x000000010da1466a: add    %ebp,%ebx          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x000000010da1466c: inc    %r13d              ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x000000010da1466f: cmp    %esi,%r13d
  0x000000010da14672: jl     0x000000010da14658  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000010da14674: mov    %ebx,0x10(%rcx)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x000000010da14677: mov    %ebx,%eax
  0x000000010da14679: add    $0x30,%rsp
  0x000000010da1467d: pop    %rbp
  0x000000010da1467e: test   %eax,-0x572e684(%rip)        # 0x00000001082e6000
                                                ;   {poll_return}
  0x000000010da14684: retq   
  0x000000010da14685: xor    %ecx,%ecx
  0x000000010da14687: jmpq   0x000000010da14577
  0x000000010da1468c: xor    %r14d,%r14d
  0x000000010da1468f: jmpq   0x000000010da14591
  0x000000010da14694: mov    $0xffffffe4,%esi
  0x000000010da14699: mov    %r14,0x10(%rsp)
  0x000000010da1469e: mov    %r13d,0xc(%rsp)
  0x000000010da146a3: mov    %rcx,0x18(%rsp)
  0x000000010da146a8: data16 xchg %ax,%ax
  0x000000010da146ab: callq  0x000000010d9496a0  ; OopMap{[16]=Oop [24]=Oop off=400}
                                                ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ;   {runtime_call}
  0x000000010da146b0: callq  0x000000010988b424  ;   {runtime_call}
  0x000000010da146b5: mov    $0xffffff9d,%esi
  0x000000010da146ba: mov    %ebx,(%rsp)
  0x000000010da146bd: mov    %r14,0x8(%rsp)
  0x000000010da146c2: mov    %r13d,0x4(%rsp)
  0x000000010da146c7: callq  0x000000010d9496a0  ; OopMap{rbp=Oop [8]=Oop off=428}
                                                ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)
                                                ;   {runtime_call}
  0x000000010da146cc: callq  0x000000010988b424  ;   {runtime_call}
  0x000000010da146d1: mov    $0xffffff86,%esi
  0x000000010da146d6: mov    %ebx,%ebp
  0x000000010da146d8: mov    %r14,(%rsp)
  0x000000010da146dc: mov    %r13d,0x8(%rsp)
  0x000000010da146e1: mov    %rcx,0x10(%rsp)
  0x000000010da146e6: nop
  0x000000010da146e7: callq  0x000000010d9496a0  ; OopMap{[0]=Oop [16]=Oop off=460}
                                                ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)
                                                ;   {runtime_call}
  0x000000010da146ec: callq  0x000000010988b424  ;   {runtime_call}
  0x000000010da146f1: mov    $0xfffffff6,%esi
  0x000000010da146f6: mov    %r13d,%ebp
  0x000000010da146f9: xchg   %ax,%ax
  0x000000010da146fb: callq  0x000000010d9496a0  ; OopMap{off=480}
                                                ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ;   {runtime_call}
  0x000000010da14700: callq  0x000000010988b424  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ;   {runtime_call}
  0x000000010da14705: hlt    
  0x000000010da14706: hlt    
  0x000000010da14707: hlt    
  0x000000010da14708: hlt    
  0x000000010da14709: hlt    
  0x000000010da1470a: hlt    
  0x000000010da1470b: hlt    
  0x000000010da1470c: hlt    
  0x000000010da1470d: hlt    
  0x000000010da1470e: hlt    
  0x000000010da1470f: hlt    
  0x000000010da14710: hlt    
  0x000000010da14711: hlt    
  0x000000010da14712: hlt    
  0x000000010da14713: hlt    
  0x000000010da14714: hlt    
  0x000000010da14715: hlt    
  0x000000010da14716: hlt    
  0x000000010da14717: hlt    
  0x000000010da14718: hlt    
  0x000000010da14719: hlt    
  0x000000010da1471a: hlt    
  0x000000010da1471b: hlt    
  0x000000010da1471c: hlt    
  0x000000010da1471d: hlt    
  0x000000010da1471e: hlt    
  0x000000010da1471f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010da14720: jmpq   0x000000010d973d60  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010da14725: callq  0x000000010da1472a
  0x000000010da1472a: subq   $0x5,(%rsp)
  0x000000010da1472f: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da14734: hlt    
  0x000000010da14735: hlt    
  0x000000010da14736: hlt    
  0x000000010da14737: hlt    
<nmethod compile_id='6' compile_kind='osr' compiler='C2' level='4' entry='0x000000010da14520' size='1520' address='0x000000010da143d0' relocation_offset='296' insts_offset='336' stub_offset='848' scopes_data_offset='896' scopes_pcs_offset='1032' dependencies_offset='1480' nul_chk_table_offset='1488' method='java/lang/String hashCode ()I' bytes='55' count='2873' backedge_count='73516' iicount='2873' stamp='0.212'/>
<writer thread='15619'/>
<task_queued compile_id='24' method='java/io/UnixFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='75' count='590' backedge_count='53041' iicount='590' level='3' stamp='0.212' comment='tiered' hot_count='590'/>
<writer thread='3331'/>
<task_queued compile_id='25' method='java/lang/Math min (II)I' bytes='11' count='7298' iicount='7298' stamp='0.212' comment='tiered' hot_count='7296'/>
<writer thread='16131'/>
Decoding compiled method 0x000000010da18d50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010bcd5480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x20]  (sp of caller)
  0x000000010da18ea0: mov    0x8(%rsi),%r10d
  0x000000010da18ea4: shl    $0x3,%r10
  0x000000010da18ea8: cmp    %r10,%rax
  0x000000010da18eab: jne    0x000000010d949e60  ;   {runtime_call}
  0x000000010da18eb1: data16 xchg %ax,%ax
  0x000000010da18eb4: nopl   0x0(%rax,%rax,1)
  0x000000010da18ebc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010da18ec0: mov    %eax,-0x14000(%rsp)
  0x000000010da18ec7: push   %rbp
  0x000000010da18ec8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)

  0x000000010da18ecc: mov    0x8(%rsi),%r11d
  0x000000010da18ed0: movabs $0x0,%r10
  0x000000010da18eda: lea    (%r10,%r11,8),%r10
  0x000000010da18ede: mov    $0x40000000,%r8d
  0x000000010da18ee4: test   %r8d,0x9c(%r10)
  0x000000010da18eeb: je     0x000000010da18ef8  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x000000010da18eed: mov    %rsi,%rbp
  0x000000010da18ef0: data16 xchg %ax,%ax
  0x000000010da18ef3: callq  0x000000010da13420  ; OopMap{rbp=Oop off=88}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x000000010da18ef8: add    $0x10,%rsp
  0x000000010da18efc: pop    %rbp
  0x000000010da18efd: test   %eax,-0x5732f03(%rip)        # 0x00000001082e6000
                                                ;   {poll_return}
  0x000000010da18f03: retq                      ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x000000010da18f04: mov    %rax,%rsi
  0x000000010da18f07: add    $0x10,%rsp
  0x000000010da18f0b: pop    %rbp
  0x000000010da18f0c: jmpq   0x000000010da13220  ;   {runtime_call}
  0x000000010da18f11: hlt    
  0x000000010da18f12: hlt    
  0x000000010da18f13: hlt    
  0x000000010da18f14: hlt    
  0x000000010da18f15: hlt    
  0x000000010da18f16: hlt    
  0x000000010da18f17: hlt    
  0x000000010da18f18: hlt    
  0x000000010da18f19: hlt    
  0x000000010da18f1a: hlt    
  0x000000010da18f1b: hlt    
  0x000000010da18f1c: hlt    
  0x000000010da18f1d: hlt    
  0x000000010da18f1e: hlt    
  0x000000010da18f1f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010da18f20: jmpq   0x000000010d973d60  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010da18f25: callq  0x000000010da18f2a
  0x000000010da18f2a: subq   $0x5,(%rsp)
  0x000000010da18f2f: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da18f34: hlt    
  0x000000010da18f35: hlt    
  0x000000010da18f36: hlt    
  0x000000010da18f37: hlt    
<nmethod compile_id='12' compiler='C2' level='4' entry='0x000000010da18ea0' size='648' address='0x000000010da18d50' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='496' scopes_pcs_offset='520' dependencies_offset='616' handler_table_offset='624' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='10718' iicount='10718' stamp='0.213'/>
<writer thread='3331'/>
<task_queued compile_id='26' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='2483' backedge_count='9191' iicount='2483' level='3' stamp='0.213' comment='tiered' hot_count='2483'/>
<writer thread='15619'/>
<task_queued compile_id='27' method='java/lang/ThreadLocal$ThreadLocalMap access$000 (Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;' bytes='6' count='768' iicount='768' level='3' stamp='0.213' comment='tiered' hot_count='768'/>
<writer thread='3331'/>
<task_queued compile_id='28' method='java/util/ArrayList size ()I' bytes='5' count='768' iicount='768' level='1' stamp='0.213' comment='tiered' hot_count='768'/>
<task_queued compile_id='29' compile_kind='osr' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='1446' backedge_count='94208' iicount='1446' osr_bci='20' stamp='0.213' comment='tiered' hot_count='94208'/>
<task_queued compile_id='30' compile_kind='osr' method='java/lang/String indexOf (II)I' bytes='70' count='1699' backedge_count='113664' iicount='1699' osr_bci='37' stamp='0.213' comment='tiered' hot_count='113664'/>
<writer thread='18435'/>
Decoding compiled method 0x000000010da141d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010bdcbe40} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x20]  (sp of caller)
  0x000000010da14300: sub    $0x18,%rsp
  0x000000010da14307: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)

  0x000000010da1430c: cmp    %edx,%esi
  0x000000010da1430e: mov    %edx,%eax
  0x000000010da14310: cmovle %esi,%eax          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x000000010da14313: add    $0x10,%rsp
  0x000000010da14317: pop    %rbp
  0x000000010da14318: test   %eax,-0x572e31e(%rip)        # 0x00000001082e6000
                                                ;   {poll_return}
  0x000000010da1431e: retq   
  0x000000010da1431f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010da14320: jmpq   0x000000010d973d60  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010da14325: callq  0x000000010da1432a
  0x000000010da1432a: subq   $0x5,(%rsp)
  0x000000010da1432f: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da14334: hlt    
  0x000000010da14335: hlt    
  0x000000010da14336: hlt    
  0x000000010da14337: hlt    
<nmethod compile_id='25' compiler='C2' level='4' entry='0x000000010da14300' size='456' address='0x000000010da141d0' relocation_offset='296' insts_offset='304' stub_offset='336' scopes_data_offset='368' scopes_pcs_offset='384' dependencies_offset='448' method='java/lang/Math min (II)I' bytes='11' count='7359' iicount='7359' stamp='0.214'/>
<writer thread='17923'/>
Decoding compiled method 0x000000010da134d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010be3d640} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;
  # this:     rsi:rsi   = &apos;java/io/UnixFileSystem&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x90]  (sp of caller)
  0x000000010da136a0: mov    0x8(%rsi),%r10d
  0x000000010da136a4: shl    $0x3,%r10
  0x000000010da136a8: cmp    %rax,%r10
  0x000000010da136ab: jne    0x000000010d949e60  ;   {runtime_call}
  0x000000010da136b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010da136bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010da136c0: mov    %eax,-0x14000(%rsp)
  0x000000010da136c7: push   %rbp
  0x000000010da136c8: sub    $0x80,%rsp
  0x000000010da136cf: movabs $0x10bef3750,%rcx  ;   {metadata(method data for {method} {0x000000010be3d640} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010da136d9: mov    0xdc(%rcx),%r8d
  0x000000010da136e0: add    $0x8,%r8d
  0x000000010da136e4: mov    %r8d,0xdc(%rcx)
  0x000000010da136eb: movabs $0x10be3d640,%rcx  ;   {metadata({method} {0x000000010be3d640} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010da136f5: and    $0x1ff8,%r8d
  0x000000010da136fc: cmp    $0x0,%r8d
  0x000000010da13700: je     0x000000010da13b56  ;*aload_1
                                                ; - java.io.UnixFileSystem::normalize@0 (line 84)

  0x000000010da13706: cmp    (%rdx),%rax        ;*invokevirtual length
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ; implicit exception: dispatches to 0x000000010da13b6d
  0x000000010da13709: mov    %rdx,%rcx
  0x000000010da1370c: movabs $0x10bef3750,%r8   ;   {metadata(method data for {method} {0x000000010be3d640} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010da13716: mov    0x8(%rcx),%ecx
  0x000000010da13719: shl    $0x3,%rcx
  0x000000010da1371d: cmp    0x110(%r8),%rcx
  0x000000010da13724: jne    0x000000010da13733
  0x000000010da13726: addq   $0x1,0x118(%r8)
  0x000000010da1372e: jmpq   0x000000010da13799
  0x000000010da13733: cmp    0x120(%r8),%rcx
  0x000000010da1373a: jne    0x000000010da13749
  0x000000010da1373c: addq   $0x1,0x128(%r8)
  0x000000010da13744: jmpq   0x000000010da13799
  0x000000010da13749: cmpq   $0x0,0x110(%r8)
  0x000000010da13754: jne    0x000000010da1376d
  0x000000010da13756: mov    %rcx,0x110(%r8)
  0x000000010da1375d: movq   $0x1,0x118(%r8)
  0x000000010da13768: jmpq   0x000000010da13799
  0x000000010da1376d: cmpq   $0x0,0x120(%r8)
  0x000000010da13778: jne    0x000000010da13791
  0x000000010da1377a: mov    %rcx,0x120(%r8)
  0x000000010da13781: movq   $0x1,0x128(%r8)
  0x000000010da1378c: jmpq   0x000000010da13799
  0x000000010da13791: addq   $0x1,0x108(%r8)
  0x000000010da13799: movabs $0x10beaa5a0,%rcx  ;   {metadata(method data for {method} {0x000000010bcd8c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000010da137a3: mov    0xdc(%rcx),%r8d
  0x000000010da137aa: add    $0x8,%r8d
  0x000000010da137ae: mov    %r8d,0xdc(%rcx)
  0x000000010da137b5: movabs $0x10bcd8c60,%rcx  ;   {metadata({method} {0x000000010bcd8c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000010da137bf: and    $0x7ffff8,%r8d
  0x000000010da137c6: cmp    $0x0,%r8d
  0x000000010da137ca: je     0x000000010da13b72
  0x000000010da137d0: mov    0xc(%rdx),%ecx
  0x000000010da137d3: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)

  0x000000010da137d7: mov    0xc(%rcx),%edi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ; implicit exception: dispatches to 0x000000010da13b89
  0x000000010da137da: mov    $0x0,%ebx
  0x000000010da137df: mov    $0x0,%ecx          ;*iload
                                                ; - java.io.UnixFileSystem::normalize@10 (line 86)

  0x000000010da137e4: nopl   0x0(%rax)
  0x000000010da137e8: cmp    %edi,%ebx
  0x000000010da137ea: movabs $0x10bef3750,%r8   ;   {metadata(method data for {method} {0x000000010be3d640} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010da137f4: movabs $0x138,%rax
  0x000000010da137fe: jge    0x000000010da1380e
  0x000000010da13804: movabs $0x148,%rax
  0x000000010da1380e: mov    (%r8,%rax,1),%r9
  0x000000010da13812: lea    0x1(%r9),%r9
  0x000000010da13816: mov    %r9,(%r8,%rax,1)
  0x000000010da1381a: jge    0x000000010da13a41  ;*if_icmpge
                                                ; - java.io.UnixFileSystem::normalize@13 (line 86)

  0x000000010da13820: mov    %rdx,%r8
  0x000000010da13823: movabs $0x10bef3750,%rax  ;   {metadata(method data for {method} {0x000000010be3d640} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010da1382d: mov    0x8(%r8),%r8d
  0x000000010da13831: shl    $0x3,%r8
  0x000000010da13835: cmp    0x160(%rax),%r8
  0x000000010da1383c: jne    0x000000010da1384b
  0x000000010da1383e: addq   $0x1,0x168(%rax)
  0x000000010da13846: jmpq   0x000000010da138b1
  0x000000010da1384b: cmp    0x170(%rax),%r8
  0x000000010da13852: jne    0x000000010da13861
  0x000000010da13854: addq   $0x1,0x178(%rax)
  0x000000010da1385c: jmpq   0x000000010da138b1
  0x000000010da13861: cmpq   $0x0,0x160(%rax)
  0x000000010da1386c: jne    0x000000010da13885
  0x000000010da1386e: mov    %r8,0x160(%rax)
  0x000000010da13875: movq   $0x1,0x168(%rax)
  0x000000010da13880: jmpq   0x000000010da138b1
  0x000000010da13885: cmpq   $0x0,0x170(%rax)
  0x000000010da13890: jne    0x000000010da138a9
  0x000000010da13892: mov    %r8,0x170(%rax)
  0x000000010da13899: movq   $0x1,0x178(%rax)
  0x000000010da138a4: jmpq   0x000000010da138b1
  0x000000010da138a9: addq   $0x1,0x158(%rax)
  0x000000010da138b1: movabs $0x10be5bc60,%r8   ;   {metadata(method data for {method} {0x000000010bcd8db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000010da138bb: mov    0xdc(%r8),%eax
  0x000000010da138c2: add    $0x8,%eax
  0x000000010da138c5: mov    %eax,0xdc(%r8)
  0x000000010da138cc: movabs $0x10bcd8db0,%r8   ;   {metadata({method} {0x000000010bcd8db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000010da138d6: and    $0x7ffff8,%eax
  0x000000010da138dc: cmp    $0x0,%eax
  0x000000010da138df: je     0x000000010da13b8e
  0x000000010da138e5: cmp    $0x0,%ebx
  0x000000010da138e8: movabs $0x10be5bc60,%r8   ;   {metadata(method data for {method} {0x000000010bcd8db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000010da138f2: movabs $0x108,%rax
  0x000000010da138fc: jl     0x000000010da1390c
  0x000000010da13902: movabs $0x118,%rax
  0x000000010da1390c: mov    (%r8,%rax,1),%r9
  0x000000010da13910: lea    0x1(%r9),%r9
  0x000000010da13914: mov    %r9,(%r8,%rax,1)
  0x000000010da13918: jl     0x000000010da13afb  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010da1391e: mov    0xc(%rdx),%r8d
  0x000000010da13922: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010da13926: mov    0xc(%r8),%eax      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ; implicit exception: dispatches to 0x000000010da13ba5
  0x000000010da1392a: cmp    %eax,%ebx
  0x000000010da1392c: movabs $0x10be5bc60,%rax  ;   {metadata(method data for {method} {0x000000010bcd8db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000010da13936: movabs $0x128,%r9
  0x000000010da13940: jl     0x000000010da13950
  0x000000010da13946: movabs $0x138,%r9
  0x000000010da13950: mov    (%rax,%r9,1),%r11
  0x000000010da13954: lea    0x1(%r11),%r11
  0x000000010da13958: mov    %r11,(%rax,%r9,1)
  0x000000010da1395c: jge    0x000000010da13afb  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010da13962: movslq %ebx,%rax
  0x000000010da13965: cmp    0xc(%r8),%ebx
  0x000000010da13969: jae    0x000000010da13baa
  0x000000010da1396f: movzwl 0x10(%r8,%rax,2),%r8d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010da13975: and    $0xffff,%r8d
  0x000000010da1397c: cmp    $0x2f,%ecx
  0x000000010da1397f: movabs $0x10bef3750,%rcx  ;   {metadata(method data for {method} {0x000000010be3d640} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010da13989: movabs $0x188,%rax
  0x000000010da13993: jne    0x000000010da139a3
  0x000000010da13999: movabs $0x198,%rax
  0x000000010da139a3: mov    (%rcx,%rax,1),%r9
  0x000000010da139a7: lea    0x1(%r9),%r9
  0x000000010da139ab: mov    %r9,(%rcx,%rax,1)
  0x000000010da139af: jne    0x000000010da139ef  ;*if_icmpne
                                                ; - java.io.UnixFileSystem::normalize@27 (line 88)

  0x000000010da139b5: cmp    $0x2f,%r8d
  0x000000010da139b9: movabs $0x10bef3750,%rcx  ;   {metadata(method data for {method} {0x000000010be3d640} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010da139c3: movabs $0x1a8,%rax
  0x000000010da139cd: jne    0x000000010da139dd
  0x000000010da139d3: movabs $0x1b8,%rax
  0x000000010da139dd: mov    (%rcx,%rax,1),%r9
  0x000000010da139e1: lea    0x1(%r9),%r9
  0x000000010da139e5: mov    %r9,(%rcx,%rax,1)
  0x000000010da139e9: je     0x000000010da13ac5  ;*if_icmpne
                                                ; - java.io.UnixFileSystem::normalize@34 (line 88)

  0x000000010da139ef: inc    %ebx
  0x000000010da139f1: movabs $0x10bef3750,%rcx  ;   {metadata(method data for {method} {0x000000010be3d640} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010da139fb: mov    0xe0(%rcx),%eax
  0x000000010da13a01: add    $0x8,%eax
  0x000000010da13a04: mov    %eax,0xe0(%rcx)
  0x000000010da13a0a: movabs $0x10be3d640,%rcx  ;   {metadata({method} {0x000000010be3d640} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010da13a14: and    $0xfff8,%eax
  0x000000010da13a1a: cmp    $0x0,%eax
  0x000000010da13a1d: je     0x000000010da13bb3  ; OopMap{rsi=Oop rdx=Oop off=899}
                                                ;*goto
                                                ; - java.io.UnixFileSystem::normalize@54 (line 86)

  0x000000010da13a23: test   %eax,-0x572d929(%rip)        # 0x00000001082e6100
                                                ;   {poll}
  0x000000010da13a29: movabs $0x10bef3750,%rcx  ;   {metadata(method data for {method} {0x000000010be3d640} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010da13a33: incl   0x1d8(%rcx)
  0x000000010da13a39: mov    %r8,%rcx
  0x000000010da13a3c: jmpq   0x000000010da137e8  ;*goto
                                                ; - java.io.UnixFileSystem::normalize@54 (line 86)

  0x000000010da13a41: cmp    $0x2f,%ecx
  0x000000010da13a44: movabs $0x10bef3750,%rcx  ;   {metadata(method data for {method} {0x000000010be3d640} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010da13a4e: movabs $0x1f0,%r8
  0x000000010da13a58: jne    0x000000010da13a68
  0x000000010da13a5e: movabs $0x200,%r8
  0x000000010da13a68: mov    (%rcx,%r8,1),%rbx
  0x000000010da13a6c: lea    0x1(%rbx),%rbx
  0x000000010da13a70: mov    %rbx,(%rcx,%r8,1)
  0x000000010da13a74: jne    0x000000010da13ab3  ;*if_icmpne
                                                ; - java.io.UnixFileSystem::normalize@60 (line 92)

  0x000000010da13a7a: mov    %rsi,%rcx
  0x000000010da13a7d: movabs $0x10bef3750,%r8   ;   {metadata(method data for {method} {0x000000010be3d640} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010da13a87: addq   $0x1,0x210(%r8)
  0x000000010da13a8f: mov    %rdi,%r8
  0x000000010da13a92: dec    %r8d
  0x000000010da13a95: mov    %rdi,%rcx          ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@69 (line 92)

  0x000000010da13a98: nop
  0x000000010da13a99: nop
  0x000000010da13a9a: nop
  0x000000010da13a9b: nop
  0x000000010da13a9c: nop
  0x000000010da13a9d: nop
  0x000000010da13a9e: nop
  0x000000010da13a9f: callq  0x000000010d94a0a0  ; OopMap{off=1028}
                                                ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@69 (line 92)
                                                ;   {optimized virtual_call}
  0x000000010da13aa4: add    $0x80,%rsp
  0x000000010da13aab: pop    %rbp
  0x000000010da13aac: test   %eax,-0x572d9b2(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da13ab2: retq                      ;*areturn
                                                ; - java.io.UnixFileSystem::normalize@72 (line 92)

  0x000000010da13ab3: mov    %rdx,%rax
  0x000000010da13ab6: add    $0x80,%rsp
  0x000000010da13abd: pop    %rbp
  0x000000010da13abe: test   %eax,-0x572d9c4(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da13ac4: retq                      ;*areturn
                                                ; - java.io.UnixFileSystem::normalize@74 (line 93)

  0x000000010da13ac5: mov    %rsi,%rcx
  0x000000010da13ac8: movabs $0x10bef3750,%r8   ;   {metadata(method data for {method} {0x000000010be3d640} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000010da13ad2: addq   $0x1,0x1c8(%r8)
  0x000000010da13ada: dec    %ebx
  0x000000010da13adc: mov    %rdi,%rcx
  0x000000010da13adf: mov    %rbx,%r8           ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@44 (line 89)

  0x000000010da13ae2: nop
  0x000000010da13ae3: nop
  0x000000010da13ae4: nop
  0x000000010da13ae5: nop
  0x000000010da13ae6: nop
  0x000000010da13ae7: callq  0x000000010d94a0a0  ; OopMap{off=1100}
                                                ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@44 (line 89)
                                                ;   {optimized virtual_call}
  0x000000010da13aec: add    $0x80,%rsp
  0x000000010da13af3: pop    %rbp
  0x000000010da13af4: test   %eax,-0x572d9fa(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da13afa: retq                      ;*areturn
                                                ; - java.io.UnixFileSystem::normalize@47 (line 89)

  0x000000010da13afb: mov    %ecx,0x6c(%rsp)
  0x000000010da13aff: mov    %edi,0x68(%rsp)
  0x000000010da13b03: mov    %rdx,0x60(%rsp)
  0x000000010da13b08: mov    %rsi,0x58(%rsp)
  0x000000010da13b0d: data16 xchg %ax,%ax
  0x000000010da13b10: jmpq   0x000000010da13bd9  ;   {no_reloc}
  0x000000010da13b15: add    %al,(%rax)
  0x000000010da13b17: add    %al,(%rax)
  0x000000010da13b19: add    %ch,%cl
  0x000000010da13b1b: (bad)  
  0x000000010da13b1c: add    %al,(%rax)
  0x000000010da13b1e: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010da13b21: rorb   -0x47(%rcx)        ;   {metadata(method data for {method} {0x000000010bcd8db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000010da13b24: (bad)  
  0x000000010da13b25: mov    $0x10be5,%esp
  0x000000010da13b2a: add    %al,(%rax)
  0x000000010da13b2c: addq   $0x1,0x148(%r9)
  0x000000010da13b34: mov    %rbx,%rdx
  0x000000010da13b37: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010da13b3a: mov    %ebx,0x70(%rsp)
  0x000000010da13b3e: mov    %rax,0x50(%rsp)
  0x000000010da13b43: nop
  0x000000010da13b44: nop
  0x000000010da13b45: nop
  0x000000010da13b46: nop
  0x000000010da13b47: callq  0x000000010d94a0a0  ; OopMap{[80]=Oop [96]=Oop [88]=Oop off=1196}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {optimized virtual_call}
  0x000000010da13b4c: mov    0x50(%rsp),%rax
  0x000000010da13b51: jmpq   0x000000010da13c1b
  0x000000010da13b56: mov    %rcx,0x8(%rsp)
  0x000000010da13b5b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da13b63: callq  0x000000010da074e0  ; OopMap{rsi=Oop rdx=Oop off=1224}
                                                ;*synchronization entry
                                                ; - java.io.UnixFileSystem::normalize@-1 (line 84)
                                                ;   {runtime_call}
  0x000000010da13b68: jmpq   0x000000010da13706
  0x000000010da13b6d: callq  0x000000010d9749c0  ; OopMap{rsi=Oop rdx=Oop off=1234}
                                                ;*invokevirtual length
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ;   {runtime_call}
  0x000000010da13b72: mov    %rcx,0x8(%rsp)
  0x000000010da13b77: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da13b7f: callq  0x000000010da074e0  ; OopMap{rsi=Oop rdx=Oop off=1252}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ;   {runtime_call}
  0x000000010da13b84: jmpq   0x000000010da137d0
  0x000000010da13b89: callq  0x000000010d9749c0  ; OopMap{rsi=Oop rdx=Oop off=1262}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ;   {runtime_call}
  0x000000010da13b8e: mov    %r8,0x8(%rsp)
  0x000000010da13b93: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da13b9b: callq  0x000000010da074e0  ; OopMap{rsi=Oop rdx=Oop off=1280}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000010da13ba0: jmpq   0x000000010da138e5
  0x000000010da13ba5: callq  0x000000010d9749c0  ; OopMap{rsi=Oop rdx=Oop r8=Oop off=1290}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000010da13baa: mov    %rbx,(%rsp)
  0x000000010da13bae: callq  0x000000010d976580  ; OopMap{rsi=Oop rdx=Oop r8=Oop off=1299}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000010da13bb3: mov    %rcx,0x8(%rsp)
  0x000000010da13bb8: movq   $0x36,(%rsp)
  0x000000010da13bc0: callq  0x000000010da074e0  ; OopMap{rsi=Oop rdx=Oop off=1317}
                                                ;*goto
                                                ; - java.io.UnixFileSystem::normalize@54 (line 86)
                                                ;   {runtime_call}
  0x000000010da13bc5: jmpq   0x000000010da13a23
  0x000000010da13bca: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010da13bd4: mov    $0xa050f00,%eax
  0x000000010da13bd9: callq  0x000000010da05ba0  ; OopMap{[88]=Oop [96]=Oop off=1342}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000010da13bde: jmpq   0x000000010da13b10
  0x000000010da13be3: mov    %rdx,%rdx
  0x000000010da13be6: callq  0x000000010d9744a0  ; OopMap{[88]=Oop [96]=Oop off=1355}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000010da13beb: jmpq   0x000000010da13b1f
  0x000000010da13bf0: nop
  0x000000010da13bf1: nop
  0x000000010da13bf2: mov    0x2a8(%r15),%rax
  0x000000010da13bf9: movabs $0x0,%r10
  0x000000010da13c03: mov    %r10,0x2a8(%r15)
  0x000000010da13c0a: movabs $0x0,%r10
  0x000000010da13c14: mov    %r10,0x2b0(%r15)
  0x000000010da13c1b: add    $0x80,%rsp
  0x000000010da13c22: pop    %rbp
  0x000000010da13c23: jmpq   0x000000010d976a20  ;   {runtime_call}
  0x000000010da13c28: hlt    
  0x000000010da13c29: hlt    
  0x000000010da13c2a: hlt    
  0x000000010da13c2b: hlt    
  0x000000010da13c2c: hlt    
  0x000000010da13c2d: hlt    
  0x000000010da13c2e: hlt    
  0x000000010da13c2f: hlt    
  0x000000010da13c30: hlt    
  0x000000010da13c31: hlt    
  0x000000010da13c32: hlt    
  0x000000010da13c33: hlt    
  0x000000010da13c34: hlt    
  0x000000010da13c35: hlt    
  0x000000010da13c36: hlt    
  0x000000010da13c37: hlt    
  0x000000010da13c38: hlt    
  0x000000010da13c39: hlt    
  0x000000010da13c3a: hlt    
  0x000000010da13c3b: hlt    
  0x000000010da13c3c: hlt    
  0x000000010da13c3d: hlt    
  0x000000010da13c3e: hlt    
  0x000000010da13c3f: hlt    
[Stub Code]
  0x000000010da13c40: nop                       ;   {no_reloc}
  0x000000010da13c41: nop
  0x000000010da13c42: nop
  0x000000010da13c43: nop
  0x000000010da13c44: nop
  0x000000010da13c45: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010da13c4f: jmpq   0x000000010da13c4f  ;   {runtime_call}
  0x000000010da13c54: nop
  0x000000010da13c55: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010da13c5f: jmpq   0x000000010da13c5f  ;   {runtime_call}
  0x000000010da13c64: nop
  0x000000010da13c65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010da13c6f: jmpq   0x000000010da13c6f  ;   {runtime_call}
[Exception Handler]
  0x000000010da13c74: callq  0x000000010d974060  ;   {runtime_call}
  0x000000010da13c79: mov    %rsp,-0x28(%rsp)
  0x000000010da13c7e: sub    $0x80,%rsp
  0x000000010da13c85: mov    %rax,0x78(%rsp)
  0x000000010da13c8a: mov    %rcx,0x70(%rsp)
  0x000000010da13c8f: mov    %rdx,0x68(%rsp)
  0x000000010da13c94: mov    %rbx,0x60(%rsp)
  0x000000010da13c99: mov    %rbp,0x50(%rsp)
  0x000000010da13c9e: mov    %rsi,0x48(%rsp)
  0x000000010da13ca3: mov    %rdi,0x40(%rsp)
  0x000000010da13ca8: mov    %r8,0x38(%rsp)
  0x000000010da13cad: mov    %r9,0x30(%rsp)
  0x000000010da13cb2: mov    %r10,0x28(%rsp)
  0x000000010da13cb7: mov    %r11,0x20(%rsp)
  0x000000010da13cbc: mov    %r12,0x18(%rsp)
  0x000000010da13cc1: mov    %r13,0x10(%rsp)
  0x000000010da13cc6: mov    %r14,0x8(%rsp)
  0x000000010da13ccb: mov    %r15,(%rsp)
  0x000000010da13ccf: movabs $0x1099e391c,%rdi  ;   {external_word}
  0x000000010da13cd9: movabs $0x10da13c79,%rsi  ;   {internal_word}
  0x000000010da13ce3: mov    %rsp,%rdx
  0x000000010da13ce6: and    $0xfffffffffffffff0,%rsp
  0x000000010da13cea: callq  0x0000000109807a0e  ;   {runtime_call}
  0x000000010da13cef: hlt    
[Deopt Handler Code]
  0x000000010da13cf0: movabs $0x10da13cf0,%r10  ;   {section_word}
  0x000000010da13cfa: push   %r10
  0x000000010da13cfc: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da13d01: hlt    
  0x000000010da13d02: hlt    
  0x000000010da13d03: hlt    
  0x000000010da13d04: hlt    
  0x000000010da13d05: hlt    
  0x000000010da13d06: hlt    
  0x000000010da13d07: hlt    
<nmethod compile_id='24' compiler='C1' level='3' entry='0x000000010da136a0' size='3168' address='0x000000010da134d0' relocation_offset='296' insts_offset='464' stub_offset='1904' scopes_data_offset='2136' scopes_pcs_offset='2520' dependencies_offset='3128' nul_chk_table_offset='3136' method='java/io/UnixFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='75' count='593' backedge_count='53185' iicount='593' stamp='0.221'/>
<writer thread='3331'/>
<task_queued compile_id='31' method='java/lang/String hashCode ()I' bytes='55' count='2887' backedge_count='73728' iicount='2887' stamp='0.221' comment='tiered' hot_count='2887'/>
<writer thread='16643'/>
Decoding compiled method 0x000000010da19dd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010be25520} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;
  0x000000010da19f40: callq  0x000000010988b424  ;   {runtime_call}
  0x000000010da19f45: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010da19f50: mov    %eax,-0x14000(%rsp)
  0x000000010da19f57: push   %rbp
  0x000000010da19f58: sub    $0x50,%rsp
  0x000000010da19f5c: mov    0x10(%rsi),%r14d
  0x000000010da19f60: mov    0x18(%rsi),%r10d
  0x000000010da19f64: mov    %r10d,0x8(%rsp)
  0x000000010da19f69: mov    0x48(%rsi),%rbp
  0x000000010da19f6d: mov    0x40(%rsi),%r10
  0x000000010da19f71: mov    %r10,(%rsp)
  0x000000010da19f75: mov    0x20(%rsi),%r11d
  0x000000010da19f79: mov    %r11d,0x24(%rsp)
  0x000000010da19f7e: mov    0x28(%rsi),%r13
  0x000000010da19f82: mov    0x38(%rsi),%ebx
  0x000000010da19f85: mov    %rsi,%rdi
  0x000000010da19f88: movabs $0x1098ea73e,%r10
  0x000000010da19f92: callq  *%r10
  0x000000010da19f95: test   %rbp,%rbp
  0x000000010da19f98: je     0x000000010da1a1b3
  0x000000010da19f9e: mov    %rbp,%r8
  0x000000010da19fa1: mov    0x8(%rbp),%r11d
  0x000000010da19fa5: cmp    $0xf80051ee,%r11d  ;   {metadata(&apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000010da19fac: jne    0x000000010da1a2b5
  0x000000010da19fb2: mov    %rbp,%rax
  0x000000010da19fb5: mov    (%rsp),%r9
  0x000000010da19fb9: test   %r9,%r9
  0x000000010da19fbc: je     0x000000010da1a1bd
  0x000000010da19fc2: mov    0x8(%r9),%r10d
  0x000000010da19fc6: cmp    $0xf8000041,%r10d  ;   {metadata({type array char})}
  0x000000010da19fcd: jne    0x000000010da1a2b9
  0x000000010da19fd3: mov    %r9,%r11
  0x000000010da19fd6: test   %r13,%r13
  0x000000010da19fd9: je     0x000000010da1a1c5
  0x000000010da19fdf: mov    0x8(%r13),%r10d
  0x000000010da19fe3: cmp    $0xf80000f5,%r10d  ;   {metadata({type array byte})}
  0x000000010da19fea: jne    0x000000010da1a2b9  ;*iload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@20 (line 709)

  0x000000010da19ff0: mov    %r13,%rbp
  0x000000010da19ff3: add    $0xc,%rbp          ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010da19ff7: mov    0x8(%rsp),%edi
  0x000000010da19ffb: cmp    %r14d,%edi
  0x000000010da19ffe: jge    0x000000010da1a19b  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x000000010da1a004: mov    %ebx,%r10d
  0x000000010da1a007: sub    %edi,%r10d         ;*iload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@20 (line 709)

  0x000000010da1a00a: mov    %edi,%r9d
  0x000000010da1a00d: sub    %ebx,%r9d
  0x000000010da1a010: mov    %edi,%r8d
  0x000000010da1a013: inc    %r8d
  0x000000010da1a016: cmp    %r9d,%r8d
  0x000000010da1a019: cmovl  %r9d,%r8d
  0x000000010da1a01d: xor    %r9d,%r9d
  0x000000010da1a020: cmp    %r9d,%r8d
  0x000000010da1a023: cmovl  %r9d,%r8d
  0x000000010da1a027: cmp    %r14d,%r8d
  0x000000010da1a02a: mov    %r14d,%ecx
  0x000000010da1a02d: cmovg  %r14d,%r8d         ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010da1a031: mov    %edi,%ebx
  0x000000010da1a033: add    %r10d,%ebx
  0x000000010da1a036: mov    0xc(%r11),%r14d    ; implicit exception: dispatches to 0x000000010da1a32f
  0x000000010da1a03a: cmp    %r14d,%ebx
  0x000000010da1a03d: jae    0x000000010da1a221
  0x000000010da1a043: movzwl 0x10(%r11,%rbx,2),%edx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010da1a049: cmp    $0x80,%edx
  0x000000010da1a04f: jge    0x000000010da1a2e4  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010da1a055: test   %r13,%r13
  0x000000010da1a058: je     0x000000010da1a259
  0x000000010da1a05e: vmovq  %rax,%xmm0
  0x000000010da1a063: mov    0x0(%rbp),%esi     ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010da1a066: mov    %edi,%r9d
  0x000000010da1a069: inc    %r9d               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x000000010da1a06c: cmp    %esi,%edi
  0x000000010da1a06e: jae    0x000000010da1a271
  0x000000010da1a074: movslq %edi,%rdi
  0x000000010da1a077: mov    %dl,0x10(%r13,%rdi,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010da1a07c: cmp    %r8d,%r9d
  0x000000010da1a07f: jge    0x000000010da1a086  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x000000010da1a081: mov    %r9d,%edi
  0x000000010da1a084: jmp    0x000000010da1a031
  0x000000010da1a086: mov    %r14d,%edi
  0x000000010da1a089: sub    %r10d,%edi
  0x000000010da1a08c: cmp    %esi,%edi
  0x000000010da1a08e: cmovg  %esi,%edi
  0x000000010da1a091: cmp    %ecx,%edi
  0x000000010da1a093: cmovg  %ecx,%edi
  0x000000010da1a096: mov    %edi,%r8d
  0x000000010da1a099: add    $0xfffffffd,%r8d
  0x000000010da1a09d: mov    $0x80000000,%eax
  0x000000010da1a0a2: cmp    %r8d,%edi
  0x000000010da1a0a5: cmovl  %eax,%r8d
  0x000000010da1a0a9: cmp    %r8d,%r9d
  0x000000010da1a0ac: jge    0x000000010da1a2dd
  0x000000010da1a0b2: jmp    0x000000010da1a0c2
  0x000000010da1a0b4: nopl   0x0(%rax,%rax,1)
  0x000000010da1a0bc: data16 data16 xchg %ax,%ax
  0x000000010da1a0c0: mov    %ebp,%ecx          ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010da1a0c2: mov    %r9d,%ebx
  0x000000010da1a0c5: add    %r10d,%ebx
  0x000000010da1a0c8: movzwl 0x10(%r11,%rbx,2),%edi  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010da1a0ce: cmp    $0x80,%edi
  0x000000010da1a0d4: jge    0x000000010da1a1db  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010da1a0da: mov    %ecx,%ebp
  0x000000010da1a0dc: movslq %ebx,%rcx
  0x000000010da1a0df: movzwl 0x12(%r11,%rcx,2),%edx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010da1a0e5: movslq %r9d,%rcx
  0x000000010da1a0e8: mov    %dil,0x10(%r13,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010da1a0ed: cmp    $0x80,%edx
  0x000000010da1a0f3: jge    0x000000010da1a1df  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010da1a0f9: mov    %r10d,%ebx
  0x000000010da1a0fc: add    %r9d,%ebx
  0x000000010da1a0ff: movslq %r9d,%rcx
  0x000000010da1a102: mov    %dl,0x11(%r13,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010da1a107: movslq %ebx,%rdx
  0x000000010da1a10a: movzwl 0x14(%r11,%rdx,2),%edi  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010da1a110: cmp    $0x80,%edi
  0x000000010da1a116: jge    0x000000010da1a1d2  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010da1a11c: mov    %dil,0x12(%r13,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010da1a121: movzwl 0x16(%r11,%rdx,2),%edx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010da1a127: cmp    $0x80,%edx
  0x000000010da1a12d: jge    0x000000010da1a1e6  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010da1a133: mov    %dl,0x13(%r13,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010da1a138: add    $0x4,%r9d          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x000000010da1a13c: cmp    %r8d,%r9d
  0x000000010da1a13f: jl     0x000000010da1a0c0  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x000000010da1a145: add    $0x4,%ebx          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@45 (line 710)

  0x000000010da1a148: mov    %ebp,%ecx
  0x000000010da1a14a: cmp    %ecx,%r9d
  0x000000010da1a14d: jge    0x000000010da1a193  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010da1a14f: mov    %r9d,%ebx
  0x000000010da1a152: add    %r10d,%ebx
  0x000000010da1a155: cmp    %r14d,%ebx
  0x000000010da1a158: jae    0x000000010da1a226
  0x000000010da1a15e: movzwl 0x10(%r11,%rbx,2),%edx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010da1a164: cmp    $0x80,%edx
  0x000000010da1a16a: jge    0x000000010da1a325  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010da1a170: mov    %r9d,%edi
  0x000000010da1a173: inc    %edi               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x000000010da1a175: cmp    %esi,%r9d
  0x000000010da1a178: jae    0x000000010da1a27f
  0x000000010da1a17e: movslq %r9d,%r8
  0x000000010da1a181: mov    %dl,0x10(%r13,%r8,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010da1a186: cmp    %ecx,%edi
  0x000000010da1a188: jge    0x000000010da1a18f  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x000000010da1a18a: mov    %edi,%r9d
  0x000000010da1a18d: jmp    0x000000010da1a14f
  0x000000010da1a18f: inc    %ebx               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@45 (line 710)

  0x000000010da1a191: jmp    0x000000010da1a196
  0x000000010da1a193: mov    %r9d,%edi
  0x000000010da1a196: vmovq  %xmm0,%rax
  0x000000010da1a19b: cmp    0x24(%rsp),%ebx
  0x000000010da1a19f: jl     0x000000010da1a2ec  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)

  0x000000010da1a1a5: mov    %edi,%eax
  0x000000010da1a1a7: add    $0x50,%rsp
  0x000000010da1a1ab: pop    %rbp
  0x000000010da1a1ac: test   %eax,-0x57341b2(%rip)        # 0x00000001082e6000
                                                ;   {poll_return}
  0x000000010da1a1b2: retq   
  0x000000010da1a1b3: xor    %eax,%eax
  0x000000010da1a1b5: mov    %rbp,%r8
  0x000000010da1a1b8: jmpq   0x000000010da19fb5
  0x000000010da1a1bd: xor    %r11d,%r11d
  0x000000010da1a1c0: jmpq   0x000000010da19fd6
  0x000000010da1a1c5: mov    $0xc,%ebp
  0x000000010da1a1ca: xor    %r13d,%r13d
  0x000000010da1a1cd: jmpq   0x000000010da19ff7
  0x000000010da1a1d2: add    $0x2,%ebx          ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010da1a1d5: add    $0x2,%r9d          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x000000010da1a1d9: mov    %ebp,%ecx
  0x000000010da1a1db: mov    %edi,%edx
  0x000000010da1a1dd: jmp    0x000000010da1a1ef
  0x000000010da1a1df: inc    %ebx               ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010da1a1e1: inc    %r9d               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x000000010da1a1e4: jmp    0x000000010da1a1ed
  0x000000010da1a1e6: add    $0x3,%ebx          ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010da1a1e9: add    $0x3,%r9d          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x000000010da1a1ed: mov    %ebp,%ecx
  0x000000010da1a1ef: vmovq  %xmm0,%rax         ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010da1a1f4: mov    $0xffffff65,%esi
  0x000000010da1a1f9: mov    %r11,%rbp
  0x000000010da1a1fc: mov    %ebx,(%rsp)
  0x000000010da1a1ff: mov    %r13,0x8(%rsp)
  0x000000010da1a204: mov    %r9d,0x4(%rsp)
  0x000000010da1a209: mov    %edx,0x10(%rsp)
  0x000000010da1a20d: mov    %rax,0x18(%rsp)
  0x000000010da1a212: mov    %ecx,0x20(%rsp)
  0x000000010da1a216: nop
  0x000000010da1a217: callq  0x000000010d9496a0  ; OopMap{rbp=Oop [8]=Oop [24]=Oop off=732}
                                                ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)
                                                ;   {runtime_call}
  0x000000010da1a21c: callq  0x000000010988b424  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)
                                                ;   {runtime_call}
  0x000000010da1a221: mov    %edi,%r9d
  0x000000010da1a224: jmp    0x000000010da1a22b
  0x000000010da1a226: vmovq  %xmm0,%rax
  0x000000010da1a22b: mov    $0xffffffe4,%esi
  0x000000010da1a230: mov    %r13,0x8(%rsp)
  0x000000010da1a235: mov    %r9d,0x4(%rsp)
  0x000000010da1a23a: mov    %r11,0x10(%rsp)
  0x000000010da1a23f: mov    %ebx,0x18(%rsp)
  0x000000010da1a243: mov    %rax,0x28(%rsp)
  0x000000010da1a248: mov    %ecx,0x20(%rsp)
  0x000000010da1a24c: data16 xchg %ax,%ax
  0x000000010da1a24f: callq  0x000000010d9496a0  ; OopMap{[8]=Oop [16]=Oop [40]=Oop off=788}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x000000010da1a254: callq  0x000000010988b424  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x000000010da1a259: movsbl %dl,%ebp           ;*i2b  ; - sun.nio.cs.UTF_8$Encoder::encode@49 (line 710)

  0x000000010da1a25c: mov    $0xfffffff6,%esi
  0x000000010da1a261: mov    %edi,(%rsp)
  0x000000010da1a264: data16 xchg %ax,%ax
  0x000000010da1a267: callq  0x000000010d9496a0  ; OopMap{off=812}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x000000010da1a26c: callq  0x000000010988b424  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x000000010da1a271: movsbl %dl,%ebp           ;*i2b  ; - sun.nio.cs.UTF_8$Encoder::encode@49 (line 710)

  0x000000010da1a274: inc    %ebx               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@45 (line 710)

  0x000000010da1a276: mov    %r9d,(%rsp)
  0x000000010da1a27a: mov    %edi,%r9d
  0x000000010da1a27d: jmp    0x000000010da1a287
  0x000000010da1a27f: movsbl %dl,%ebp           ;*i2b  ; - sun.nio.cs.UTF_8$Encoder::encode@49 (line 710)

  0x000000010da1a282: inc    %ebx               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@45 (line 710)

  0x000000010da1a284: mov    %edi,(%rsp)
  0x000000010da1a287: mov    $0xffffffe4,%esi
  0x000000010da1a28c: mov    %r11,0x8(%rsp)
  0x000000010da1a291: mov    %ebx,0x4(%rsp)
  0x000000010da1a295: mov    %r13,0x18(%rsp)
  0x000000010da1a29a: mov    %r9d,0x20(%rsp)
  0x000000010da1a29f: vmovsd %xmm0,0x28(%rsp)
  0x000000010da1a2a5: mov    %ecx,0x30(%rsp)
  0x000000010da1a2a9: xchg   %ax,%ax
  0x000000010da1a2ab: callq  0x000000010d9496a0  ; OopMap{[8]=Oop [24]=Oop [40]=Oop off=880}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x000000010da1a2b0: callq  0x000000010988b424  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x000000010da1a2b5: mov    (%rsp),%r9
  0x000000010da1a2b9: mov    $0xffffff9d,%esi
  0x000000010da1a2be: mov    %ebx,%ebp
  0x000000010da1a2c0: mov    %r13,(%rsp)
  0x000000010da1a2c4: mov    %r8,0x10(%rsp)
  0x000000010da1a2c9: mov    %r9,0x18(%rsp)
  0x000000010da1a2ce: mov    %r14d,0x20(%rsp)
  0x000000010da1a2d3: callq  0x000000010d9496a0  ; OopMap{[0]=Oop [16]=Oop [24]=Oop off=920}
                                                ;*iload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@20 (line 709)
                                                ;   {runtime_call}
  0x000000010da1a2d8: callq  0x000000010988b424  ;*iload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@20 (line 709)
                                                ;   {runtime_call}
  0x000000010da1a2dd: inc    %ebx               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@45 (line 710)

  0x000000010da1a2df: jmpq   0x000000010da1a14a
  0x000000010da1a2e4: mov    %edi,%r9d
  0x000000010da1a2e7: jmpq   0x000000010da1a1f4  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x000000010da1a2ec: mov    $0xffffff65,%esi
  0x000000010da1a2f1: mov    %r11,%rbp
  0x000000010da1a2f4: mov    %r13,0x8(%rsp)
  0x000000010da1a2f9: mov    %edi,0x4(%rsp)
  0x000000010da1a2fd: mov    %ebx,0x10(%rsp)
  0x000000010da1a301: mov    %rax,0x18(%rsp)
  0x000000010da1a306: mov    %rax,-0x8(%rsp)
  0x000000010da1a30b: mov    0x24(%rsp),%eax
  0x000000010da1a30f: mov    %eax,0x14(%rsp)
  0x000000010da1a313: mov    -0x8(%rsp),%rax
  0x000000010da1a318: data16 xchg %ax,%ax
  0x000000010da1a31b: callq  0x000000010d9496a0  ; OopMap{rbp=Oop [8]=Oop [24]=Oop off=992}
                                                ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)
                                                ;   {runtime_call}
  0x000000010da1a320: callq  0x000000010988b424  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)
                                                ;   {runtime_call}
  0x000000010da1a325: vmovq  %xmm0,%rax
  0x000000010da1a32a: jmpq   0x000000010da1a1f4
  0x000000010da1a32f: mov    $0xfffffff6,%esi
  0x000000010da1a334: mov    %ebx,%ebp
  0x000000010da1a336: nop
  0x000000010da1a337: callq  0x000000010d9496a0  ; OopMap{off=1020}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x000000010da1a33c: callq  0x000000010988b424  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x000000010da1a341: hlt    
  0x000000010da1a342: hlt    
  0x000000010da1a343: hlt    
  0x000000010da1a344: hlt    
  0x000000010da1a345: hlt    
  0x000000010da1a346: hlt    
  0x000000010da1a347: hlt    
  0x000000010da1a348: hlt    
  0x000000010da1a349: hlt    
  0x000000010da1a34a: hlt    
  0x000000010da1a34b: hlt    
  0x000000010da1a34c: hlt    
  0x000000010da1a34d: hlt    
  0x000000010da1a34e: hlt    
  0x000000010da1a34f: hlt    
  0x000000010da1a350: hlt    
  0x000000010da1a351: hlt    
  0x000000010da1a352: hlt    
  0x000000010da1a353: hlt    
  0x000000010da1a354: hlt    
  0x000000010da1a355: hlt    
  0x000000010da1a356: hlt    
  0x000000010da1a357: hlt    
  0x000000010da1a358: hlt    
  0x000000010da1a359: hlt    
  0x000000010da1a35a: hlt    
  0x000000010da1a35b: hlt    
  0x000000010da1a35c: hlt    
  0x000000010da1a35d: hlt    
  0x000000010da1a35e: hlt    
  0x000000010da1a35f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010da1a360: jmpq   0x000000010d973d60  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010da1a365: callq  0x000000010da1a36a
  0x000000010da1a36a: subq   $0x5,(%rsp)
  0x000000010da1a36f: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da1a374: hlt    
  0x000000010da1a375: hlt    
  0x000000010da1a376: hlt    
  0x000000010da1a377: hlt    
<nmethod compile_id='29' compile_kind='osr' compiler='C2' level='4' entry='0x000000010da19f40' size='2832' address='0x000000010da19dd0' relocation_offset='296' insts_offset='368' stub_offset='1424' scopes_data_offset='1480' scopes_pcs_offset='1768' dependencies_offset='2808' nul_chk_table_offset='2816' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='1467' backedge_count='95132' iicount='1467' stamp='0.227'/>
<writer thread='17923'/>
Decoding compiled method 0x000000010da19690:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010bcd9df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010da19800: mov    0x8(%rsi),%r10d
  0x000000010da19804: shl    $0x3,%r10
  0x000000010da19808: cmp    %rax,%r10
  0x000000010da1980b: jne    0x000000010d949e60  ;   {runtime_call}
  0x000000010da19811: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010da1981c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010da19820: mov    %eax,-0x14000(%rsp)
  0x000000010da19827: push   %rbp
  0x000000010da19828: sub    $0x30,%rsp
  0x000000010da1982c: movabs $0x10beac3b0,%rax  ;   {metadata(method data for {method} {0x000000010bcd9df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010da19836: mov    0xdc(%rax),%edi
  0x000000010da1983c: add    $0x8,%edi
  0x000000010da1983f: mov    %edi,0xdc(%rax)
  0x000000010da19845: movabs $0x10bcd9df8,%rax  ;   {metadata({method} {0x000000010bcd9df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010da1984f: and    $0x1ff8,%edi
  0x000000010da19855: cmp    $0x0,%edi
  0x000000010da19858: je     0x000000010da19a0d  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x000000010da1985e: mov    0xc(%rsi),%eax
  0x000000010da19861: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x000000010da19865: mov    0xc(%rdx),%esi     ; implicit exception: dispatches to 0x000000010da19a24
  0x000000010da19868: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)

  0x000000010da1986c: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x000000010da19a29
  0x000000010da1986f: cmp    $0x0,%ecx
  0x000000010da19872: movabs $0x10beac3b0,%rbx  ;   {metadata(method data for {method} {0x000000010bcd9df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010da1987c: movabs $0x108,%rdx
  0x000000010da19886: jl     0x000000010da19896
  0x000000010da1988c: movabs $0x118,%rdx
  0x000000010da19896: mov    (%rbx,%rdx,1),%r8
  0x000000010da1989a: lea    0x1(%r8),%r8
  0x000000010da1989e: mov    %r8,(%rbx,%rdx,1)
  0x000000010da198a2: jl     0x000000010da199da  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x000000010da198a8: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x000000010da19a2e
  0x000000010da198ab: sub    %edi,%ebx
  0x000000010da198ad: cmp    %ebx,%ecx
  0x000000010da198af: movabs $0x10beac3b0,%rbx  ;   {metadata(method data for {method} {0x000000010bcd9df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010da198b9: movabs $0x128,%rdx
  0x000000010da198c3: jle    0x000000010da198d3
  0x000000010da198c9: movabs $0x138,%rdx
  0x000000010da198d3: mov    (%rbx,%rdx,1),%r8
  0x000000010da198d7: lea    0x1(%r8),%r8
  0x000000010da198db: mov    %r8,(%rbx,%rdx,1)
  0x000000010da198df: jg     0x000000010da199da  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x000000010da198e5: mov    $0x0,%ebx
  0x000000010da198ea: jmpq   0x000000010da1999a  ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x000000010da198ef: nop
  0x000000010da198f0: mov    %rcx,%rdx
  0x000000010da198f3: inc    %edx
  0x000000010da198f5: movslq %ecx,%r8
  0x000000010da198f8: cmp    0xc(%rax),%ecx
  0x000000010da198fb: jae    0x000000010da19a33
  0x000000010da19901: movzwl 0x10(%rax,%r8,2),%ecx  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x000000010da19907: mov    %rbx,%r8
  0x000000010da1990a: inc    %r8d
  0x000000010da1990d: movslq %ebx,%r9
  0x000000010da19910: cmp    0xc(%rsi),%ebx
  0x000000010da19913: jae    0x000000010da19a3c
  0x000000010da19919: movzwl 0x10(%rsi,%r9,2),%ebx  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x000000010da1991f: movabs $0x10beac3b0,%r9   ;   {metadata(method data for {method} {0x000000010bcd9df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010da19929: mov    0xe0(%r9),%r11d
  0x000000010da19930: add    $0x8,%r11d
  0x000000010da19934: mov    %r11d,0xe0(%r9)
  0x000000010da1993b: movabs $0x10bcd9df8,%r9   ;   {metadata({method} {0x000000010bcd9df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010da19945: and    $0xfff8,%r11d
  0x000000010da1994c: cmp    $0x0,%r11d
  0x000000010da19950: je     0x000000010da19a45  ; OopMap{rsi=Oop rax=Oop off=342}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x000000010da19956: test   %eax,-0x573385c(%rip)        # 0x00000001082e6100
                                                ;   {poll}
  0x000000010da1995c: cmp    %ebx,%ecx
  0x000000010da1995e: movabs $0x10beac3b0,%rbx  ;   {metadata(method data for {method} {0x000000010bcd9df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010da19968: movabs $0x168,%rcx
  0x000000010da19972: je     0x000000010da19982
  0x000000010da19978: movabs $0x178,%rcx
  0x000000010da19982: mov    (%rbx,%rcx,1),%r9
  0x000000010da19986: lea    0x1(%r9),%r9
  0x000000010da1998a: mov    %r9,(%rbx,%rcx,1)
  0x000000010da1998e: jne    0x000000010da199eb  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x000000010da19994: mov    %r8,%rbx
  0x000000010da19997: mov    %rdx,%rcx          ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x000000010da1999a: dec    %edi
  0x000000010da1999c: cmp    $0x0,%edi
  0x000000010da1999f: movabs $0x10beac3b0,%rdx  ;   {metadata(method data for {method} {0x000000010bcd9df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000010da199a9: movabs $0x148,%r8
  0x000000010da199b3: jl     0x000000010da199c3
  0x000000010da199b9: movabs $0x158,%r8
  0x000000010da199c3: mov    (%rdx,%r8,1),%r9
  0x000000010da199c7: lea    0x1(%r9),%r9
  0x000000010da199cb: mov    %r9,(%rdx,%r8,1)
  0x000000010da199cf: jl     0x000000010da199fc
  0x000000010da199d5: jmpq   0x000000010da198f0  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x000000010da199da: mov    $0x0,%eax
  0x000000010da199df: add    $0x30,%rsp
  0x000000010da199e3: pop    %rbp
  0x000000010da199e4: test   %eax,-0x57338ea(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da199ea: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x000000010da199eb: mov    $0x0,%eax
  0x000000010da199f0: add    $0x30,%rsp
  0x000000010da199f4: pop    %rbp
  0x000000010da199f5: test   %eax,-0x57338fb(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da199fb: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x000000010da199fc: mov    $0x1,%eax
  0x000000010da19a01: add    $0x30,%rsp
  0x000000010da19a05: pop    %rbp
  0x000000010da19a06: test   %eax,-0x573390c(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da19a0c: retq   
  0x000000010da19a0d: mov    %rax,0x8(%rsp)
  0x000000010da19a12: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da19a1a: callq  0x000000010da074e0  ; OopMap{rsi=Oop rdx=Oop off=543}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x000000010da19a1f: jmpq   0x000000010da1985e
  0x000000010da19a24: callq  0x000000010d9749c0  ; OopMap{rax=Oop off=553}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x000000010da19a29: callq  0x000000010d9749c0  ; OopMap{rax=Oop rsi=Oop off=558}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x000000010da19a2e: callq  0x000000010d9749c0  ; OopMap{rsi=Oop rax=Oop off=563}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x000000010da19a33: mov    %rcx,(%rsp)
  0x000000010da19a37: callq  0x000000010d976580  ; OopMap{rsi=Oop rax=Oop off=572}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x000000010da19a3c: mov    %rbx,(%rsp)
  0x000000010da19a40: callq  0x000000010d976580  ; OopMap{rsi=Oop rax=Oop off=581}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x000000010da19a45: mov    %r9,0x8(%rsp)
  0x000000010da19a4a: movq   $0x41,(%rsp)
  0x000000010da19a52: callq  0x000000010da074e0  ; OopMap{rsi=Oop rax=Oop off=599}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x000000010da19a57: jmpq   0x000000010da19956
  0x000000010da19a5c: nop
  0x000000010da19a5d: nop
  0x000000010da19a5e: mov    0x2a8(%r15),%rax
  0x000000010da19a65: movabs $0x0,%r10
  0x000000010da19a6f: mov    %r10,0x2a8(%r15)
  0x000000010da19a76: movabs $0x0,%r10
  0x000000010da19a80: mov    %r10,0x2b0(%r15)
  0x000000010da19a87: add    $0x30,%rsp
  0x000000010da19a8b: pop    %rbp
  0x000000010da19a8c: jmpq   0x000000010d976a20  ;   {runtime_call}
  0x000000010da19a91: hlt    
  0x000000010da19a92: hlt    
  0x000000010da19a93: hlt    
  0x000000010da19a94: hlt    
  0x000000010da19a95: hlt    
  0x000000010da19a96: hlt    
  0x000000010da19a97: hlt    
  0x000000010da19a98: hlt    
  0x000000010da19a99: hlt    
  0x000000010da19a9a: hlt    
  0x000000010da19a9b: hlt    
  0x000000010da19a9c: hlt    
  0x000000010da19a9d: hlt    
  0x000000010da19a9e: hlt    
  0x000000010da19a9f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010da19aa0: callq  0x000000010d974060  ;   {no_reloc}
  0x000000010da19aa5: mov    %rsp,-0x28(%rsp)
  0x000000010da19aaa: sub    $0x80,%rsp
  0x000000010da19ab1: mov    %rax,0x78(%rsp)
  0x000000010da19ab6: mov    %rcx,0x70(%rsp)
  0x000000010da19abb: mov    %rdx,0x68(%rsp)
  0x000000010da19ac0: mov    %rbx,0x60(%rsp)
  0x000000010da19ac5: mov    %rbp,0x50(%rsp)
  0x000000010da19aca: mov    %rsi,0x48(%rsp)
  0x000000010da19acf: mov    %rdi,0x40(%rsp)
  0x000000010da19ad4: mov    %r8,0x38(%rsp)
  0x000000010da19ad9: mov    %r9,0x30(%rsp)
  0x000000010da19ade: mov    %r10,0x28(%rsp)
  0x000000010da19ae3: mov    %r11,0x20(%rsp)
  0x000000010da19ae8: mov    %r12,0x18(%rsp)
  0x000000010da19aed: mov    %r13,0x10(%rsp)
  0x000000010da19af2: mov    %r14,0x8(%rsp)
  0x000000010da19af7: mov    %r15,(%rsp)
  0x000000010da19afb: movabs $0x1099e391c,%rdi  ;   {external_word}
  0x000000010da19b05: movabs $0x10da19aa5,%rsi  ;   {internal_word}
  0x000000010da19b0f: mov    %rsp,%rdx
  0x000000010da19b12: and    $0xfffffffffffffff0,%rsp
  0x000000010da19b16: callq  0x0000000109807a0e  ;   {runtime_call}
  0x000000010da19b1b: hlt    
[Deopt Handler Code]
  0x000000010da19b1c: movabs $0x10da19b1c,%r10  ;   {section_word}
  0x000000010da19b26: push   %r10
  0x000000010da19b28: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da19b2d: hlt    
  0x000000010da19b2e: hlt    
  0x000000010da19b2f: hlt    
<nmethod compile_id='26' compiler='C1' level='3' entry='0x000000010da19800' size='1824' address='0x000000010da19690' relocation_offset='296' insts_offset='368' stub_offset='1040' scopes_data_offset='1192' scopes_pcs_offset='1384' dependencies_offset='1784' nul_chk_table_offset='1792' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='2533' backedge_count='9318' iicount='2533' stamp='0.231'/>
<writer thread='16131'/>
Decoding compiled method 0x000000010da19010:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010bcda180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  0x000000010da19160: callq  0x000000010988b424  ;   {runtime_call}
  0x000000010da19165: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010da19170: mov    %eax,-0x14000(%rsp)
  0x000000010da19177: push   %rbp
  0x000000010da19178: sub    $0x30,%rsp
  0x000000010da1917c: mov    (%rsi),%ebx
  0x000000010da1917e: mov    0x8(%rsi),%r14
  0x000000010da19182: mov    0x20(%rsi),%r13d
  0x000000010da19186: mov    0x10(%rsi),%ebp
  0x000000010da19189: mov    %rsi,%rdi
  0x000000010da1918c: movabs $0x1098ea73e,%r10
  0x000000010da19196: callq  *%r10
  0x000000010da19199: test   %r14,%r14
  0x000000010da1919c: je     0x000000010da192e3
  0x000000010da191a2: mov    0x8(%r14),%r11d
  0x000000010da191a6: cmp    $0xf8000041,%r11d  ;   {metadata({type array char})}
  0x000000010da191ad: jne    0x000000010da19329  ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)

  0x000000010da191b3: mov    %r14,%r10
  0x000000010da191b6: add    $0xc,%r10          ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010da191ba: cmp    %ebp,%ebx
  0x000000010da191bc: jge    0x000000010da192ae  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000010da191c2: mov    %ebx,%r11d
  0x000000010da191c5: inc    %r11d
  0x000000010da191c8: xor    %r8d,%r8d
  0x000000010da191cb: cmp    %r8d,%r11d
  0x000000010da191ce: cmovl  %r8d,%r11d
  0x000000010da191d2: cmp    %ebp,%r11d
  0x000000010da191d5: cmovg  %ebp,%r11d
  0x000000010da191d9: test   %r14,%r14
  0x000000010da191dc: je     0x000000010da192f1
  0x000000010da191e2: mov    (%r10),%r9d
  0x000000010da191e5: cmp    %r9d,%ebx
  0x000000010da191e8: jae    0x000000010da19305  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010da191ee: movzwl 0x10(%r14,%rbx,2),%r8d
  0x000000010da191f4: cmp    %r13d,%r8d
  0x000000010da191f7: je     0x000000010da192b3  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010da191fd: inc    %ebx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010da191ff: cmp    %r11d,%ebx
  0x000000010da19202: jl     0x000000010da191d9  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000010da19204: cmp    %r9d,%ebp
  0x000000010da19207: mov    %ebp,%r11d
  0x000000010da1920a: cmovg  %r9d,%r11d
  0x000000010da1920e: mov    %r11d,%edi
  0x000000010da19211: add    $0xfffffff9,%edi
  0x000000010da19214: mov    $0x80000000,%r8d
  0x000000010da1921a: cmp    %edi,%r11d
  0x000000010da1921d: cmovl  %r8d,%edi
  0x000000010da19221: cmp    %edi,%ebx
  0x000000010da19223: jge    0x000000010da19292
  0x000000010da19225: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010da19230: movzwl 0x10(%r14,%rbx,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010da19236: cmp    %r13d,%r11d
  0x000000010da19239: je     0x000000010da192b3  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010da1923b: movslq %ebx,%r10
  0x000000010da1923e: movzwl 0x12(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010da19244: cmp    %r13d,%r11d
  0x000000010da19247: je     0x000000010da192c1  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010da19249: movzwl 0x14(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010da1924f: cmp    %r13d,%r11d
  0x000000010da19252: je     0x000000010da192c5  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010da19254: movzwl 0x16(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010da1925a: cmp    %r13d,%r11d
  0x000000010da1925d: je     0x000000010da192ca  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010da1925f: movzwl 0x18(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010da19265: cmp    %r13d,%r11d
  0x000000010da19268: je     0x000000010da192cf  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010da1926a: movzwl 0x1a(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010da19270: cmp    %r13d,%r11d
  0x000000010da19273: je     0x000000010da192d4  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010da19275: movzwl 0x1c(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010da1927b: cmp    %r13d,%r11d
  0x000000010da1927e: je     0x000000010da192d9  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010da19280: movzwl 0x1e(%r14,%r10,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010da19286: cmp    %r13d,%r10d
  0x000000010da19289: je     0x000000010da192de  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010da1928b: add    $0x8,%ebx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010da1928e: cmp    %edi,%ebx
  0x000000010da19290: jl     0x000000010da19230  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000010da19292: cmp    %ebp,%ebx
  0x000000010da19294: jge    0x000000010da192ae
  0x000000010da19296: xchg   %ax,%ax
  0x000000010da19298: cmp    %r9d,%ebx
  0x000000010da1929b: jae    0x000000010da1930a  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010da1929d: movzwl 0x10(%r14,%rbx,2),%r11d
  0x000000010da192a3: cmp    %r13d,%r11d
  0x000000010da192a6: je     0x000000010da192b3  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010da192a8: inc    %ebx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010da192aa: cmp    %ebp,%ebx
  0x000000010da192ac: jl     0x000000010da19298  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000010da192ae: mov    $0xffffffff,%ebx   ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)

  0x000000010da192b3: mov    %ebx,%eax
  0x000000010da192b5: add    $0x30,%rsp
  0x000000010da192b9: pop    %rbp
  0x000000010da192ba: test   %eax,-0x57332c0(%rip)        # 0x00000001082e6000
                                                ;   {poll_return}
  0x000000010da192c0: retq   
  0x000000010da192c1: inc    %ebx
  0x000000010da192c3: jmp    0x000000010da192b3
  0x000000010da192c5: add    $0x2,%ebx
  0x000000010da192c8: jmp    0x000000010da192b3
  0x000000010da192ca: add    $0x3,%ebx
  0x000000010da192cd: jmp    0x000000010da192b3
  0x000000010da192cf: add    $0x4,%ebx
  0x000000010da192d2: jmp    0x000000010da192b3
  0x000000010da192d4: add    $0x5,%ebx
  0x000000010da192d7: jmp    0x000000010da192b3
  0x000000010da192d9: add    $0x6,%ebx
  0x000000010da192dc: jmp    0x000000010da192b3
  0x000000010da192de: add    $0x7,%ebx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010da192e1: jmp    0x000000010da192b3
  0x000000010da192e3: xor    %r14d,%r14d
  0x000000010da192e6: mov    $0xc,%r10d
  0x000000010da192ec: jmpq   0x000000010da191ba
  0x000000010da192f1: mov    $0xfffffff6,%esi
  0x000000010da192f6: mov    %ebx,%ebp
  0x000000010da192f8: data16 xchg %ax,%ax
  0x000000010da192fb: callq  0x000000010d9496a0  ; OopMap{off=416}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x000000010da19300: callq  0x000000010988b424  ;   {runtime_call}
  0x000000010da19305: mov    %ebx,(%rsp)
  0x000000010da19308: jmp    0x000000010da1930d
  0x000000010da1930a: mov    %ebx,(%rsp)
  0x000000010da1930d: mov    $0xffffffe4,%esi
  0x000000010da19312: mov    %r13d,0x4(%rsp)
  0x000000010da19317: mov    %r14,0x10(%rsp)
  0x000000010da1931c: data16 xchg %ax,%ax
  0x000000010da1931f: callq  0x000000010d9496a0  ; OopMap{[16]=Oop off=452}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x000000010da19324: callq  0x000000010988b424  ;   {runtime_call}
  0x000000010da19329: mov    $0xffffff9d,%esi
  0x000000010da1932e: mov    %r13d,(%rsp)
  0x000000010da19332: mov    %r14,0x8(%rsp)
  0x000000010da19337: mov    %ebx,0x4(%rsp)
  0x000000010da1933b: callq  0x000000010d9496a0  ; OopMap{[8]=Oop off=480}
                                                ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)
                                                ;   {runtime_call}
  0x000000010da19340: callq  0x000000010988b424  ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)
                                                ;   {runtime_call}
  0x000000010da19345: hlt    
  0x000000010da19346: hlt    
  0x000000010da19347: hlt    
  0x000000010da19348: hlt    
  0x000000010da19349: hlt    
  0x000000010da1934a: hlt    
  0x000000010da1934b: hlt    
  0x000000010da1934c: hlt    
  0x000000010da1934d: hlt    
  0x000000010da1934e: hlt    
  0x000000010da1934f: hlt    
  0x000000010da19350: hlt    
  0x000000010da19351: hlt    
  0x000000010da19352: hlt    
  0x000000010da19353: hlt    
  0x000000010da19354: hlt    
  0x000000010da19355: hlt    
  0x000000010da19356: hlt    
  0x000000010da19357: hlt    
  0x000000010da19358: hlt    
  0x000000010da19359: hlt    
  0x000000010da1935a: hlt    
  0x000000010da1935b: hlt    
  0x000000010da1935c: hlt    
  0x000000010da1935d: hlt    
  0x000000010da1935e: hlt    
  0x000000010da1935f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010da19360: jmpq   0x000000010d973d60  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010da19365: callq  0x000000010da1936a
  0x000000010da1936a: subq   $0x5,(%rsp)
  0x000000010da1936f: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da19374: hlt    
  0x000000010da19375: hlt    
  0x000000010da19376: hlt    
  0x000000010da19377: hlt    
<nmethod compile_id='30' compile_kind='osr' compiler='C2' level='4' entry='0x000000010da19160' size='1592' address='0x000000010da19010' relocation_offset='296' insts_offset='336' stub_offset='848' scopes_data_offset='888' scopes_pcs_offset='992' dependencies_offset='1584' method='java/lang/String indexOf (II)I' bytes='70' count='1703' backedge_count='113910' iicount='1703' stamp='0.234'/>
<writer thread='17923'/>
Decoding compiled method 0x000000010da149d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010bda6600} &apos;size&apos; &apos;()I&apos; in &apos;java/util/ArrayList&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000010da14b20: mov    0x8(%rsi),%r10d
  0x000000010da14b24: shl    $0x3,%r10
  0x000000010da14b28: cmp    %rax,%r10
  0x000000010da14b2b: jne    0x000000010d949e60  ;   {runtime_call}
  0x000000010da14b31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010da14b3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010da14b40: mov    %eax,-0x14000(%rsp)
  0x000000010da14b47: push   %rbp
  0x000000010da14b48: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.ArrayList::size@0 (line 282)

  0x000000010da14b4c: mov    0x10(%rsi),%eax    ;*getfield size
                                                ; - java.util.ArrayList::size@1 (line 282)

  0x000000010da14b4f: add    $0x30,%rsp
  0x000000010da14b53: pop    %rbp
  0x000000010da14b54: test   %eax,-0x572ea5a(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da14b5a: retq   
  0x000000010da14b5b: nop
  0x000000010da14b5c: nop
  0x000000010da14b5d: mov    0x2a8(%r15),%rax
  0x000000010da14b64: movabs $0x0,%r10
  0x000000010da14b6e: mov    %r10,0x2a8(%r15)
  0x000000010da14b75: movabs $0x0,%r10
  0x000000010da14b7f: mov    %r10,0x2b0(%r15)
  0x000000010da14b86: add    $0x30,%rsp
  0x000000010da14b8a: pop    %rbp
  0x000000010da14b8b: jmpq   0x000000010d976a20  ;   {runtime_call}
  0x000000010da14b90: hlt    
  0x000000010da14b91: hlt    
  0x000000010da14b92: hlt    
  0x000000010da14b93: hlt    
  0x000000010da14b94: hlt    
  0x000000010da14b95: hlt    
  0x000000010da14b96: hlt    
  0x000000010da14b97: hlt    
  0x000000010da14b98: hlt    
  0x000000010da14b99: hlt    
  0x000000010da14b9a: hlt    
  0x000000010da14b9b: hlt    
  0x000000010da14b9c: hlt    
  0x000000010da14b9d: hlt    
  0x000000010da14b9e: hlt    
  0x000000010da14b9f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010da14ba0: callq  0x000000010d974060  ;   {no_reloc}
  0x000000010da14ba5: mov    %rsp,-0x28(%rsp)
  0x000000010da14baa: sub    $0x80,%rsp
  0x000000010da14bb1: mov    %rax,0x78(%rsp)
  0x000000010da14bb6: mov    %rcx,0x70(%rsp)
  0x000000010da14bbb: mov    %rdx,0x68(%rsp)
  0x000000010da14bc0: mov    %rbx,0x60(%rsp)
  0x000000010da14bc5: mov    %rbp,0x50(%rsp)
  0x000000010da14bca: mov    %rsi,0x48(%rsp)
  0x000000010da14bcf: mov    %rdi,0x40(%rsp)
  0x000000010da14bd4: mov    %r8,0x38(%rsp)
  0x000000010da14bd9: mov    %r9,0x30(%rsp)
  0x000000010da14bde: mov    %r10,0x28(%rsp)
  0x000000010da14be3: mov    %r11,0x20(%rsp)
  0x000000010da14be8: mov    %r12,0x18(%rsp)
  0x000000010da14bed: mov    %r13,0x10(%rsp)
  0x000000010da14bf2: mov    %r14,0x8(%rsp)
  0x000000010da14bf7: mov    %r15,(%rsp)
  0x000000010da14bfb: movabs $0x1099e391c,%rdi  ;   {external_word}
  0x000000010da14c05: movabs $0x10da14ba5,%rsi  ;   {internal_word}
  0x000000010da14c0f: mov    %rsp,%rdx
  0x000000010da14c12: and    $0xfffffffffffffff0,%rsp
  0x000000010da14c16: callq  0x0000000109807a0e  ;   {runtime_call}
  0x000000010da14c1b: hlt    
[Deopt Handler Code]
  0x000000010da14c1c: movabs $0x10da14c1c,%r10  ;   {section_word}
  0x000000010da14c26: push   %r10
  0x000000010da14c28: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da14c2d: hlt    
  0x000000010da14c2e: hlt    
  0x000000010da14c2f: hlt    
<nmethod compile_id='28' compiler='C1' level='1' entry='0x000000010da14b20' size='704' address='0x000000010da149d0' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/util/ArrayList size ()I' bytes='5' count='791' iicount='791' stamp='0.236'/>
<writer thread='18435'/>
Decoding compiled method 0x000000010da15f10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010bcda000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x30]  (sp of caller)
  0x000000010da16060: mov    0x8(%rsi),%r10d
  0x000000010da16064: shl    $0x3,%r10
  0x000000010da16068: cmp    %r10,%rax
  0x000000010da1606b: jne    0x000000010d949e60  ;   {runtime_call}
  0x000000010da16071: data16 xchg %ax,%ax
  0x000000010da16074: nopl   0x0(%rax,%rax,1)
  0x000000010da1607c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010da16080: mov    %eax,-0x14000(%rsp)
  0x000000010da16087: push   %rbp
  0x000000010da16088: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x000000010da1608c: mov    %rsi,%rbx
  0x000000010da1608f: mov    0x10(%rsi),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x000000010da16092: test   %eax,%eax
  0x000000010da16094: jne    0x000000010da16185  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x000000010da1609a: mov    0xc(%rsi),%ebp     ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x000000010da1609d: mov    0xc(%r12,%rbp,8),%r10d  ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x000000010da161a9
  0x000000010da160a2: test   %r10d,%r10d
  0x000000010da160a5: jle    0x000000010da16191  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x000000010da160ab: test   %r10d,%r10d
  0x000000010da160ae: jbe    0x000000010da16195
  0x000000010da160b4: mov    %r10d,%r9d
  0x000000010da160b7: dec    %r9d
  0x000000010da160ba: cmp    %r10d,%r9d
  0x000000010da160bd: jae    0x000000010da16195  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x000000010da160c3: movzwl 0x10(%r12,%rbp,8),%r11d  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x000000010da160c9: mov    %r10d,%edi
  0x000000010da160cc: add    $0xfffffffd,%edi
  0x000000010da160cf: mov    %r11d,%eax
  0x000000010da160d2: shl    $0x5,%eax
  0x000000010da160d5: lea    (%r12,%rbp,8),%rdx
  0x000000010da160d9: mov    $0x1,%r8d
  0x000000010da160df: mov    $0x80000000,%ecx
  0x000000010da160e4: cmp    %edi,%r9d
  0x000000010da160e7: cmovl  %ecx,%edi
  0x000000010da160ea: cmp    $0x1,%edi
  0x000000010da160ed: jle    0x000000010da16176
  0x000000010da160f3: sub    %r11d,%eax         ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x000000010da160f6: jmp    0x000000010da16123  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x000000010da160f8: movzwl 0x10(%rdx,%r8,2),%ecx
  0x000000010da160fe: sub    %r11d,%eax
  0x000000010da16101: add    %ecx,%eax          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x000000010da16103: inc    %r8d               ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x000000010da16106: cmp    %r10d,%r8d
  0x000000010da16109: jge    0x000000010da16182  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000010da1610f: mov    %eax,%r9d
  0x000000010da16112: shl    $0x5,%r9d
  0x000000010da16116: mov    %eax,%r11d
  0x000000010da16119: mov    %r9d,%eax
  0x000000010da1611c: jmp    0x000000010da160f8
  0x000000010da1611e: xchg   %ax,%ax
  0x000000010da16120: sub    %r11d,%eax         ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x000000010da16123: movzwl 0x10(%rdx,%r8,2),%r9d
  0x000000010da16129: add    %r9d,%eax
  0x000000010da1612c: movslq %r8d,%r11
  0x000000010da1612f: movzwl 0x12(%rdx,%r11,2),%ecx
  0x000000010da16135: movzwl 0x16(%rdx,%r11,2),%ebp
  0x000000010da1613b: movzwl 0x14(%rdx,%r11,2),%r9d
  0x000000010da16141: mov    %eax,%r11d
  0x000000010da16144: shl    $0x5,%r11d
  0x000000010da16148: sub    %eax,%r11d
  0x000000010da1614b: add    %ecx,%r11d
  0x000000010da1614e: mov    %r11d,%esi
  0x000000010da16151: shl    $0x5,%esi
  0x000000010da16154: sub    %r11d,%esi
  0x000000010da16157: add    %r9d,%esi
  0x000000010da1615a: mov    %esi,%r11d
  0x000000010da1615d: shl    $0x5,%r11d
  0x000000010da16161: sub    %esi,%r11d
  0x000000010da16164: add    %ebp,%r11d         ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x000000010da16167: mov    %r11d,%eax
  0x000000010da1616a: shl    $0x5,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x000000010da1616d: add    $0x4,%r8d          ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x000000010da16171: cmp    %edi,%r8d
  0x000000010da16174: jl     0x000000010da16120  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000010da16176: cmp    %r10d,%r8d
  0x000000010da16179: jl     0x000000010da160f8
  0x000000010da1617f: mov    %r11d,%eax
  0x000000010da16182: mov    %eax,0x10(%rbx)    ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x000000010da16185: add    $0x20,%rsp
  0x000000010da16189: pop    %rbp
  0x000000010da1618a: test   %eax,-0x5730190(%rip)        # 0x00000001082e6000
                                                ;   {poll_return}
  0x000000010da16190: retq   
  0x000000010da16191: xor    %eax,%eax
  0x000000010da16193: jmp    0x000000010da16185
  0x000000010da16195: mov    $0xffffff86,%esi
  0x000000010da1619a: mov    %rbx,(%rsp)
  0x000000010da1619e: nop
  0x000000010da1619f: callq  0x000000010d9496a0  ; OopMap{rbp=NarrowOop [0]=Oop off=324}
                                                ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)
                                                ;   {runtime_call}
  0x000000010da161a4: callq  0x000000010988b424  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)
                                                ;   {runtime_call}
  0x000000010da161a9: mov    $0xfffffff6,%esi
  0x000000010da161ae: nop
  0x000000010da161af: callq  0x000000010d9496a0  ; OopMap{off=340}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x000000010da161b4: callq  0x000000010988b424  ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x000000010da161b9: hlt    
  0x000000010da161ba: hlt    
  0x000000010da161bb: hlt    
  0x000000010da161bc: hlt    
  0x000000010da161bd: hlt    
  0x000000010da161be: hlt    
  0x000000010da161bf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010da161c0: jmpq   0x000000010d973d60  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010da161c5: callq  0x000000010da161ca
  0x000000010da161ca: subq   $0x5,(%rsp)
  0x000000010da161cf: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da161d4: hlt    
  0x000000010da161d5: hlt    
  0x000000010da161d6: hlt    
  0x000000010da161d7: hlt    
<nmethod compile_id='31' compiler='C2' level='4' entry='0x000000010da16060' size='1256' address='0x000000010da15f10' relocation_offset='296' insts_offset='336' stub_offset='688' scopes_data_offset='720' scopes_pcs_offset='832' dependencies_offset='1232' nul_chk_table_offset='1240' method='java/lang/String hashCode ()I' bytes='55' count='2888' backedge_count='73779' iicount='2888' stamp='0.239'/>
<writer thread='3331'/>
<task_queued compile_id='32' method='java/util/HashMap$Node getKey ()Ljava/lang/Object;' bytes='5' count='128' iicount='128' level='1' stamp='0.239' comment='tiered' hot_count='128'/>
<task_queued compile_id='33' method='java/util/HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='1664' backedge_count='47' iicount='1664' level='3' stamp='0.239' comment='tiered' hot_count='1664'/>
<task_queued compile_id='34' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='2432' iicount='2432' level='3' stamp='0.240' comment='tiered' hot_count='2432'/>
<writer thread='17923'/>
Decoding compiled method 0x000000010da15450:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010bcd81a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x000000010da15620: mov    0x8(%rsi),%r10d
  0x000000010da15624: shl    $0x3,%r10
  0x000000010da15628: cmp    %rax,%r10
  0x000000010da1562b: jne    0x000000010d949e60  ;   {runtime_call}
  0x000000010da15631: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010da1563c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010da15640: mov    %eax,-0x14000(%rsp)
  0x000000010da15647: push   %rbp
  0x000000010da15648: sub    $0x60,%rsp
  0x000000010da1564c: movabs $0x10beaaf38,%rdi  ;   {metadata(method data for {method} {0x000000010bcd81a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000010da15656: mov    0xdc(%rdi),%ebx
  0x000000010da1565c: add    $0x8,%ebx
  0x000000010da1565f: mov    %ebx,0xdc(%rdi)
  0x000000010da15665: movabs $0x10bcd81a0,%rdi  ;   {metadata({method} {0x000000010bcd81a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000010da1566f: and    $0x1ff8,%ebx
  0x000000010da15675: cmp    $0x0,%ebx
  0x000000010da15678: je     0x000000010da15946  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x000000010da1567e: mov    %rsi,%rdi
  0x000000010da15681: movabs $0x10beaaf38,%rbx  ;   {metadata(method data for {method} {0x000000010bcd81a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000010da1568b: addq   $0x1,0x108(%rbx)
  0x000000010da15693: movabs $0x10be4d1a8,%rdi  ;   {metadata(method data for {method} {0x000000010bcd5480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000010da1569d: mov    0xdc(%rdi),%ebx
  0x000000010da156a3: add    $0x8,%ebx
  0x000000010da156a6: mov    %ebx,0xdc(%rdi)
  0x000000010da156ac: movabs $0x10bcd5480,%rdi  ;   {metadata({method} {0x000000010bcd5480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000010da156b6: and    $0x7ffff8,%ebx
  0x000000010da156bc: cmp    $0x0,%ebx
  0x000000010da156bf: je     0x000000010da1595d
  0x000000010da156c5: cmp    $0x0,%ecx
  0x000000010da156c8: movabs $0x10beaaf38,%rdi  ;   {metadata(method data for {method} {0x000000010bcd81a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000010da156d2: movabs $0x118,%rbx
  0x000000010da156dc: jge    0x000000010da156ec
  0x000000010da156e2: movabs $0x128,%rbx
  0x000000010da156ec: mov    (%rdi,%rbx,1),%rax
  0x000000010da156f0: lea    0x1(%rax),%rax
  0x000000010da156f4: mov    %rax,(%rdi,%rbx,1)
  0x000000010da156f8: jl     0x000000010da15906  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x000000010da156fe: cmp    $0x0,%r8d
  0x000000010da15702: movabs $0x10beaaf38,%rdi  ;   {metadata(method data for {method} {0x000000010bcd81a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000010da1570c: movabs $0x148,%rbx
  0x000000010da15716: jg     0x000000010da15726
  0x000000010da1571c: movabs $0x158,%rbx
  0x000000010da15726: mov    (%rdi,%rbx,1),%rax
  0x000000010da1572a: lea    0x1(%rax),%rax
  0x000000010da1572e: mov    %rax,(%rdi,%rbx,1)
  0x000000010da15732: jg     0x000000010da157ad  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x000000010da15738: cmp    $0x0,%r8d
  0x000000010da1573c: movabs $0x10beaaf38,%rdi  ;   {metadata(method data for {method} {0x000000010bcd81a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000010da15746: movabs $0x168,%rbx
  0x000000010da15750: jge    0x000000010da15760
  0x000000010da15756: movabs $0x178,%rbx
  0x000000010da15760: mov    (%rdi,%rbx,1),%rax
  0x000000010da15764: lea    0x1(%rax),%rax
  0x000000010da15768: mov    %rax,(%rdi,%rbx,1)
  0x000000010da1576c: jl     0x000000010da158c6  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)

  0x000000010da15772: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; implicit exception: dispatches to 0x000000010da15974
  0x000000010da15775: cmp    %edi,%ecx
  0x000000010da15777: movabs $0x10beaaf38,%rdi  ;   {metadata(method data for {method} {0x000000010bcd81a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000010da15781: movabs $0x198,%rbx
  0x000000010da1578b: jg     0x000000010da1579b
  0x000000010da15791: movabs $0x1a8,%rbx
  0x000000010da1579b: mov    (%rdi,%rbx,1),%rax
  0x000000010da1579f: lea    0x1(%rax),%rax
  0x000000010da157a3: mov    %rax,(%rdi,%rbx,1)
  0x000000010da157a7: jle    0x000000010da15842  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)

  0x000000010da157ad: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; implicit exception: dispatches to 0x000000010da15979
  0x000000010da157b0: sub    %r8d,%edi
  0x000000010da157b3: cmp    %edi,%ecx
  0x000000010da157b5: movabs $0x10beaaf38,%rdi  ;   {metadata(method data for {method} {0x000000010bcd81a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000010da157bf: movabs $0x1b8,%rbx
  0x000000010da157c9: jle    0x000000010da157d9
  0x000000010da157cf: movabs $0x1c8,%rbx
  0x000000010da157d9: mov    (%rdi,%rbx,1),%rax
  0x000000010da157dd: lea    0x1(%rax),%rax
  0x000000010da157e1: mov    %rax,(%rdi,%rbx,1)
  0x000000010da157e5: jg     0x000000010da1587c  ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)

  0x000000010da157eb: mov    %rsi,0x38(%rsp)
  0x000000010da157f0: movabs $0x10beaaf38,%rdi  ;   {metadata(method data for {method} {0x000000010bcd81a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000010da157fa: addq   $0x1,0x1e8(%rdi)
  0x000000010da15802: add    %ecx,%r8d
  0x000000010da15805: mov    %rdx,%rsi
  0x000000010da15808: mov    %rcx,%rdx
  0x000000010da1580b: mov    %r8,%rcx           ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)

  0x000000010da1580e: nop
  0x000000010da1580f: callq  0x000000010d94a520  ; OopMap{[56]=Oop off=500}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ;   {static_call}
  0x000000010da15814: mov    0x38(%rsp),%rsi
  0x000000010da15819: mov    %rax,%r10
  0x000000010da1581c: shr    $0x3,%r10
  0x000000010da15820: mov    %r10d,0xc(%rsi)
  0x000000010da15824: shr    $0x9,%rsi
  0x000000010da15828: movabs $0x10717e000,%rdx
  0x000000010da15832: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)

  0x000000010da15836: add    $0x60,%rsp
  0x000000010da1583a: pop    %rbp
  0x000000010da1583b: test   %eax,-0x572f741(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da15841: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@81 (line 208)

  0x000000010da15842: movabs $0x76ab0b228,%rdx  ;   {oop(&quot;&quot;)}
  0x000000010da1584c: mov    0xc(%rdx),%edx     ; implicit exception: dispatches to 0x000000010da1597e
  0x000000010da1584f: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)

  0x000000010da15853: mov    %rdx,%r10
  0x000000010da15856: shr    $0x3,%r10
  0x000000010da1585a: mov    %r10d,0xc(%rsi)
  0x000000010da1585e: shr    $0x9,%rsi
  0x000000010da15862: movabs $0x10717e000,%rdx
  0x000000010da1586c: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)

  0x000000010da15870: add    $0x60,%rsp
  0x000000010da15874: pop    %rbp
  0x000000010da15875: test   %eax,-0x572f77b(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da1587b: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@49 (line 200)

  0x000000010da1587c: nopl   0x0(%rax)
  0x000000010da15880: jmpq   0x000000010da15992  ;   {no_reloc}
  0x000000010da15885: add    %al,(%rax)
  0x000000010da15887: add    %al,(%rax)
  0x000000010da15889: add    %ch,%cl
  0x000000010da1588b: or     $0x48000001,%eax   ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)

  0x000000010da15890: mov    %eax,%edx
  0x000000010da15892: movabs $0x10beaaf38,%rsi  ;   {metadata(method data for {method} {0x000000010bcd81a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000010da1589c: addq   $0x1,0x1d8(%rsi)
  0x000000010da158a4: add    %ecx,%r8d
  0x000000010da158a7: mov    %r8,%rdx
  0x000000010da158aa: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)

  0x000000010da158ad: mov    %rax,0x40(%rsp)
  0x000000010da158b2: nop
  0x000000010da158b3: nop
  0x000000010da158b4: nop
  0x000000010da158b5: nop
  0x000000010da158b6: nop
  0x000000010da158b7: callq  0x000000010d94a0a0  ; OopMap{[64]=Oop off=668}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)
                                                ;   {optimized virtual_call}
  0x000000010da158bc: mov    0x40(%rsp),%rax
  0x000000010da158c1: jmpq   0x000000010da15a20  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@68 (line 205)

  0x000000010da158c6: xchg   %ax,%ax
  0x000000010da158c8: jmpq   0x000000010da159b8  ;   {no_reloc}
  0x000000010da158cd: add    %al,(%rax)
  0x000000010da158cf: add    %al,(%rax)
  0x000000010da158d1: add    %ch,%cl
  0x000000010da158d3: jmp    0x000000010da158d5
  0x000000010da158d5: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)

  0x000000010da158d7: mov    %rax,%rdx
  0x000000010da158da: movabs $0x10beaaf38,%rsi  ;   {metadata(method data for {method} {0x000000010bcd81a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000010da158e4: addq   $0x1,0x188(%rsi)
  0x000000010da158ec: mov    %r8,%rdx
  0x000000010da158ef: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)

  0x000000010da158f2: mov    %rax,0x48(%rsp)
  0x000000010da158f7: callq  0x000000010d94a0a0  ; OopMap{[72]=Oop off=732}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)
                                                ;   {optimized virtual_call}
  0x000000010da158fc: mov    0x48(%rsp),%rax
  0x000000010da15901: jmpq   0x000000010da15a20  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@33 (line 196)

  0x000000010da15906: xchg   %ax,%ax
  0x000000010da15908: jmpq   0x000000010da159de  ;   {no_reloc}
  0x000000010da1590d: add    %al,(%rax)
  0x000000010da1590f: add    %al,(%rax)
  0x000000010da15911: add    %ch,%cl
  0x000000010da15913: roll   (%rax)
  0x000000010da15915: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x000000010da15917: mov    %rax,%rdx
  0x000000010da1591a: movabs $0x10beaaf38,%rsi  ;   {metadata(method data for {method} {0x000000010bcd81a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000010da15924: addq   $0x1,0x138(%rsi)
  0x000000010da1592c: mov    %rcx,%rdx
  0x000000010da1592f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x000000010da15932: mov    %rax,0x50(%rsp)
  0x000000010da15937: callq  0x000000010d94a0a0  ; OopMap{[80]=Oop off=796}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x000000010da1593c: mov    0x50(%rsp),%rax
  0x000000010da15941: jmpq   0x000000010da15a20
  0x000000010da15946: mov    %rdi,0x8(%rsp)
  0x000000010da1594b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da15953: callq  0x000000010da074e0  ; OopMap{rsi=Oop rdx=Oop off=824}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x000000010da15958: jmpq   0x000000010da1567e
  0x000000010da1595d: mov    %rdi,0x8(%rsp)
  0x000000010da15962: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da1596a: callq  0x000000010da074e0  ; OopMap{rsi=Oop rdx=Oop off=847}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x000000010da1596f: jmpq   0x000000010da156c5
  0x000000010da15974: callq  0x000000010d9749c0  ; OopMap{rsi=Oop rdx=Oop off=857}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ;   {runtime_call}
  0x000000010da15979: callq  0x000000010d9749c0  ; OopMap{rsi=Oop rdx=Oop off=862}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ;   {runtime_call}
  0x000000010da1597e: callq  0x000000010d9749c0  ; OopMap{rsi=Oop off=867}
                                                ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ;   {runtime_call}
  0x000000010da15983: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010da1598d: mov    $0xa050f00,%eax
  0x000000010da15992: callq  0x000000010da05ba0  ; OopMap{off=887}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x000000010da15997: jmpq   0x000000010da15880
  0x000000010da1599c: mov    %rdx,%rdx
  0x000000010da1599f: callq  0x000000010d9744a0  ; OopMap{off=900}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x000000010da159a4: jmpq   0x000000010da1588f
  0x000000010da159a9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010da159b3: mov    $0xa050f00,%eax
  0x000000010da159b8: callq  0x000000010da05ba0  ; OopMap{off=925}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x000000010da159bd: jmpq   0x000000010da158c8
  0x000000010da159c2: mov    %rdx,%rdx
  0x000000010da159c5: callq  0x000000010d9744a0  ; OopMap{off=938}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x000000010da159ca: jmpq   0x000000010da158d7
  0x000000010da159cf: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010da159d9: mov    $0xa050f00,%eax
  0x000000010da159de: callq  0x000000010da05ba0  ; OopMap{off=963}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x000000010da159e3: jmpq   0x000000010da15908
  0x000000010da159e8: mov    %rdx,%rdx
  0x000000010da159eb: callq  0x000000010d9744a0  ; OopMap{off=976}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x000000010da159f0: jmpq   0x000000010da15917
  0x000000010da159f5: nop
  0x000000010da159f6: nop
  0x000000010da159f7: mov    0x2a8(%r15),%rax
  0x000000010da159fe: movabs $0x0,%r10
  0x000000010da15a08: mov    %r10,0x2a8(%r15)
  0x000000010da15a0f: movabs $0x0,%r10
  0x000000010da15a19: mov    %r10,0x2b0(%r15)
  0x000000010da15a20: add    $0x60,%rsp
  0x000000010da15a24: pop    %rbp
  0x000000010da15a25: jmpq   0x000000010d976a20  ;   {runtime_call}
  0x000000010da15a2a: hlt    
  0x000000010da15a2b: hlt    
  0x000000010da15a2c: hlt    
  0x000000010da15a2d: hlt    
  0x000000010da15a2e: hlt    
  0x000000010da15a2f: hlt    
  0x000000010da15a30: hlt    
  0x000000010da15a31: hlt    
  0x000000010da15a32: hlt    
  0x000000010da15a33: hlt    
  0x000000010da15a34: hlt    
  0x000000010da15a35: hlt    
  0x000000010da15a36: hlt    
  0x000000010da15a37: hlt    
  0x000000010da15a38: hlt    
  0x000000010da15a39: hlt    
  0x000000010da15a3a: hlt    
  0x000000010da15a3b: hlt    
  0x000000010da15a3c: hlt    
  0x000000010da15a3d: hlt    
  0x000000010da15a3e: hlt    
  0x000000010da15a3f: hlt    
[Stub Code]
  0x000000010da15a40: nop                       ;   {no_reloc}
  0x000000010da15a41: nop
  0x000000010da15a42: nop
  0x000000010da15a43: nop
  0x000000010da15a44: nop
  0x000000010da15a45: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010da15a4f: jmpq   0x000000010da15a4f  ;   {runtime_call}
  0x000000010da15a54: nop
  0x000000010da15a55: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010da15a5f: jmpq   0x000000010da15a5f  ;   {runtime_call}
  0x000000010da15a64: nop
  0x000000010da15a65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010da15a6f: jmpq   0x000000010da15a6f  ;   {runtime_call}
  0x000000010da15a74: nop
  0x000000010da15a75: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010da15a7f: jmpq   0x000000010da15a7f  ;   {runtime_call}
[Exception Handler]
  0x000000010da15a84: callq  0x000000010d974060  ;   {runtime_call}
  0x000000010da15a89: mov    %rsp,-0x28(%rsp)
  0x000000010da15a8e: sub    $0x80,%rsp
  0x000000010da15a95: mov    %rax,0x78(%rsp)
  0x000000010da15a9a: mov    %rcx,0x70(%rsp)
  0x000000010da15a9f: mov    %rdx,0x68(%rsp)
  0x000000010da15aa4: mov    %rbx,0x60(%rsp)
  0x000000010da15aa9: mov    %rbp,0x50(%rsp)
  0x000000010da15aae: mov    %rsi,0x48(%rsp)
  0x000000010da15ab3: mov    %rdi,0x40(%rsp)
  0x000000010da15ab8: mov    %r8,0x38(%rsp)
  0x000000010da15abd: mov    %r9,0x30(%rsp)
  0x000000010da15ac2: mov    %r10,0x28(%rsp)
  0x000000010da15ac7: mov    %r11,0x20(%rsp)
  0x000000010da15acc: mov    %r12,0x18(%rsp)
  0x000000010da15ad1: mov    %r13,0x10(%rsp)
  0x000000010da15ad6: mov    %r14,0x8(%rsp)
  0x000000010da15adb: mov    %r15,(%rsp)
  0x000000010da15adf: movabs $0x1099e391c,%rdi  ;   {external_word}
  0x000000010da15ae9: movabs $0x10da15a89,%rsi  ;   {internal_word}
  0x000000010da15af3: mov    %rsp,%rdx
  0x000000010da15af6: and    $0xfffffffffffffff0,%rsp
  0x000000010da15afa: callq  0x0000000109807a0e  ;   {runtime_call}
  0x000000010da15aff: hlt    
[Deopt Handler Code]
  0x000000010da15b00: movabs $0x10da15b00,%r10  ;   {section_word}
  0x000000010da15b0a: push   %r10
  0x000000010da15b0c: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da15b11: hlt    
  0x000000010da15b12: hlt    
  0x000000010da15b13: hlt    
  0x000000010da15b14: hlt    
  0x000000010da15b15: hlt    
  0x000000010da15b16: hlt    
  0x000000010da15b17: hlt    
<nmethod compile_id='1' compiler='C1' level='3' entry='0x000000010da15620' size='2704' address='0x000000010da15450' relocation_offset='296' insts_offset='464' stub_offset='1520' scopes_data_offset='1752' scopes_pcs_offset='2040' dependencies_offset='2664' nul_chk_table_offset='2672' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='2104' iicount='2104' stamp='0.247'/>
<writer thread='15619'/>
<task_queued compile_id='35' method='java/util/Arrays copyOf ([CI)[C' bytes='19' count='768' iicount='768' level='3' stamp='0.247' comment='tiered' hot_count='768'/>
<writer thread='3331'/>
<task_queued compile_id='36' method='com/garden/alanni/asm/Test add (II)I' bytes='17' count='896' iicount='896' level='3' stamp='0.248' comment='tiered' hot_count='896'/>
<writer thread='17923'/>
Decoding compiled method 0x000000010da1ad90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x000000010da1af60: mov    0x8(%rsi),%r10d
  0x000000010da1af64: shl    $0x3,%r10
  0x000000010da1af68: cmp    %rax,%r10
  0x000000010da1af6b: jne    0x000000010d949e60  ;   {runtime_call}
  0x000000010da1af71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010da1af7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010da1af80: mov    %eax,-0x14000(%rsp)
  0x000000010da1af87: push   %rbp
  0x000000010da1af88: sub    $0x50,%rsp
  0x000000010da1af8c: mov    %edx,0x28(%rsp)
  0x000000010da1af90: mov    %rcx,0x30(%rsp)
  0x000000010da1af95: movabs $0x10bef39b8,%rdi  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1af9f: mov    0xdc(%rdi),%ebx
  0x000000010da1afa5: add    $0x8,%ebx
  0x000000010da1afa8: mov    %ebx,0xdc(%rdi)
  0x000000010da1afae: movabs $0x10bdbfd08,%rdi  ;   {metadata({method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1afb8: and    $0x1ff8,%ebx
  0x000000010da1afbe: cmp    $0x0,%ebx
  0x000000010da1afc1: je     0x000000010da1b797  ;*aload_0
                                                ; - java.util.HashMap::getNode@0 (line 569)

  0x000000010da1afc7: mov    0x24(%rsi),%esi
  0x000000010da1afca: shl    $0x3,%rsi          ;*getfield table
                                                ; - java.util.HashMap::getNode@1 (line 569)

  0x000000010da1afce: cmp    $0x0,%rsi
  0x000000010da1afd2: movabs $0x10bef39b8,%rdi  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1afdc: movabs $0x108,%rbx
  0x000000010da1afe6: je     0x000000010da1aff6
  0x000000010da1afec: movabs $0x118,%rbx
  0x000000010da1aff6: mov    (%rdi,%rbx,1),%rax
  0x000000010da1affa: lea    0x1(%rax),%rax
  0x000000010da1affe: mov    %rax,(%rdi,%rbx,1)
  0x000000010da1b002: je     0x000000010da1b5e2  ;*ifnull
                                                ; - java.util.HashMap::getNode@6 (line 569)

  0x000000010da1b008: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.util.HashMap::getNode@10 (line 569)
                                                ; implicit exception: dispatches to 0x000000010da1b7ae
  0x000000010da1b00b: cmp    $0x0,%edi
  0x000000010da1b00e: movabs $0x10bef39b8,%rbx  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b018: movabs $0x128,%rax
  0x000000010da1b022: jle    0x000000010da1b032
  0x000000010da1b028: movabs $0x138,%rax
  0x000000010da1b032: mov    (%rbx,%rax,1),%r8
  0x000000010da1b036: lea    0x1(%r8),%r8
  0x000000010da1b03a: mov    %r8,(%rbx,%rax,1)
  0x000000010da1b03e: jle    0x000000010da1b5e2  ;*ifle
                                                ; - java.util.HashMap::getNode@14 (line 569)

  0x000000010da1b044: dec    %edi
  0x000000010da1b046: and    %rdx,%rdi
  0x000000010da1b049: movslq %edi,%rbx
  0x000000010da1b04c: cmp    0xc(%rsi),%edi
  0x000000010da1b04f: jae    0x000000010da1b7b3
  0x000000010da1b055: mov    0x10(%rsi,%rbx,4),%edi
  0x000000010da1b059: shl    $0x3,%rdi          ;*aaload
                                                ; - java.util.HashMap::getNode@24 (line 569)

  0x000000010da1b05d: cmp    $0x0,%rdi
  0x000000010da1b061: movabs $0x10bef39b8,%rsi  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b06b: movabs $0x148,%rbx
  0x000000010da1b075: je     0x000000010da1b085
  0x000000010da1b07b: movabs $0x158,%rbx
  0x000000010da1b085: mov    (%rsi,%rbx,1),%rax
  0x000000010da1b089: lea    0x1(%rax),%rax
  0x000000010da1b08d: mov    %rax,(%rsi,%rbx,1)
  0x000000010da1b091: je     0x000000010da1b5e2  ;*ifnull
                                                ; - java.util.HashMap::getNode@28 (line 569)

  0x000000010da1b097: mov    0xc(%rdi),%esi     ;*getfield hash
                                                ; - java.util.HashMap::getNode@33 (line 571)
                                                ; implicit exception: dispatches to 0x000000010da1b7bc
  0x000000010da1b09a: cmp    %edx,%esi
  0x000000010da1b09c: movabs $0x10bef39b8,%rsi  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b0a6: movabs $0x168,%rbx
  0x000000010da1b0b0: jne    0x000000010da1b0c0
  0x000000010da1b0b6: movabs $0x178,%rbx
  0x000000010da1b0c0: mov    (%rsi,%rbx,1),%rax
  0x000000010da1b0c4: lea    0x1(%rax),%rax
  0x000000010da1b0c8: mov    %rax,(%rsi,%rbx,1)
  0x000000010da1b0cc: jne    0x000000010da1b23a  ;*if_icmpne
                                                ; - java.util.HashMap::getNode@37 (line 571)

  0x000000010da1b0d2: mov    0x10(%rdi),%esi
  0x000000010da1b0d5: shl    $0x3,%rsi          ;*getfield key
                                                ; - java.util.HashMap::getNode@42 (line 571)

  0x000000010da1b0d9: cmp    %rcx,%rsi
  0x000000010da1b0dc: movabs $0x10bef39b8,%rbx  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b0e6: movabs $0x188,%rax
  0x000000010da1b0f0: je     0x000000010da1b100
  0x000000010da1b0f6: movabs $0x198,%rax
  0x000000010da1b100: mov    (%rbx,%rax,1),%r8
  0x000000010da1b104: lea    0x1(%r8),%r8
  0x000000010da1b108: mov    %r8,(%rbx,%rax,1)
  0x000000010da1b10c: je     0x000000010da1b788  ;*if_acmpeq
                                                ; - java.util.HashMap::getNode@49 (line 571)

  0x000000010da1b112: cmp    $0x0,%rcx
  0x000000010da1b116: movabs $0x10bef39b8,%rbx  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b120: movabs $0x1a8,%rax
  0x000000010da1b12a: je     0x000000010da1b13a
  0x000000010da1b130: movabs $0x1b8,%rax
  0x000000010da1b13a: mov    (%rbx,%rax,1),%r8
  0x000000010da1b13e: lea    0x1(%r8),%r8
  0x000000010da1b142: mov    %r8,(%rbx,%rax,1)
  0x000000010da1b146: je     0x000000010da1b23a  ;*ifnull
                                                ; - java.util.HashMap::getNode@53 (line 571)

  0x000000010da1b14c: mov    %rdi,0x20(%rsp)
  0x000000010da1b151: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x000000010da1b7c1
  0x000000010da1b154: mov    %rcx,%rbx
  0x000000010da1b157: movabs $0x10bef39b8,%rax  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b161: mov    0x8(%rbx),%ebx
  0x000000010da1b164: shl    $0x3,%rbx
  0x000000010da1b168: cmp    0x1d0(%rax),%rbx
  0x000000010da1b16f: jne    0x000000010da1b17e
  0x000000010da1b171: addq   $0x1,0x1d8(%rax)
  0x000000010da1b179: jmpq   0x000000010da1b1e4
  0x000000010da1b17e: cmp    0x1e0(%rax),%rbx
  0x000000010da1b185: jne    0x000000010da1b194
  0x000000010da1b187: addq   $0x1,0x1e8(%rax)
  0x000000010da1b18f: jmpq   0x000000010da1b1e4
  0x000000010da1b194: cmpq   $0x0,0x1d0(%rax)
  0x000000010da1b19f: jne    0x000000010da1b1b8
  0x000000010da1b1a1: mov    %rbx,0x1d0(%rax)
  0x000000010da1b1a8: movq   $0x1,0x1d8(%rax)
  0x000000010da1b1b3: jmpq   0x000000010da1b1e4
  0x000000010da1b1b8: cmpq   $0x0,0x1e0(%rax)
  0x000000010da1b1c3: jne    0x000000010da1b1dc
  0x000000010da1b1c5: mov    %rbx,0x1e0(%rax)
  0x000000010da1b1cc: movq   $0x1,0x1e8(%rax)
  0x000000010da1b1d7: jmpq   0x000000010da1b1e4
  0x000000010da1b1dc: addq   $0x1,0x1c8(%rax)
  0x000000010da1b1e4: mov    %rsi,%rdx
  0x000000010da1b1e7: mov    %rcx,%rsi          ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@59 (line 572)

  0x000000010da1b1ea: nop
  0x000000010da1b1eb: nop
  0x000000010da1b1ec: nop
  0x000000010da1b1ed: movabs $0xffffffffffffffff,%rax
  0x000000010da1b1f7: callq  0x000000010d94a2e0  ; OopMap{[48]=Oop [32]=Oop off=668}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@59 (line 572)
                                                ;   {virtual_call}
  0x000000010da1b1fc: cmp    $0x0,%eax
  0x000000010da1b1ff: movabs $0x10bef39b8,%rdx  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b209: movabs $0x1f8,%rsi
  0x000000010da1b213: je     0x000000010da1b223
  0x000000010da1b219: movabs $0x208,%rsi
  0x000000010da1b223: mov    (%rdx,%rsi,1),%rdi
  0x000000010da1b227: lea    0x1(%rdi),%rdi
  0x000000010da1b22b: mov    %rdi,(%rdx,%rsi,1)
  0x000000010da1b22f: mov    0x20(%rsp),%rdi
  0x000000010da1b234: jne    0x000000010da1b788  ;*ifeq
                                                ; - java.util.HashMap::getNode@62 (line 572)

  0x000000010da1b23a: mov    0x18(%rdi),%edx
  0x000000010da1b23d: shl    $0x3,%rdx          ;*getfield next
                                                ; - java.util.HashMap::getNode@70 (line 574)

  0x000000010da1b241: cmp    $0x0,%rdx
  0x000000010da1b245: movabs $0x10bef39b8,%rsi  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b24f: movabs $0x218,%rbx
  0x000000010da1b259: je     0x000000010da1b269
  0x000000010da1b25f: movabs $0x228,%rbx
  0x000000010da1b269: mov    (%rsi,%rbx,1),%rax
  0x000000010da1b26d: lea    0x1(%rax),%rax
  0x000000010da1b271: mov    %rax,(%rsi,%rbx,1)
  0x000000010da1b275: je     0x000000010da1b5e2  ;*ifnull
                                                ; - java.util.HashMap::getNode@76 (line 574)

  0x000000010da1b27b: cmp    $0x0,%rdi
  0x000000010da1b27f: jne    0x000000010da1b29a
  0x000000010da1b281: movabs $0x10bef39b8,%rax  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b28b: orl    $0x100,0x230(%rax)
  0x000000010da1b295: jmpq   0x000000010da1b35a
  0x000000010da1b29a: movabs $0x7c0032ce0,%rcx  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x000000010da1b2a4: mov    0x8(%rdi),%ebx
  0x000000010da1b2a7: shl    $0x3,%rbx
  0x000000010da1b2ab: cmp    %rbx,%rcx
  0x000000010da1b2ae: jne    0x000000010da1b33e
  0x000000010da1b2b4: movabs $0x10bef39b8,%rax  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b2be: mov    0x8(%rdi),%ecx
  0x000000010da1b2c1: shl    $0x3,%rcx
  0x000000010da1b2c5: cmp    0x240(%rax),%rcx
  0x000000010da1b2cc: jne    0x000000010da1b2db
  0x000000010da1b2ce: addq   $0x1,0x248(%rax)
  0x000000010da1b2d6: jmpq   0x000000010da1b35f
  0x000000010da1b2db: cmp    0x250(%rax),%rcx
  0x000000010da1b2e2: jne    0x000000010da1b2f1
  0x000000010da1b2e4: addq   $0x1,0x258(%rax)
  0x000000010da1b2ec: jmpq   0x000000010da1b35f
  0x000000010da1b2f1: cmpq   $0x0,0x240(%rax)
  0x000000010da1b2fc: jne    0x000000010da1b315
  0x000000010da1b2fe: mov    %rcx,0x240(%rax)
  0x000000010da1b305: movq   $0x1,0x248(%rax)
  0x000000010da1b310: jmpq   0x000000010da1b35f
  0x000000010da1b315: cmpq   $0x0,0x250(%rax)
  0x000000010da1b320: jne    0x000000010da1b339
  0x000000010da1b322: mov    %rcx,0x250(%rax)
  0x000000010da1b329: movq   $0x1,0x258(%rax)
  0x000000010da1b334: jmpq   0x000000010da1b35f
  0x000000010da1b339: jmpq   0x000000010da1b35f
  0x000000010da1b33e: movabs $0x10bef39b8,%rax  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b348: subq   $0x1,0x238(%rax)
  0x000000010da1b350: jmpq   0x000000010da1b35a
  0x000000010da1b355: jmpq   0x000000010da1b35f
  0x000000010da1b35a: xor    %rsi,%rsi
  0x000000010da1b35d: jmp    0x000000010da1b369
  0x000000010da1b35f: movabs $0x1,%rsi          ;*instanceof
                                                ; - java.util.HashMap::getNode@81 (line 575)

  0x000000010da1b369: cmp    $0x0,%esi
  0x000000010da1b36c: movabs $0x10bef39b8,%rsi  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b376: movabs $0x268,%rbx
  0x000000010da1b380: je     0x000000010da1b390
  0x000000010da1b386: movabs $0x278,%rbx
  0x000000010da1b390: mov    (%rsi,%rbx,1),%rax
  0x000000010da1b394: lea    0x1(%rax),%rax
  0x000000010da1b398: mov    %rax,(%rsi,%rbx,1)
  0x000000010da1b39c: jne    0x000000010da1b5f8  ;*ifeq
                                                ; - java.util.HashMap::getNode@84 (line 575)

  0x000000010da1b3a2: nopw   0x0(%rax,%rax,1)
  0x000000010da1b3a8: mov    0x30(%rsp),%rcx
  0x000000010da1b3ad: mov    0x28(%rsp),%edi
  0x000000010da1b3b1: mov    0xc(%rdx),%esi     ;*getfield hash
                                                ; - java.util.HashMap::getNode@100 (line 578)
                                                ; implicit exception: dispatches to 0x000000010da1b7c6
  0x000000010da1b3b4: cmp    %edi,%esi
  0x000000010da1b3b6: movabs $0x10bef39b8,%rsi  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b3c0: movabs $0x2e8,%rbx
  0x000000010da1b3ca: jne    0x000000010da1b3da
  0x000000010da1b3d0: movabs $0x2f8,%rbx
  0x000000010da1b3da: mov    (%rsi,%rbx,1),%rax
  0x000000010da1b3de: lea    0x1(%rax),%rax
  0x000000010da1b3e2: mov    %rax,(%rsi,%rbx,1)
  0x000000010da1b3e6: jne    0x000000010da1b552  ;*if_icmpne
                                                ; - java.util.HashMap::getNode@104 (line 578)

  0x000000010da1b3ec: mov    0x10(%rdx),%esi
  0x000000010da1b3ef: shl    $0x3,%rsi          ;*getfield key
                                                ; - java.util.HashMap::getNode@109 (line 578)

  0x000000010da1b3f3: cmp    %rcx,%rsi
  0x000000010da1b3f6: movabs $0x10bef39b8,%rbx  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b400: movabs $0x308,%rax
  0x000000010da1b40a: je     0x000000010da1b41a
  0x000000010da1b410: movabs $0x318,%rax
  0x000000010da1b41a: mov    (%rbx,%rax,1),%r8
  0x000000010da1b41e: lea    0x1(%r8),%r8
  0x000000010da1b422: mov    %r8,(%rbx,%rax,1)
  0x000000010da1b426: je     0x000000010da1b5d3  ;*if_acmpeq
                                                ; - java.util.HashMap::getNode@116 (line 578)

  0x000000010da1b42c: cmp    $0x0,%rcx
  0x000000010da1b430: movabs $0x10bef39b8,%rbx  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b43a: movabs $0x328,%rax
  0x000000010da1b444: je     0x000000010da1b454
  0x000000010da1b44a: movabs $0x338,%rax
  0x000000010da1b454: mov    (%rbx,%rax,1),%r8
  0x000000010da1b458: lea    0x1(%r8),%r8
  0x000000010da1b45c: mov    %r8,(%rbx,%rax,1)
  0x000000010da1b460: je     0x000000010da1b552  ;*ifnull
                                                ; - java.util.HashMap::getNode@120 (line 578)

  0x000000010da1b466: mov    %rdx,0x38(%rsp)
  0x000000010da1b46b: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x000000010da1b7cb
  0x000000010da1b46e: mov    %rcx,%rbx
  0x000000010da1b471: movabs $0x10bef39b8,%rax  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b47b: mov    0x8(%rbx),%ebx
  0x000000010da1b47e: shl    $0x3,%rbx
  0x000000010da1b482: cmp    0x350(%rax),%rbx
  0x000000010da1b489: jne    0x000000010da1b498
  0x000000010da1b48b: addq   $0x1,0x358(%rax)
  0x000000010da1b493: jmpq   0x000000010da1b4fe
  0x000000010da1b498: cmp    0x360(%rax),%rbx
  0x000000010da1b49f: jne    0x000000010da1b4ae
  0x000000010da1b4a1: addq   $0x1,0x368(%rax)
  0x000000010da1b4a9: jmpq   0x000000010da1b4fe
  0x000000010da1b4ae: cmpq   $0x0,0x350(%rax)
  0x000000010da1b4b9: jne    0x000000010da1b4d2
  0x000000010da1b4bb: mov    %rbx,0x350(%rax)
  0x000000010da1b4c2: movq   $0x1,0x358(%rax)
  0x000000010da1b4cd: jmpq   0x000000010da1b4fe
  0x000000010da1b4d2: cmpq   $0x0,0x360(%rax)
  0x000000010da1b4dd: jne    0x000000010da1b4f6
  0x000000010da1b4df: mov    %rbx,0x360(%rax)
  0x000000010da1b4e6: movq   $0x1,0x368(%rax)
  0x000000010da1b4f1: jmpq   0x000000010da1b4fe
  0x000000010da1b4f6: addq   $0x1,0x348(%rax)
  0x000000010da1b4fe: mov    %rsi,%rdx
  0x000000010da1b501: mov    %rcx,%rsi          ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@126 (line 579)

  0x000000010da1b504: nop
  0x000000010da1b505: movabs $0xffffffffffffffff,%rax
  0x000000010da1b50f: callq  0x000000010d94a2e0  ; OopMap{[56]=Oop [48]=Oop off=1460}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@126 (line 579)
                                                ;   {virtual_call}
  0x000000010da1b514: cmp    $0x0,%eax
  0x000000010da1b517: movabs $0x10bef39b8,%rax  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b521: movabs $0x378,%rdx
  0x000000010da1b52b: je     0x000000010da1b53b
  0x000000010da1b531: movabs $0x388,%rdx
  0x000000010da1b53b: mov    (%rax,%rdx,1),%rcx
  0x000000010da1b53f: lea    0x1(%rcx),%rcx
  0x000000010da1b543: mov    %rcx,(%rax,%rdx,1)
  0x000000010da1b547: mov    0x38(%rsp),%rdx
  0x000000010da1b54c: jne    0x000000010da1b5d3  ;*ifeq
                                                ; - java.util.HashMap::getNode@129 (line 579)

  0x000000010da1b552: mov    0x18(%rdx),%eax
  0x000000010da1b555: shl    $0x3,%rax          ;*getfield next
                                                ; - java.util.HashMap::getNode@137 (line 581)

  0x000000010da1b559: movabs $0x10bef39b8,%rdx  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b563: mov    0xe0(%rdx),%ecx
  0x000000010da1b569: add    $0x8,%ecx
  0x000000010da1b56c: mov    %ecx,0xe0(%rdx)
  0x000000010da1b572: movabs $0x10bdbfd08,%rdx  ;   {metadata({method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b57c: and    $0xfff8,%ecx
  0x000000010da1b582: cmp    $0x0,%ecx
  0x000000010da1b585: je     0x000000010da1b7d0  ; OopMap{[48]=Oop rax=Oop off=1579}
                                                ;*ifnonnull
                                                ; - java.util.HashMap::getNode@143 (line 581)

  0x000000010da1b58b: test   %eax,-0x5735491(%rip)        # 0x00000001082e6100
                                                ;   {poll}
  0x000000010da1b591: cmp    $0x0,%rax
  0x000000010da1b595: movabs $0x10bef39b8,%rdx  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b59f: movabs $0x398,%rcx
  0x000000010da1b5a9: jne    0x000000010da1b5b9
  0x000000010da1b5af: movabs $0x3a8,%rcx
  0x000000010da1b5b9: mov    (%rdx,%rcx,1),%rsi
  0x000000010da1b5bd: lea    0x1(%rsi),%rsi
  0x000000010da1b5c1: mov    %rsi,(%rdx,%rcx,1)
  0x000000010da1b5c5: je     0x000000010da1b5e2  ;*ifnonnull
                                                ; - java.util.HashMap::getNode@143 (line 581)

  0x000000010da1b5cb: mov    %rax,%rdx
  0x000000010da1b5ce: jmpq   0x000000010da1b3a8  ;*aload
                                                ; - java.util.HashMap::getNode@98 (line 578)

  0x000000010da1b5d3: mov    %rdx,%rax
  0x000000010da1b5d6: add    $0x50,%rsp
  0x000000010da1b5da: pop    %rbp
  0x000000010da1b5db: test   %eax,-0x57354e1(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da1b5e1: retq                      ;*areturn
                                                ; - java.util.HashMap::getNode@134 (line 580)

  0x000000010da1b5e2: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010da1b5ec: add    $0x50,%rsp
  0x000000010da1b5f0: pop    %rbp
  0x000000010da1b5f1: test   %eax,-0x57354f7(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da1b5f7: retq                      ;*areturn
                                                ; - java.util.HashMap::getNode@147 (line 584)

  0x000000010da1b5f8: mov    0x30(%rsp),%rcx
  0x000000010da1b5fd: mov    0x28(%rsp),%edx
  0x000000010da1b601: cmp    $0x0,%rdi
  0x000000010da1b605: jne    0x000000010da1b620
  0x000000010da1b607: movabs $0x10bef39b8,%rbx  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b611: orl    $0x100,0x280(%rbx)
  0x000000010da1b61b: jmpq   0x000000010da1b6e0
  0x000000010da1b620: movabs $0x7c0032ce0,%rax  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x000000010da1b62a: mov    0x8(%rdi),%esi
  0x000000010da1b62d: shl    $0x3,%rsi
  0x000000010da1b631: cmp    %rsi,%rax
  0x000000010da1b634: jne    0x000000010da1b6c4
  0x000000010da1b63a: movabs $0x10bef39b8,%rbx  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b644: mov    0x8(%rdi),%eax
  0x000000010da1b647: shl    $0x3,%rax
  0x000000010da1b64b: cmp    0x290(%rbx),%rax
  0x000000010da1b652: jne    0x000000010da1b661
  0x000000010da1b654: addq   $0x1,0x298(%rbx)
  0x000000010da1b65c: jmpq   0x000000010da1b6e0
  0x000000010da1b661: cmp    0x2a0(%rbx),%rax
  0x000000010da1b668: jne    0x000000010da1b677
  0x000000010da1b66a: addq   $0x1,0x2a8(%rbx)
  0x000000010da1b672: jmpq   0x000000010da1b6e0
  0x000000010da1b677: cmpq   $0x0,0x290(%rbx)
  0x000000010da1b682: jne    0x000000010da1b69b
  0x000000010da1b684: mov    %rax,0x290(%rbx)
  0x000000010da1b68b: movq   $0x1,0x298(%rbx)
  0x000000010da1b696: jmpq   0x000000010da1b6e0
  0x000000010da1b69b: cmpq   $0x0,0x2a0(%rbx)
  0x000000010da1b6a6: jne    0x000000010da1b6bf
  0x000000010da1b6a8: mov    %rax,0x2a0(%rbx)
  0x000000010da1b6af: movq   $0x1,0x2a8(%rbx)
  0x000000010da1b6ba: jmpq   0x000000010da1b6e0
  0x000000010da1b6bf: jmpq   0x000000010da1b6e0
  0x000000010da1b6c4: movabs $0x10bef39b8,%rbx  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b6ce: subq   $0x1,0x288(%rbx)
  0x000000010da1b6d6: jmpq   0x000000010da1b7e7
  0x000000010da1b6db: jmpq   0x000000010da1b6e0
  0x000000010da1b6e0: mov    %rdi,%rsi          ;*checkcast
                                                ; - java.util.HashMap::getNode@89 (line 576)

  0x000000010da1b6e3: cmp    (%rsi),%rax        ;*invokevirtual getTreeNode
                                                ; - java.util.HashMap::getNode@94 (line 576)
                                                ; implicit exception: dispatches to 0x000000010da1b7f0
  0x000000010da1b6e6: mov    %rsi,%rdi
  0x000000010da1b6e9: movabs $0x10bef39b8,%rbx  ;   {metadata(method data for {method} {0x000000010bdbfd08} &apos;getNode&apos; &apos;(ILjava/lang/Object;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da1b6f3: mov    0x8(%rdi),%edi
  0x000000010da1b6f6: shl    $0x3,%rdi
  0x000000010da1b6fa: cmp    0x2c0(%rbx),%rdi
  0x000000010da1b701: jne    0x000000010da1b710
  0x000000010da1b703: addq   $0x1,0x2c8(%rbx)
  0x000000010da1b70b: jmpq   0x000000010da1b776
  0x000000010da1b710: cmp    0x2d0(%rbx),%rdi
  0x000000010da1b717: jne    0x000000010da1b726
  0x000000010da1b719: addq   $0x1,0x2d8(%rbx)
  0x000000010da1b721: jmpq   0x000000010da1b776
  0x000000010da1b726: cmpq   $0x0,0x2c0(%rbx)
  0x000000010da1b731: jne    0x000000010da1b74a
  0x000000010da1b733: mov    %rdi,0x2c0(%rbx)
  0x000000010da1b73a: movq   $0x1,0x2c8(%rbx)
  0x000000010da1b745: jmpq   0x000000010da1b776
  0x000000010da1b74a: cmpq   $0x0,0x2d0(%rbx)
  0x000000010da1b755: jne    0x000000010da1b76e
  0x000000010da1b757: mov    %rdi,0x2d0(%rbx)
  0x000000010da1b75e: movq   $0x1,0x2d8(%rbx)
  0x000000010da1b769: jmpq   0x000000010da1b776
  0x000000010da1b76e: addq   $0x1,0x2b8(%rbx)
  0x000000010da1b776: nop
  0x000000010da1b777: callq  0x000000010d94a0a0  ; OopMap{off=2076}
                                                ;*invokevirtual getTreeNode
                                                ; - java.util.HashMap::getNode@94 (line 576)
                                                ;   {optimized virtual_call}
  0x000000010da1b77c: add    $0x50,%rsp
  0x000000010da1b780: pop    %rbp
  0x000000010da1b781: test   %eax,-0x5735687(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da1b787: retq                      ;*areturn
                                                ; - java.util.HashMap::getNode@97 (line 576)

  0x000000010da1b788: mov    %rdi,%rax
  0x000000010da1b78b: add    $0x50,%rsp
  0x000000010da1b78f: pop    %rbp
  0x000000010da1b790: test   %eax,-0x5735696(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da1b796: retq   
  0x000000010da1b797: mov    %rdi,0x8(%rsp)
  0x000000010da1b79c: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da1b7a4: callq  0x000000010da074e0  ; OopMap{rsi=Oop rcx=Oop [48]=Oop off=2121}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::getNode@-1 (line 569)
                                                ;   {runtime_call}
  0x000000010da1b7a9: jmpq   0x000000010da1afc7
  0x000000010da1b7ae: callq  0x000000010d9749c0  ; OopMap{rsi=Oop rcx=Oop [48]=Oop off=2131}
                                                ;*arraylength
                                                ; - java.util.HashMap::getNode@10 (line 569)
                                                ;   {runtime_call}
  0x000000010da1b7b3: mov    %rdi,(%rsp)
  0x000000010da1b7b7: callq  0x000000010d976580  ; OopMap{rcx=Oop [48]=Oop rsi=Oop off=2140}
                                                ;*aaload
                                                ; - java.util.HashMap::getNode@24 (line 569)
                                                ;   {runtime_call}
  0x000000010da1b7bc: callq  0x000000010d9749c0  ; OopMap{rdi=Oop rcx=Oop [48]=Oop off=2145}
                                                ;*getfield hash
                                                ; - java.util.HashMap::getNode@33 (line 571)
                                                ;   {runtime_call}
  0x000000010da1b7c1: callq  0x000000010d9749c0  ; OopMap{rcx=Oop [48]=Oop [32]=Oop rsi=Oop off=2150}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@59 (line 572)
                                                ;   {runtime_call}
  0x000000010da1b7c6: callq  0x000000010d9749c0  ; OopMap{rdx=Oop rcx=Oop [48]=Oop off=2155}
                                                ;*getfield hash
                                                ; - java.util.HashMap::getNode@100 (line 578)
                                                ;   {runtime_call}
  0x000000010da1b7cb: callq  0x000000010d9749c0  ; OopMap{rcx=Oop [48]=Oop [56]=Oop rsi=Oop off=2160}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@126 (line 579)
                                                ;   {runtime_call}
  0x000000010da1b7d0: mov    %rdx,0x8(%rsp)
  0x000000010da1b7d5: movq   $0x8f,(%rsp)
  0x000000010da1b7dd: callq  0x000000010da074e0  ; OopMap{[48]=Oop rax=Oop off=2178}
                                                ;*ifnonnull
                                                ; - java.util.HashMap::getNode@143 (line 581)
                                                ;   {runtime_call}
  0x000000010da1b7e2: jmpq   0x000000010da1b58b
  0x000000010da1b7e7: mov    %rdi,(%rsp)
  0x000000010da1b7eb: callq  0x000000010da04ec0  ; OopMap{rcx=Oop [48]=Oop off=2192}
                                                ;*checkcast
                                                ; - java.util.HashMap::getNode@89 (line 576)
                                                ;   {runtime_call}
  0x000000010da1b7f0: callq  0x000000010d9749c0  ; OopMap{rcx=Oop [48]=Oop rsi=Oop off=2197}
                                                ;*invokevirtual getTreeNode
                                                ; - java.util.HashMap::getNode@94 (line 576)
                                                ;   {runtime_call}
  0x000000010da1b7f5: nop
  0x000000010da1b7f6: nop
  0x000000010da1b7f7: mov    0x2a8(%r15),%rax
  0x000000010da1b7fe: movabs $0x0,%r10
  0x000000010da1b808: mov    %r10,0x2a8(%r15)
  0x000000010da1b80f: movabs $0x0,%r10
  0x000000010da1b819: mov    %r10,0x2b0(%r15)
  0x000000010da1b820: add    $0x50,%rsp
  0x000000010da1b824: pop    %rbp
  0x000000010da1b825: jmpq   0x000000010d976a20  ;   {runtime_call}
  0x000000010da1b82a: hlt    
  0x000000010da1b82b: hlt    
  0x000000010da1b82c: hlt    
  0x000000010da1b82d: hlt    
  0x000000010da1b82e: hlt    
  0x000000010da1b82f: hlt    
  0x000000010da1b830: hlt    
  0x000000010da1b831: hlt    
  0x000000010da1b832: hlt    
  0x000000010da1b833: hlt    
  0x000000010da1b834: hlt    
  0x000000010da1b835: hlt    
  0x000000010da1b836: hlt    
  0x000000010da1b837: hlt    
  0x000000010da1b838: hlt    
  0x000000010da1b839: hlt    
  0x000000010da1b83a: hlt    
  0x000000010da1b83b: hlt    
  0x000000010da1b83c: hlt    
  0x000000010da1b83d: hlt    
  0x000000010da1b83e: hlt    
  0x000000010da1b83f: hlt    
[Stub Code]
  0x000000010da1b840: nop                       ;   {no_reloc}
  0x000000010da1b841: nop
  0x000000010da1b842: nop
  0x000000010da1b843: nop
  0x000000010da1b844: nop
  0x000000010da1b845: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010da1b84f: jmpq   0x000000010da1b84f  ;   {runtime_call}
  0x000000010da1b854: nop
  0x000000010da1b855: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010da1b85f: jmpq   0x000000010da1b85f  ;   {runtime_call}
  0x000000010da1b864: nop
  0x000000010da1b865: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010da1b86f: jmpq   0x000000010da1b86f  ;   {runtime_call}
[Exception Handler]
  0x000000010da1b874: callq  0x000000010d974060  ;   {runtime_call}
  0x000000010da1b879: mov    %rsp,-0x28(%rsp)
  0x000000010da1b87e: sub    $0x80,%rsp
  0x000000010da1b885: mov    %rax,0x78(%rsp)
  0x000000010da1b88a: mov    %rcx,0x70(%rsp)
  0x000000010da1b88f: mov    %rdx,0x68(%rsp)
  0x000000010da1b894: mov    %rbx,0x60(%rsp)
  0x000000010da1b899: mov    %rbp,0x50(%rsp)
  0x000000010da1b89e: mov    %rsi,0x48(%rsp)
  0x000000010da1b8a3: mov    %rdi,0x40(%rsp)
  0x000000010da1b8a8: mov    %r8,0x38(%rsp)
  0x000000010da1b8ad: mov    %r9,0x30(%rsp)
  0x000000010da1b8b2: mov    %r10,0x28(%rsp)
  0x000000010da1b8b7: mov    %r11,0x20(%rsp)
  0x000000010da1b8bc: mov    %r12,0x18(%rsp)
  0x000000010da1b8c1: mov    %r13,0x10(%rsp)
  0x000000010da1b8c6: mov    %r14,0x8(%rsp)
  0x000000010da1b8cb: mov    %r15,(%rsp)
  0x000000010da1b8cf: movabs $0x1099e391c,%rdi  ;   {external_word}
  0x000000010da1b8d9: movabs $0x10da1b879,%rsi  ;   {internal_word}
  0x000000010da1b8e3: mov    %rsp,%rdx
  0x000000010da1b8e6: and    $0xfffffffffffffff0,%rsp
  0x000000010da1b8ea: callq  0x0000000109807a0e  ;   {runtime_call}
  0x000000010da1b8ef: hlt    
[Deopt Handler Code]
  0x000000010da1b8f0: movabs $0x10da1b8f0,%r10  ;   {section_word}
  0x000000010da1b8fa: push   %r10
  0x000000010da1b8fc: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da1b901: hlt    
  0x000000010da1b902: hlt    
  0x000000010da1b903: hlt    
  0x000000010da1b904: hlt    
  0x000000010da1b905: hlt    
  0x000000010da1b906: hlt    
  0x000000010da1b907: hlt    
<nmethod compile_id='33' compiler='C1' level='3' entry='0x000000010da1af60' size='4176' address='0x000000010da1ad90' relocation_offset='296' insts_offset='464' stub_offset='2736' scopes_data_offset='2944' scopes_pcs_offset='3328' dependencies_offset='4112' nul_chk_table_offset='4120' method='java/util/HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='1769' backedge_count='52' iicount='1769' stamp='0.259'/>
<writer thread='15619'/>
<task_queued compile_id='37' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='2432' iicount='2432' level='3' stamp='0.259' comment='tiered' hot_count='2432'/>
<writer thread='17923'/>
Decoding compiled method 0x000000010da1aa10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010c0d7c18} &apos;add&apos; &apos;(II)I&apos; in &apos;com/garden/alanni/asm/Test&apos;
  # this:     rsi:rsi   = &apos;com/garden/alanni/asm/Test&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000010da1ab60: mov    0x8(%rsi),%r10d
  0x000000010da1ab64: shl    $0x3,%r10
  0x000000010da1ab68: cmp    %rax,%r10
  0x000000010da1ab6b: jne    0x000000010d949e60  ;   {runtime_call}
  0x000000010da1ab71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010da1ab7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010da1ab80: mov    %eax,-0x14000(%rsp)
  0x000000010da1ab87: push   %rbp
  0x000000010da1ab88: sub    $0x40,%rsp
  0x000000010da1ab8c: movabs $0x10c0d7f78,%rax
  0x000000010da1ab96: mov    0x8(%rax),%edi
  0x000000010da1ab99: add    $0x8,%edi
  0x000000010da1ab9c: mov    %edi,0x8(%rax)
  0x000000010da1ab9f: movabs $0x10c0d7c18,%rax  ;   {metadata({method} {0x000000010c0d7c18} &apos;add&apos; &apos;(II)I&apos; in &apos;com/garden/alanni/asm/Test&apos;)}
  0x000000010da1aba9: and    $0x3ff8,%edi
  0x000000010da1abaf: cmp    $0x0,%edi
  0x000000010da1abb2: je     0x000000010da1abee  ;*iload_1
                                                ; - com.garden.alanni.asm.Test::add@0 (line 10)

  0x000000010da1abb8: add    %ecx,%edx
  0x000000010da1abba: vmovsd 0x10(%rsi),%xmm0
  0x000000010da1abbf: vmovq  %xmm0,%rax         ;*getfield sum
                                                ; - com.garden.alanni.asm.Test::add@6 (line 11)

  0x000000010da1abc4: movslq %edx,%rdi
  0x000000010da1abc7: add    %rdi,%rax
  0x000000010da1abca: mov    %rax,0x30(%rsp)
  0x000000010da1abcf: vmovsd 0x30(%rsp),%xmm0
  0x000000010da1abd5: vmovsd %xmm0,0x10(%rsi)
  0x000000010da1abda: lock addl $0x0,(%rsp)     ;*putfield sum
                                                ; - com.garden.alanni.asm.Test::add@12 (line 11)

  0x000000010da1abdf: mov    %rdx,%rax
  0x000000010da1abe2: add    $0x40,%rsp
  0x000000010da1abe6: pop    %rbp
  0x000000010da1abe7: test   %eax,-0x5734aed(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da1abed: retq   
  0x000000010da1abee: mov    %rax,0x8(%rsp)
  0x000000010da1abf3: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da1abfb: callq  0x000000010da074e0  ; OopMap{rsi=Oop off=160}
                                                ;*synchronization entry
                                                ; - com.garden.alanni.asm.Test::add@-1 (line 10)
                                                ;   {runtime_call}
  0x000000010da1ac00: jmp    0x000000010da1abb8
  0x000000010da1ac02: nop
  0x000000010da1ac03: nop
  0x000000010da1ac04: mov    0x2a8(%r15),%rax
  0x000000010da1ac0b: movabs $0x0,%r10
  0x000000010da1ac15: mov    %r10,0x2a8(%r15)
  0x000000010da1ac1c: movabs $0x0,%r10
  0x000000010da1ac26: mov    %r10,0x2b0(%r15)
  0x000000010da1ac2d: add    $0x40,%rsp
  0x000000010da1ac31: pop    %rbp
  0x000000010da1ac32: jmpq   0x000000010d976a20  ;   {runtime_call}
  0x000000010da1ac37: hlt    
  0x000000010da1ac38: hlt    
  0x000000010da1ac39: hlt    
  0x000000010da1ac3a: hlt    
  0x000000010da1ac3b: hlt    
  0x000000010da1ac3c: hlt    
  0x000000010da1ac3d: hlt    
  0x000000010da1ac3e: hlt    
  0x000000010da1ac3f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010da1ac40: callq  0x000000010d974060  ;   {no_reloc}
  0x000000010da1ac45: mov    %rsp,-0x28(%rsp)
  0x000000010da1ac4a: sub    $0x80,%rsp
  0x000000010da1ac51: mov    %rax,0x78(%rsp)
  0x000000010da1ac56: mov    %rcx,0x70(%rsp)
  0x000000010da1ac5b: mov    %rdx,0x68(%rsp)
  0x000000010da1ac60: mov    %rbx,0x60(%rsp)
  0x000000010da1ac65: mov    %rbp,0x50(%rsp)
  0x000000010da1ac6a: mov    %rsi,0x48(%rsp)
  0x000000010da1ac6f: mov    %rdi,0x40(%rsp)
  0x000000010da1ac74: mov    %r8,0x38(%rsp)
  0x000000010da1ac79: mov    %r9,0x30(%rsp)
  0x000000010da1ac7e: mov    %r10,0x28(%rsp)
  0x000000010da1ac83: mov    %r11,0x20(%rsp)
  0x000000010da1ac88: mov    %r12,0x18(%rsp)
  0x000000010da1ac8d: mov    %r13,0x10(%rsp)
  0x000000010da1ac92: mov    %r14,0x8(%rsp)
  0x000000010da1ac97: mov    %r15,(%rsp)
  0x000000010da1ac9b: movabs $0x1099e391c,%rdi  ;   {external_word}
  0x000000010da1aca5: movabs $0x10da1ac45,%rsi  ;   {internal_word}
  0x000000010da1acaf: mov    %rsp,%rdx
  0x000000010da1acb2: and    $0xfffffffffffffff0,%rsp
  0x000000010da1acb6: callq  0x0000000109807a0e  ;   {runtime_call}
  0x000000010da1acbb: hlt    
[Deopt Handler Code]
  0x000000010da1acbc: movabs $0x10da1acbc,%r10  ;   {section_word}
  0x000000010da1acc6: push   %r10
  0x000000010da1acc8: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da1accd: hlt    
  0x000000010da1acce: hlt    
  0x000000010da1accf: hlt    
<nmethod compile_id='36' compiler='C1' level='2' entry='0x000000010da1ab60' size='864' address='0x000000010da1aa10' relocation_offset='296' insts_offset='336' stub_offset='560' scopes_data_offset='720' scopes_pcs_offset='760' dependencies_offset='856' oops_offset='704' method='com/garden/alanni/asm/Test add (II)I' bytes='17' count='129996' iicount='130001' stamp='0.262'/>
<writer thread='3331'/>
<task_queued compile_id='38' method='com/garden/alanni/asm/Test add (II)I' bytes='17' count='131585' iicount='131585' stamp='0.262' comment='tiered' hot_count='131585'/>
<writer thread='17923'/>
Decoding compiled method 0x000000010da17a90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010bdbf358} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000010da17c00: mov    %eax,-0x14000(%rsp)
  0x000000010da17c07: push   %rbp
  0x000000010da17c08: sub    $0x30,%rsp
  0x000000010da17c0c: movabs $0x10beac560,%rdi  ;   {metadata(method data for {method} {0x000000010bdbf358} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da17c16: mov    0xdc(%rdi),%ebx
  0x000000010da17c1c: add    $0x8,%ebx
  0x000000010da17c1f: mov    %ebx,0xdc(%rdi)
  0x000000010da17c25: movabs $0x10bdbf358,%rdi  ;   {metadata({method} {0x000000010bdbf358} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da17c2f: and    $0x1ff8,%ebx
  0x000000010da17c35: cmp    $0x0,%ebx
  0x000000010da17c38: je     0x000000010da17d4c  ;*aload_0
                                                ; - java.util.HashMap::hash@0 (line 339)

  0x000000010da17c3e: cmp    $0x0,%rsi
  0x000000010da17c42: movabs $0x10beac560,%rdi  ;   {metadata(method data for {method} {0x000000010bdbf358} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da17c4c: movabs $0x108,%rbx
  0x000000010da17c56: jne    0x000000010da17c66
  0x000000010da17c5c: movabs $0x118,%rbx
  0x000000010da17c66: mov    (%rdi,%rbx,1),%rax
  0x000000010da17c6a: lea    0x1(%rax),%rax
  0x000000010da17c6e: mov    %rax,(%rdi,%rbx,1)
  0x000000010da17c72: jne    0x000000010da17c92  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 339)

  0x000000010da17c78: movabs $0x10beac560,%rsi  ;   {metadata(method data for {method} {0x000000010bdbf358} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da17c82: incl   0x128(%rsi)
  0x000000010da17c88: mov    $0x0,%esi
  0x000000010da17c8d: jmpq   0x000000010da17d3d  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 339)

  0x000000010da17c92: cmp    (%rsi),%rax        ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; implicit exception: dispatches to 0x000000010da17d63
  0x000000010da17c95: mov    %rsi,%rdi
  0x000000010da17c98: movabs $0x10beac560,%rbx  ;   {metadata(method data for {method} {0x000000010bdbf358} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000010da17ca2: mov    0x8(%rdi),%edi
  0x000000010da17ca5: shl    $0x3,%rdi
  0x000000010da17ca9: cmp    0x148(%rbx),%rdi
  0x000000010da17cb0: jne    0x000000010da17cbf
  0x000000010da17cb2: addq   $0x1,0x150(%rbx)
  0x000000010da17cba: jmpq   0x000000010da17d25
  0x000000010da17cbf: cmp    0x158(%rbx),%rdi
  0x000000010da17cc6: jne    0x000000010da17cd5
  0x000000010da17cc8: addq   $0x1,0x160(%rbx)
  0x000000010da17cd0: jmpq   0x000000010da17d25
  0x000000010da17cd5: cmpq   $0x0,0x148(%rbx)
  0x000000010da17ce0: jne    0x000000010da17cf9
  0x000000010da17ce2: mov    %rdi,0x148(%rbx)
  0x000000010da17ce9: movq   $0x1,0x150(%rbx)
  0x000000010da17cf4: jmpq   0x000000010da17d25
  0x000000010da17cf9: cmpq   $0x0,0x158(%rbx)
  0x000000010da17d04: jne    0x000000010da17d1d
  0x000000010da17d06: mov    %rdi,0x158(%rbx)
  0x000000010da17d0d: movq   $0x1,0x160(%rbx)
  0x000000010da17d18: jmpq   0x000000010da17d25
  0x000000010da17d1d: addq   $0x1,0x140(%rbx)
  0x000000010da17d25: movabs $0xffffffffffffffff,%rax
  0x000000010da17d2f: callq  0x000000010d94a2e0  ; OopMap{off=308}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ;   {virtual_call}
  0x000000010da17d34: mov    %rax,%rsi
  0x000000010da17d37: shr    $0x10,%esi
  0x000000010da17d3a: xor    %rax,%rsi
  0x000000010da17d3d: mov    %rsi,%rax
  0x000000010da17d40: add    $0x30,%rsp
  0x000000010da17d44: pop    %rbp
  0x000000010da17d45: test   %eax,-0x5731c4b(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da17d4b: retq   
  0x000000010da17d4c: mov    %rdi,0x8(%rsp)
  0x000000010da17d51: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da17d59: callq  0x000000010da074e0  ; OopMap{rsi=Oop off=350}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ;   {runtime_call}
  0x000000010da17d5e: jmpq   0x000000010da17c3e
  0x000000010da17d63: callq  0x000000010d9749c0  ; OopMap{rsi=Oop off=360}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ;   {runtime_call}
  0x000000010da17d68: nop
  0x000000010da17d69: nop
  0x000000010da17d6a: mov    0x2a8(%r15),%rax
  0x000000010da17d71: movabs $0x0,%r10
  0x000000010da17d7b: mov    %r10,0x2a8(%r15)
  0x000000010da17d82: movabs $0x0,%r10
  0x000000010da17d8c: mov    %r10,0x2b0(%r15)
  0x000000010da17d93: add    $0x30,%rsp
  0x000000010da17d97: pop    %rbp
  0x000000010da17d98: jmpq   0x000000010d976a20  ;   {runtime_call}
  0x000000010da17d9d: hlt    
  0x000000010da17d9e: hlt    
  0x000000010da17d9f: hlt    
[Stub Code]
  0x000000010da17da0: nop                       ;   {no_reloc}
  0x000000010da17da1: nop
  0x000000010da17da2: nop
  0x000000010da17da3: nop
  0x000000010da17da4: nop
  0x000000010da17da5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010da17daf: jmpq   0x000000010da17daf  ;   {runtime_call}
[Exception Handler]
  0x000000010da17db4: callq  0x000000010d974060  ;   {runtime_call}
  0x000000010da17db9: mov    %rsp,-0x28(%rsp)
  0x000000010da17dbe: sub    $0x80,%rsp
  0x000000010da17dc5: mov    %rax,0x78(%rsp)
  0x000000010da17dca: mov    %rcx,0x70(%rsp)
  0x000000010da17dcf: mov    %rdx,0x68(%rsp)
  0x000000010da17dd4: mov    %rbx,0x60(%rsp)
  0x000000010da17dd9: mov    %rbp,0x50(%rsp)
  0x000000010da17dde: mov    %rsi,0x48(%rsp)
  0x000000010da17de3: mov    %rdi,0x40(%rsp)
  0x000000010da17de8: mov    %r8,0x38(%rsp)
  0x000000010da17ded: mov    %r9,0x30(%rsp)
  0x000000010da17df2: mov    %r10,0x28(%rsp)
  0x000000010da17df7: mov    %r11,0x20(%rsp)
  0x000000010da17dfc: mov    %r12,0x18(%rsp)
  0x000000010da17e01: mov    %r13,0x10(%rsp)
  0x000000010da17e06: mov    %r14,0x8(%rsp)
  0x000000010da17e0b: mov    %r15,(%rsp)
  0x000000010da17e0f: movabs $0x1099e391c,%rdi  ;   {external_word}
  0x000000010da17e19: movabs $0x10da17db9,%rsi  ;   {internal_word}
  0x000000010da17e23: mov    %rsp,%rdx
  0x000000010da17e26: and    $0xfffffffffffffff0,%rsp
  0x000000010da17e2a: callq  0x0000000109807a0e  ;   {runtime_call}
  0x000000010da17e2f: hlt    
[Deopt Handler Code]
  0x000000010da17e30: movabs $0x10da17e30,%r10  ;   {section_word}
  0x000000010da17e3a: push   %r10
  0x000000010da17e3c: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da17e41: hlt    
  0x000000010da17e42: hlt    
  0x000000010da17e43: hlt    
  0x000000010da17e44: hlt    
  0x000000010da17e45: hlt    
  0x000000010da17e46: hlt    
  0x000000010da17e47: hlt    
<nmethod compile_id='34' compiler='C1' level='3' entry='0x000000010da17c00' size='1176' address='0x000000010da17a90' relocation_offset='296' insts_offset='368' stub_offset='784' scopes_data_offset='960' scopes_pcs_offset='1008' dependencies_offset='1152' nul_chk_table_offset='1160' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='2488' iicount='2488' stamp='0.264'/>
<writer thread='3331'/>
<task_queued compile_id='39' compile_kind='osr' method='com/garden/alanni/asm/Test main ([Ljava/lang/String;)V' bytes='85' count='1' backedge_count='161792' iicount='1' osr_bci='12' stamp='0.264' comment='tiered' hot_count='161792'/>
<writer thread='16131'/>
Decoding compiled method 0x000000010da175d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010c0d7c18} &apos;add&apos; &apos;(II)I&apos; in &apos;com/garden/alanni/asm/Test&apos;
  # this:     rsi:rsi   = &apos;com/garden/alanni/asm/Test&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x20]  (sp of caller)
  0x000000010da17720: mov    0x8(%rsi),%r10d
  0x000000010da17724: shl    $0x3,%r10
  0x000000010da17728: cmp    %r10,%rax
  0x000000010da1772b: jne    0x000000010d949e60  ;   {runtime_call}
  0x000000010da17731: data16 xchg %ax,%ax
  0x000000010da17734: nopl   0x0(%rax,%rax,1)
  0x000000010da1773c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010da17740: sub    $0x18,%rsp
  0x000000010da17747: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - com.garden.alanni.asm.Test::add@-1 (line 10)

  0x000000010da1774c: mov    0x10(%rsi),%r10    ;*putfield sum
                                                ; - com.garden.alanni.asm.Test::add@12 (line 11)

  0x000000010da17750: mov    %edx,%eax
  0x000000010da17752: add    %ecx,%eax          ;*iadd
                                                ; - com.garden.alanni.asm.Test::add@2 (line 10)

  0x000000010da17754: movslq %eax,%r11
  0x000000010da17757: add    %r10,%r11
  0x000000010da1775a: mov    %r11,0x10(%rsi)
  0x000000010da1775e: lock addl $0x0,(%rsp)     ;*putfield sum
                                                ; - com.garden.alanni.asm.Test::add@12 (line 11)

  0x000000010da17763: add    $0x10,%rsp
  0x000000010da17767: pop    %rbp
  0x000000010da17768: test   %eax,-0x573176e(%rip)        # 0x00000001082e6000
                                                ;   {poll_return}
  0x000000010da1776e: retq   
  0x000000010da1776f: hlt    
  0x000000010da17770: hlt    
  0x000000010da17771: hlt    
  0x000000010da17772: hlt    
  0x000000010da17773: hlt    
  0x000000010da17774: hlt    
  0x000000010da17775: hlt    
  0x000000010da17776: hlt    
  0x000000010da17777: hlt    
  0x000000010da17778: hlt    
  0x000000010da17779: hlt    
  0x000000010da1777a: hlt    
  0x000000010da1777b: hlt    
  0x000000010da1777c: hlt    
  0x000000010da1777d: hlt    
  0x000000010da1777e: hlt    
  0x000000010da1777f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010da17780: jmpq   0x000000010d973d60  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010da17785: callq  0x000000010da1778a
  0x000000010da1778a: subq   $0x5,(%rsp)
  0x000000010da1778f: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da17794: hlt    
  0x000000010da17795: hlt    
  0x000000010da17796: hlt    
  0x000000010da17797: hlt    
<nmethod compile_id='38' compiler='C2' level='4' entry='0x000000010da17720' size='600' address='0x000000010da175d0' relocation_offset='296' insts_offset='336' stub_offset='432' scopes_data_offset='472' scopes_pcs_offset='496' dependencies_offset='592' oops_offset='456' method='com/garden/alanni/asm/Test add (II)I' bytes='17' count='189219' iicount='189239' stamp='0.266'/>
<make_not_entrant thread='16131' compile_id='36' compiler='C1' level='2' stamp='0.266'/>
<writer thread='15619'/>
<task_queued compile_id='40' method='java/lang/String indexOf (II)I' bytes='70' count='1745' backedge_count='114173' iicount='1745' stamp='0.266' comment='tiered' hot_count='1745'/>
<writer thread='17923'/>
Decoding compiled method 0x000000010da16750:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010bd4a508} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = int
  #           [sp+0xb0]  (sp of caller)
  0x000000010da168e0: mov    0x8(%rsi),%r10d
  0x000000010da168e4: shl    $0x3,%r10
  0x000000010da168e8: cmp    %rax,%r10
  0x000000010da168eb: jne    0x000000010d949e60  ;   {runtime_call}
  0x000000010da168f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010da168fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010da16900: mov    %eax,-0x14000(%rsp)
  0x000000010da16907: push   %rbp
  0x000000010da16908: sub    $0xa0,%rsp
  0x000000010da1690f: movabs $0x10bef35c0,%rdi  ;   {metadata(method data for {method} {0x000000010bd4a508} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000010da16919: mov    0xdc(%rdi),%ebx
  0x000000010da1691f: add    $0x8,%ebx
  0x000000010da16922: mov    %ebx,0xdc(%rdi)
  0x000000010da16928: movabs $0x10bd4a508,%rdi  ;   {metadata({method} {0x000000010bd4a508} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000010da16932: and    $0x1ff8,%ebx
  0x000000010da16938: cmp    $0x0,%ebx
  0x000000010da1693b: je     0x000000010da16bef  ;*iload_1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0 (line 123)

  0x000000010da16941: mov    0x10(%rsi),%edi
  0x000000010da16944: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x000000010da16948: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x000000010da16c06
  0x000000010da1694b: mov    %rdx,%rax
  0x000000010da1694e: sub    %ebx,%eax
  0x000000010da16950: cmp    $0x0,%eax
  0x000000010da16953: movabs $0x10bef35c0,%rax  ;   {metadata(method data for {method} {0x000000010bd4a508} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000010da1695d: movabs $0x108,%rcx
  0x000000010da16967: jle    0x000000010da16977
  0x000000010da1696d: movabs $0x118,%rcx
  0x000000010da16977: mov    (%rax,%rcx,1),%r8
  0x000000010da1697b: lea    0x1(%r8),%r8
  0x000000010da1697f: mov    %r8,(%rax,%rcx,1)
  0x000000010da16983: jle    0x000000010da16be0  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)

  0x000000010da16989: mov    %ebx,0x78(%rsp)
  0x000000010da1698d: mov    %rdi,0x80(%rsp)
  0x000000010da16995: mov    %rsi,%rax
  0x000000010da16998: movabs $0x10bef35c0,%rcx  ;   {metadata(method data for {method} {0x000000010bd4a508} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000010da169a2: addq   $0x1,0x128(%rcx)
  0x000000010da169aa: mov    %rsi,%rax
  0x000000010da169ad: mov    %rax,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010da169b0: mov    %rax,0x88(%rsp)
  0x000000010da169b8: nop
  0x000000010da169b9: nop
  0x000000010da169ba: nop
  0x000000010da169bb: nop
  0x000000010da169bc: nop
  0x000000010da169bd: nop
  0x000000010da169be: nop
  0x000000010da169bf: callq  0x000000010d94a0a0  ; OopMap{[128]=Oop [136]=Oop off=228}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x000000010da169c4: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010da169c7: movabs $0x10bef35c0,%rbx  ;   {metadata(method data for {method} {0x000000010bd4a508} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000010da169d1: addq   $0x1,0x138(%rbx)
  0x000000010da169d9: movabs $0x10bf000e8,%rbx  ;   {metadata(method data for {method} {0x000000010bdf0588} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000010da169e3: mov    0xdc(%rbx),%edx
  0x000000010da169e9: add    $0x8,%edx
  0x000000010da169ec: mov    %edx,0xdc(%rbx)
  0x000000010da169f2: movabs $0x10bdf0588,%rbx  ;   {metadata({method} {0x000000010bdf0588} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000010da169fc: and    $0x7ffff8,%edx
  0x000000010da16a02: cmp    $0x0,%edx
  0x000000010da16a05: je     0x000000010da16c0b
  0x000000010da16a0b: mov    %r8,%rbx
  0x000000010da16a0e: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010da16a18: movslq %ebx,%rbx
  0x000000010da16a1b: mov    %rbx,%rdi
  0x000000010da16a1e: cmp    $0xffffff,%rbx
  0x000000010da16a25: ja     0x000000010da16c22
  0x000000010da16a2b: movabs $0x17,%rsi
  0x000000010da16a35: lea    (%rsi,%rbx,2),%rsi
  0x000000010da16a39: and    $0xfffffffffffffff8,%rsi
  0x000000010da16a3d: mov    0x60(%r15),%rax
  0x000000010da16a41: lea    (%rax,%rsi,1),%rsi
  0x000000010da16a45: cmp    0x70(%r15),%rsi
  0x000000010da16a49: ja     0x000000010da16c22
  0x000000010da16a4f: mov    %rsi,0x60(%r15)
  0x000000010da16a53: sub    %rax,%rsi
  0x000000010da16a56: movq   $0x1,(%rax)
  0x000000010da16a5d: mov    %rdx,%rcx
  0x000000010da16a60: shr    $0x3,%rcx
  0x000000010da16a64: mov    %ecx,0x8(%rax)
  0x000000010da16a67: mov    %ebx,0xc(%rax)
  0x000000010da16a6a: sub    $0x10,%rsi
  0x000000010da16a6e: je     0x000000010da16a85
  0x000000010da16a74: xor    %rbx,%rbx
  0x000000010da16a77: shr    $0x3,%rsi
  0x000000010da16a7b: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010da16a80: dec    %rsi
  0x000000010da16a83: jne    0x000000010da16a7b  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010da16a85: movabs $0x10bf000e8,%rsi  ;   {metadata(method data for {method} {0x000000010bdf0588} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000010da16a8f: addq   $0x1,0x108(%rsi)
  0x000000010da16a97: movabs $0x10bea22f0,%rsi  ;   {metadata(method data for {method} {0x000000010bdcbe40} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000010da16aa1: mov    0xdc(%rsi),%edx
  0x000000010da16aa7: add    $0x8,%edx
  0x000000010da16aaa: mov    %edx,0xdc(%rsi)
  0x000000010da16ab0: movabs $0x10bdcbe40,%rsi  ;   {metadata({method} {0x000000010bdcbe40} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000010da16aba: and    $0x7ffff8,%edx
  0x000000010da16ac0: cmp    $0x0,%edx
  0x000000010da16ac3: je     0x000000010da16c2c
  0x000000010da16ac9: mov    0x78(%rsp),%ebx
  0x000000010da16acd: cmp    %r8d,%ebx
  0x000000010da16ad0: movabs $0x10bea22f0,%rsi  ;   {metadata(method data for {method} {0x000000010bdcbe40} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000010da16ada: movabs $0x108,%rdx
  0x000000010da16ae4: jg     0x000000010da16af4
  0x000000010da16aea: movabs $0x118,%rdx
  0x000000010da16af4: mov    (%rsi,%rdx,1),%rcx
  0x000000010da16af8: lea    0x1(%rcx),%rcx
  0x000000010da16afc: mov    %rcx,(%rsi,%rdx,1)
  0x000000010da16b00: jg     0x000000010da16b1b  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010da16b06: movabs $0x10bea22f0,%rsi  ;   {metadata(method data for {method} {0x000000010bdcbe40} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000010da16b10: incl   0x128(%rsi)
  0x000000010da16b16: jmpq   0x000000010da16b1e  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010da16b1b: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010da16b1e: mov    0x80(%rsp),%rdi
  0x000000010da16b26: movabs $0x10bf000e8,%rsi  ;   {metadata(method data for {method} {0x000000010bdf0588} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000010da16b30: addq   $0x1,0x118(%rsi)
  0x000000010da16b38: mov    %rdi,%rsi
  0x000000010da16b3b: mov    $0x0,%edx
  0x000000010da16b40: mov    %rax,%rcx
  0x000000010da16b43: mov    $0x0,%r8d
  0x000000010da16b49: mov    %rbx,%r9
  0x000000010da16b4c: mov    %rax,0x90(%rsp)
  0x000000010da16b54: lea    (%rdx,%r9,1),%rdi
  0x000000010da16b58: cmp    0xc(%rsi),%edi
  0x000000010da16b5b: ja     0x000000010da16c43
  0x000000010da16b61: lea    (%r8,%r9,1),%rdi
  0x000000010da16b65: cmp    0xc(%rcx),%edi
  0x000000010da16b68: ja     0x000000010da16c43
  0x000000010da16b6e: test   %r9d,%r9d
  0x000000010da16b71: jl     0x000000010da16c43
  0x000000010da16b77: je     0x000000010da16bb3
  0x000000010da16b7d: movslq %edx,%rdx
  0x000000010da16b80: movslq %r8d,%r8
  0x000000010da16b83: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010da16b88: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010da16b8d: mov    %r9,%rdx
  0x000000010da16b90: test   $0xf,%esp
  0x000000010da16b96: je     0x000000010da16bae
  0x000000010da16b9c: sub    $0x8,%rsp
  0x000000010da16ba0: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000010da16ba5: add    $0x8,%rsp
  0x000000010da16ba9: jmpq   0x000000010da16bb3
  0x000000010da16bae: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010da16bb3: mov    0x90(%rsp),%rax
  0x000000010da16bbb: mov    0x88(%rsp),%rsi
  0x000000010da16bc3: mov    %rax,%r10
  0x000000010da16bc6: shr    $0x3,%r10
  0x000000010da16bca: mov    %r10d,0x10(%rsi)
  0x000000010da16bce: shr    $0x9,%rsi
  0x000000010da16bd2: movabs $0x10717e000,%rdi
  0x000000010da16bdc: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x000000010da16be0: add    $0xa0,%rsp
  0x000000010da16be7: pop    %rbp
  0x000000010da16be8: test   %eax,-0x5730aee(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da16bee: retq   
  0x000000010da16bef: mov    %rdi,0x8(%rsp)
  0x000000010da16bf4: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da16bfc: callq  0x000000010da074e0  ; OopMap{rsi=Oop off=801}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ;   {runtime_call}
  0x000000010da16c01: jmpq   0x000000010da16941
  0x000000010da16c06: callq  0x000000010d9749c0  ; OopMap{rsi=Oop rdi=Oop off=811}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x000000010da16c0b: mov    %rbx,0x8(%rsp)
  0x000000010da16c10: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da16c18: callq  0x000000010da074e0  ; OopMap{[128]=Oop [136]=Oop off=829}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010da16c1d: jmpq   0x000000010da16a0b
  0x000000010da16c22: callq  0x000000010d975360  ; OopMap{[128]=Oop [136]=Oop off=839}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010da16c27: jmpq   0x000000010da16a85
  0x000000010da16c2c: mov    %rsi,0x8(%rsp)
  0x000000010da16c31: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da16c39: callq  0x000000010da074e0  ; OopMap{[128]=Oop [136]=Oop rax=Oop off=862}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010da16c3e: jmpq   0x000000010da16ac9
  0x000000010da16c43: nop
  0x000000010da16c44: nop
  0x000000010da16c45: nop
  0x000000010da16c46: nop
  0x000000010da16c47: callq  0x000000010d94a520  ; OopMap{[136]=Oop [144]=Oop off=876}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {static_call}
  0x000000010da16c4c: jmpq   0x000000010da16bb3
  0x000000010da16c51: nop
  0x000000010da16c52: nop
  0x000000010da16c53: mov    0x2a8(%r15),%rax
  0x000000010da16c5a: movabs $0x0,%r10
  0x000000010da16c64: mov    %r10,0x2a8(%r15)
  0x000000010da16c6b: movabs $0x0,%r10
  0x000000010da16c75: mov    %r10,0x2b0(%r15)
  0x000000010da16c7c: add    $0xa0,%rsp
  0x000000010da16c83: pop    %rbp
  0x000000010da16c84: jmpq   0x000000010d976a20  ;   {runtime_call}
  0x000000010da16c89: hlt    
  0x000000010da16c8a: hlt    
  0x000000010da16c8b: hlt    
  0x000000010da16c8c: hlt    
  0x000000010da16c8d: hlt    
  0x000000010da16c8e: hlt    
  0x000000010da16c8f: hlt    
  0x000000010da16c90: hlt    
  0x000000010da16c91: hlt    
  0x000000010da16c92: hlt    
  0x000000010da16c93: hlt    
  0x000000010da16c94: hlt    
  0x000000010da16c95: hlt    
  0x000000010da16c96: hlt    
  0x000000010da16c97: hlt    
  0x000000010da16c98: hlt    
  0x000000010da16c99: hlt    
  0x000000010da16c9a: hlt    
  0x000000010da16c9b: hlt    
  0x000000010da16c9c: hlt    
  0x000000010da16c9d: hlt    
  0x000000010da16c9e: hlt    
  0x000000010da16c9f: hlt    
[Stub Code]
  0x000000010da16ca0: nop                       ;   {no_reloc}
  0x000000010da16ca1: nop
  0x000000010da16ca2: nop
  0x000000010da16ca3: nop
  0x000000010da16ca4: nop
  0x000000010da16ca5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010da16caf: jmpq   0x000000010da16caf  ;   {runtime_call}
  0x000000010da16cb4: nop
  0x000000010da16cb5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010da16cbf: jmpq   0x000000010da16cbf  ;   {runtime_call}
[Exception Handler]
  0x000000010da16cc4: callq  0x000000010d974060  ;   {runtime_call}
  0x000000010da16cc9: mov    %rsp,-0x28(%rsp)
  0x000000010da16cce: sub    $0x80,%rsp
  0x000000010da16cd5: mov    %rax,0x78(%rsp)
  0x000000010da16cda: mov    %rcx,0x70(%rsp)
  0x000000010da16cdf: mov    %rdx,0x68(%rsp)
  0x000000010da16ce4: mov    %rbx,0x60(%rsp)
  0x000000010da16ce9: mov    %rbp,0x50(%rsp)
  0x000000010da16cee: mov    %rsi,0x48(%rsp)
  0x000000010da16cf3: mov    %rdi,0x40(%rsp)
  0x000000010da16cf8: mov    %r8,0x38(%rsp)
  0x000000010da16cfd: mov    %r9,0x30(%rsp)
  0x000000010da16d02: mov    %r10,0x28(%rsp)
  0x000000010da16d07: mov    %r11,0x20(%rsp)
  0x000000010da16d0c: mov    %r12,0x18(%rsp)
  0x000000010da16d11: mov    %r13,0x10(%rsp)
  0x000000010da16d16: mov    %r14,0x8(%rsp)
  0x000000010da16d1b: mov    %r15,(%rsp)
  0x000000010da16d1f: movabs $0x1099e391c,%rdi  ;   {external_word}
  0x000000010da16d29: movabs $0x10da16cc9,%rsi  ;   {internal_word}
  0x000000010da16d33: mov    %rsp,%rdx
  0x000000010da16d36: and    $0xfffffffffffffff0,%rsp
  0x000000010da16d3a: callq  0x0000000109807a0e  ;   {runtime_call}
  0x000000010da16d3f: hlt    
[Deopt Handler Code]
  0x000000010da16d40: movabs $0x10da16d40,%r10  ;   {section_word}
  0x000000010da16d4a: push   %r10
  0x000000010da16d4c: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da16d51: hlt    
  0x000000010da16d52: hlt    
  0x000000010da16d53: hlt    
  0x000000010da16d54: hlt    
  0x000000010da16d55: hlt    
  0x000000010da16d56: hlt    
  0x000000010da16d57: hlt    
<nmethod compile_id='37' compiler='C1' level='3' entry='0x000000010da168e0' size='2128' address='0x000000010da16750' relocation_offset='296' insts_offset='400' stub_offset='1360' scopes_data_offset='1568' scopes_pcs_offset='1768' dependencies_offset='2104' nul_chk_table_offset='2112' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='2437' iicount='2437' stamp='0.273'/>
<writer thread='18435'/>
Decoding compiled method 0x000000010da1d550:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010c0d7d40} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;com/garden/alanni/asm/Test&apos;
  0x000000010da1d6a0: callq  0x000000010988b424  ;   {runtime_call}
  0x000000010da1d6a5: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010da1d6b0: mov    %eax,-0x14000(%rsp)
  0x000000010da1d6b7: push   %rbp
  0x000000010da1d6b8: sub    $0x20,%rsp
  0x000000010da1d6bc: mov    (%rsi),%ebx
  0x000000010da1d6be: mov    0x10(%rsi),%rbp
  0x000000010da1d6c2: mov    0x8(%rsi),%r13d
  0x000000010da1d6c6: mov    %rsi,%rdi
  0x000000010da1d6c9: movabs $0x1098ea73e,%r10
  0x000000010da1d6d3: callq  *%r10
  0x000000010da1d6d6: mov    0x8(%rbp),%r10d    ; implicit exception: dispatches to 0x000000010da1d756
  0x000000010da1d6da: cmp    $0xf800c105,%r10d  ;   {metadata(&apos;com/garden/alanni/asm/Test&apos;)}
  0x000000010da1d6e1: jne    0x000000010da1d731
  0x000000010da1d6e3: mov    %rbp,%r10
  0x000000010da1d6e6: jmp    0x000000010da1d713
  0x000000010da1d6e8: nopl   0x0(%rax,%rax,1)
  0x000000010da1d6f0: mov    %r10,(%rsp)
  0x000000010da1d6f4: mov    %r13d,%edx
  0x000000010da1d6f7: mov    %ebx,%ebp          ;*iload_3
                                                ; - com.garden.alanni.asm.Test::main@12 (line 20)

  0x000000010da1d6f9: mov    %r10,%rsi
  0x000000010da1d6fc: mov    $0x1,%ecx
  0x000000010da1d701: xchg   %ax,%ax
  0x000000010da1d703: callq  0x000000010d94a0a0  ; OopMap{[0]=Oop off=104}
                                                ;*invokevirtual add
                                                ; - com.garden.alanni.asm.Test::main@21 (line 21)
                                                ;   {optimized virtual_call}
  0x000000010da1d708: mov    %ebp,%ebx
  0x000000010da1d70a: inc    %ebx               ;*iinc
                                                ; - com.garden.alanni.asm.Test::main@25 (line 20)

  0x000000010da1d70c: mov    %eax,%r13d
  0x000000010da1d70f: mov    (%rsp),%r10        ;*iload_3
                                                ; - com.garden.alanni.asm.Test::main@12 (line 20)

  0x000000010da1d713: cmp    $0xf4240,%ebx
  0x000000010da1d719: jl     0x000000010da1d6f0  ;*if_icmpge
                                                ; - com.garden.alanni.asm.Test::main@15 (line 20)

  0x000000010da1d71b: mov    $0x30,%esi
  0x000000010da1d720: mov    %r10,%rbp
  0x000000010da1d723: mov    %r13d,(%rsp)
  0x000000010da1d727: callq  0x000000010d9496a0  ; OopMap{rbp=Oop off=140}
                                                ;*getstatic out
                                                ; - com.garden.alanni.asm.Test::main@31 (line 24)
                                                ;   {runtime_call}
  0x000000010da1d72c: callq  0x000000010988b424  ;   {runtime_call}
  0x000000010da1d731: mov    $0xffffff9d,%esi
  0x000000010da1d736: mov    %r13d,(%rsp)
  0x000000010da1d73a: mov    %ebx,0x4(%rsp)
  0x000000010da1d73e: nop
  0x000000010da1d73f: callq  0x000000010d9496a0  ; OopMap{rbp=Oop off=164}
                                                ;*iload_3
                                                ; - com.garden.alanni.asm.Test::main@12 (line 20)
                                                ;   {runtime_call}
  0x000000010da1d744: callq  0x000000010988b424  ;*invokevirtual add
                                                ; - com.garden.alanni.asm.Test::main@21 (line 21)
                                                ;   {runtime_call}
  0x000000010da1d749: mov    %rax,%rsi
  0x000000010da1d74c: add    $0x20,%rsp
  0x000000010da1d750: pop    %rbp
  0x000000010da1d751: jmpq   0x000000010da13220  ;   {runtime_call}
  0x000000010da1d756: mov    $0xffffff86,%esi
  0x000000010da1d75b: mov    %r13d,%ebp
  0x000000010da1d75e: mov    %ebx,(%rsp)
  0x000000010da1d761: xchg   %ax,%ax
  0x000000010da1d763: callq  0x000000010d9496a0  ; OopMap{off=200}
                                                ;*iload_3
                                                ; - com.garden.alanni.asm.Test::main@12 (line 20)
                                                ;   {runtime_call}
  0x000000010da1d768: callq  0x000000010988b424  ;*iload_3
                                                ; - com.garden.alanni.asm.Test::main@12 (line 20)
                                                ;   {runtime_call}
  0x000000010da1d76d: hlt    
  0x000000010da1d76e: hlt    
  0x000000010da1d76f: hlt    
  0x000000010da1d770: hlt    
  0x000000010da1d771: hlt    
  0x000000010da1d772: hlt    
  0x000000010da1d773: hlt    
  0x000000010da1d774: hlt    
  0x000000010da1d775: hlt    
  0x000000010da1d776: hlt    
  0x000000010da1d777: hlt    
  0x000000010da1d778: hlt    
  0x000000010da1d779: hlt    
  0x000000010da1d77a: hlt    
  0x000000010da1d77b: hlt    
  0x000000010da1d77c: hlt    
  0x000000010da1d77d: hlt    
  0x000000010da1d77e: hlt    
  0x000000010da1d77f: hlt    
[Stub Code]
  0x000000010da1d780: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010da1d78a: jmpq   0x000000010da1d78a  ;   {runtime_call}
[Exception Handler]
  0x000000010da1d78f: jmpq   0x000000010d973d60  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010da1d794: callq  0x000000010da1d799
  0x000000010da1d799: subq   $0x5,(%rsp)
  0x000000010da1d79e: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da1d7a3: hlt    
  0x000000010da1d7a4: hlt    
  0x000000010da1d7a5: hlt    
  0x000000010da1d7a6: hlt    
  0x000000010da1d7a7: hlt    
<nmethod compile_id='39' compile_kind='osr' compiler='C2' level='4' entry='0x000000010da1d6a0' size='968' address='0x000000010da1d550' relocation_offset='296' insts_offset='336' stub_offset='560' scopes_data_offset='632' scopes_pcs_offset='728' dependencies_offset='920' handler_table_offset='928' nul_chk_table_offset='952' oops_offset='600' method='com/garden/alanni/asm/Test main ([Ljava/lang/String;)V' bytes='85' count='1' backedge_count='431549' iicount='1' stamp='0.275'/>
<writer thread='17923'/>
Decoding compiled method 0x000000010da1d110:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010bcda098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010da1d280: mov    0x8(%rsi),%r10d
  0x000000010da1d284: shl    $0x3,%r10
  0x000000010da1d288: cmp    %rax,%r10
  0x000000010da1d28b: jne    0x000000010d949e60  ;   {runtime_call}
  0x000000010da1d291: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010da1d29c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010da1d2a0: mov    %eax,-0x14000(%rsp)
  0x000000010da1d2a7: push   %rbp
  0x000000010da1d2a8: sub    $0x30,%rsp
  0x000000010da1d2ac: movabs $0x10beabc98,%rcx  ;   {metadata(method data for {method} {0x000000010bcda098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x000000010da1d2b6: mov    0xdc(%rcx),%edi
  0x000000010da1d2bc: add    $0x8,%edi
  0x000000010da1d2bf: mov    %edi,0xdc(%rcx)
  0x000000010da1d2c5: movabs $0x10bcda098,%rcx  ;   {metadata({method} {0x000000010bcda098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x000000010da1d2cf: and    $0x1ff8,%edi
  0x000000010da1d2d5: cmp    $0x0,%edi
  0x000000010da1d2d8: je     0x000000010da1d388  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x000000010da1d2de: mov    %rsi,%rcx
  0x000000010da1d2e1: movabs $0x10beabc98,%rdi  ;   {metadata(method data for {method} {0x000000010bcda098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x000000010da1d2eb: mov    0x8(%rcx),%ecx
  0x000000010da1d2ee: shl    $0x3,%rcx
  0x000000010da1d2f2: cmp    0x110(%rdi),%rcx
  0x000000010da1d2f9: jne    0x000000010da1d308
  0x000000010da1d2fb: addq   $0x1,0x118(%rdi)
  0x000000010da1d303: jmpq   0x000000010da1d36e
  0x000000010da1d308: cmp    0x120(%rdi),%rcx
  0x000000010da1d30f: jne    0x000000010da1d31e
  0x000000010da1d311: addq   $0x1,0x128(%rdi)
  0x000000010da1d319: jmpq   0x000000010da1d36e
  0x000000010da1d31e: cmpq   $0x0,0x110(%rdi)
  0x000000010da1d329: jne    0x000000010da1d342
  0x000000010da1d32b: mov    %rcx,0x110(%rdi)
  0x000000010da1d332: movq   $0x1,0x118(%rdi)
  0x000000010da1d33d: jmpq   0x000000010da1d36e
  0x000000010da1d342: cmpq   $0x0,0x120(%rdi)
  0x000000010da1d34d: jne    0x000000010da1d366
  0x000000010da1d34f: mov    %rcx,0x120(%rdi)
  0x000000010da1d356: movq   $0x1,0x128(%rdi)
  0x000000010da1d361: jmpq   0x000000010da1d36e
  0x000000010da1d366: addq   $0x1,0x108(%rdi)
  0x000000010da1d36e: mov    $0x0,%ecx          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x000000010da1d373: nop
  0x000000010da1d374: nop
  0x000000010da1d375: nop
  0x000000010da1d376: nop
  0x000000010da1d377: callq  0x000000010d94a0a0  ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x000000010da1d37c: add    $0x30,%rsp
  0x000000010da1d380: pop    %rbp
  0x000000010da1d381: test   %eax,-0x5737287(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da1d387: retq   
  0x000000010da1d388: mov    %rcx,0x8(%rsp)
  0x000000010da1d38d: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da1d395: callq  0x000000010da074e0  ; OopMap{rsi=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x000000010da1d39a: jmpq   0x000000010da1d2de
  0x000000010da1d39f: nop
  0x000000010da1d3a0: nop
  0x000000010da1d3a1: mov    0x2a8(%r15),%rax
  0x000000010da1d3a8: movabs $0x0,%r10
  0x000000010da1d3b2: mov    %r10,0x2a8(%r15)
  0x000000010da1d3b9: movabs $0x0,%r10
  0x000000010da1d3c3: mov    %r10,0x2b0(%r15)
  0x000000010da1d3ca: add    $0x30,%rsp
  0x000000010da1d3ce: pop    %rbp
  0x000000010da1d3cf: jmpq   0x000000010d976a20  ;   {runtime_call}
  0x000000010da1d3d4: hlt    
  0x000000010da1d3d5: hlt    
  0x000000010da1d3d6: hlt    
  0x000000010da1d3d7: hlt    
  0x000000010da1d3d8: hlt    
  0x000000010da1d3d9: hlt    
  0x000000010da1d3da: hlt    
  0x000000010da1d3db: hlt    
  0x000000010da1d3dc: hlt    
  0x000000010da1d3dd: hlt    
  0x000000010da1d3de: hlt    
  0x000000010da1d3df: hlt    
[Stub Code]
  0x000000010da1d3e0: nop                       ;   {no_reloc}
  0x000000010da1d3e1: nop
  0x000000010da1d3e2: nop
  0x000000010da1d3e3: nop
  0x000000010da1d3e4: nop
  0x000000010da1d3e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010da1d3ef: jmpq   0x000000010da1d3ef  ;   {runtime_call}
[Exception Handler]
  0x000000010da1d3f4: callq  0x000000010d974060  ;   {runtime_call}
  0x000000010da1d3f9: mov    %rsp,-0x28(%rsp)
  0x000000010da1d3fe: sub    $0x80,%rsp
  0x000000010da1d405: mov    %rax,0x78(%rsp)
  0x000000010da1d40a: mov    %rcx,0x70(%rsp)
  0x000000010da1d40f: mov    %rdx,0x68(%rsp)
  0x000000010da1d414: mov    %rbx,0x60(%rsp)
  0x000000010da1d419: mov    %rbp,0x50(%rsp)
  0x000000010da1d41e: mov    %rsi,0x48(%rsp)
  0x000000010da1d423: mov    %rdi,0x40(%rsp)
  0x000000010da1d428: mov    %r8,0x38(%rsp)
  0x000000010da1d42d: mov    %r9,0x30(%rsp)
  0x000000010da1d432: mov    %r10,0x28(%rsp)
  0x000000010da1d437: mov    %r11,0x20(%rsp)
  0x000000010da1d43c: mov    %r12,0x18(%rsp)
  0x000000010da1d441: mov    %r13,0x10(%rsp)
  0x000000010da1d446: mov    %r14,0x8(%rsp)
  0x000000010da1d44b: mov    %r15,(%rsp)
  0x000000010da1d44f: movabs $0x1099e391c,%rdi  ;   {external_word}
  0x000000010da1d459: movabs $0x10da1d3f9,%rsi  ;   {internal_word}
  0x000000010da1d463: mov    %rsp,%rdx
  0x000000010da1d466: and    $0xfffffffffffffff0,%rsp
  0x000000010da1d46a: callq  0x0000000109807a0e  ;   {runtime_call}
  0x000000010da1d46f: hlt    
[Deopt Handler Code]
  0x000000010da1d470: movabs $0x10da1d470,%r10  ;   {section_word}
  0x000000010da1d47a: push   %r10
  0x000000010da1d47c: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da1d481: hlt    
  0x000000010da1d482: hlt    
  0x000000010da1d483: hlt    
  0x000000010da1d484: hlt    
  0x000000010da1d485: hlt    
  0x000000010da1d486: hlt    
  0x000000010da1d487: hlt    
<nmethod compile_id='17' compiler='C1' level='3' entry='0x000000010da1d280' size='1040' address='0x000000010da1d110' relocation_offset='296' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String indexOf (I)I' bytes='7' count='1795' iicount='1795' stamp='0.278'/>
Decoding compiled method 0x000000010da1ca50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000010bd718a8} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010da1cbc0: mov    %eax,-0x14000(%rsp)
  0x000000010da1cbc7: push   %rbp
  0x000000010da1cbc8: sub    $0x30,%rsp
  0x000000010da1cbcc: movabs $0x10beac868,%rdi  ;   {metadata(method data for {method} {0x000000010bd718a8} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000000010da1cbd6: mov    0xdc(%rdi),%ebx
  0x000000010da1cbdc: add    $0x8,%ebx
  0x000000010da1cbdf: mov    %ebx,0xdc(%rdi)
  0x000000010da1cbe5: movabs $0x10bd718a8,%rdi  ;   {metadata({method} {0x000000010bd718a8} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000000010da1cbef: and    $0x1ff8,%ebx
  0x000000010da1cbf5: cmp    $0x0,%ebx
  0x000000010da1cbf8: je     0x000000010da1cce0  ;*iload_0
                                                ; - java.lang.Character::toLowerCase@0 (line 6374)

  0x000000010da1cbfe: movabs $0x10beac868,%rdi  ;   {metadata(method data for {method} {0x000000010bd718a8} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000000010da1cc08: addq   $0x1,0x108(%rdi)
  0x000000010da1cc10: mov    %rsi,%rdi
  0x000000010da1cc13: mov    %rdi,%rsi          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6374)

  0x000000010da1cc16: mov    %edi,0x20(%rsp)
  0x000000010da1cc1a: nop
  0x000000010da1cc1b: nop
  0x000000010da1cc1c: nop
  0x000000010da1cc1d: nop
  0x000000010da1cc1e: nop
  0x000000010da1cc1f: callq  0x000000010d94a520  ; OopMap{off=100}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6374)
                                                ;   {static_call}
  0x000000010da1cc24: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000000010da1ccf7
  0x000000010da1cc27: mov    %rax,%rdx
  0x000000010da1cc2a: movabs $0x10beac868,%rsi  ;   {metadata(method data for {method} {0x000000010bd718a8} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000000010da1cc34: mov    0x8(%rdx),%edx
  0x000000010da1cc37: shl    $0x3,%rdx
  0x000000010da1cc3b: cmp    0x120(%rsi),%rdx
  0x000000010da1cc42: jne    0x000000010da1cc51
  0x000000010da1cc44: addq   $0x1,0x128(%rsi)
  0x000000010da1cc4c: jmpq   0x000000010da1ccb7
  0x000000010da1cc51: cmp    0x130(%rsi),%rdx
  0x000000010da1cc58: jne    0x000000010da1cc67
  0x000000010da1cc5a: addq   $0x1,0x138(%rsi)
  0x000000010da1cc62: jmpq   0x000000010da1ccb7
  0x000000010da1cc67: cmpq   $0x0,0x120(%rsi)
  0x000000010da1cc72: jne    0x000000010da1cc8b
  0x000000010da1cc74: mov    %rdx,0x120(%rsi)
  0x000000010da1cc7b: movq   $0x1,0x128(%rsi)
  0x000000010da1cc86: jmpq   0x000000010da1ccb7
  0x000000010da1cc8b: cmpq   $0x0,0x130(%rsi)
  0x000000010da1cc96: jne    0x000000010da1ccaf
  0x000000010da1cc98: mov    %rdx,0x130(%rsi)
  0x000000010da1cc9f: movq   $0x1,0x138(%rsi)
  0x000000010da1ccaa: jmpq   0x000000010da1ccb7
  0x000000010da1ccaf: addq   $0x1,0x118(%rsi)
  0x000000010da1ccb7: mov    0x20(%rsp),%edx
  0x000000010da1ccbb: mov    %rax,%rsi          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6374)

  0x000000010da1ccbe: nop
  0x000000010da1ccbf: nop
  0x000000010da1ccc0: nop
  0x000000010da1ccc1: nop
  0x000000010da1ccc2: nop
  0x000000010da1ccc3: nop
  0x000000010da1ccc4: nop
  0x000000010da1ccc5: movabs $0xffffffffffffffff,%rax
  0x000000010da1cccf: callq  0x000000010d94a2e0  ; OopMap{off=276}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6374)
                                                ;   {virtual_call}
  0x000000010da1ccd4: add    $0x30,%rsp
  0x000000010da1ccd8: pop    %rbp
  0x000000010da1ccd9: test   %eax,-0x5736bdf(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da1ccdf: retq   
  0x000000010da1cce0: mov    %rdi,0x8(%rsp)
  0x000000010da1cce5: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da1cced: callq  0x000000010da074e0  ; OopMap{off=306}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6374)
                                                ;   {runtime_call}
  0x000000010da1ccf2: jmpq   0x000000010da1cbfe
  0x000000010da1ccf7: callq  0x000000010d9749c0  ; OopMap{rax=Oop off=316}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6374)
                                                ;   {runtime_call}
  0x000000010da1ccfc: nop
  0x000000010da1ccfd: nop
  0x000000010da1ccfe: mov    0x2a8(%r15),%rax
  0x000000010da1cd05: movabs $0x0,%r10
  0x000000010da1cd0f: mov    %r10,0x2a8(%r15)
  0x000000010da1cd16: movabs $0x0,%r10
  0x000000010da1cd20: mov    %r10,0x2b0(%r15)
  0x000000010da1cd27: add    $0x30,%rsp
  0x000000010da1cd2b: pop    %rbp
  0x000000010da1cd2c: jmpq   0x000000010d976a20  ;   {runtime_call}
  0x000000010da1cd31: hlt    
  0x000000010da1cd32: hlt    
  0x000000010da1cd33: hlt    
  0x000000010da1cd34: hlt    
  0x000000010da1cd35: hlt    
  0x000000010da1cd36: hlt    
  0x000000010da1cd37: hlt    
  0x000000010da1cd38: hlt    
  0x000000010da1cd39: hlt    
  0x000000010da1cd3a: hlt    
  0x000000010da1cd3b: hlt    
  0x000000010da1cd3c: hlt    
  0x000000010da1cd3d: hlt    
  0x000000010da1cd3e: hlt    
  0x000000010da1cd3f: hlt    
[Stub Code]
  0x000000010da1cd40: nop                       ;   {no_reloc}
  0x000000010da1cd41: nop
  0x000000010da1cd42: nop
  0x000000010da1cd43: nop
  0x000000010da1cd44: nop
  0x000000010da1cd45: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010da1cd4f: jmpq   0x000000010da1cd4f  ;   {runtime_call}
  0x000000010da1cd54: nop
  0x000000010da1cd55: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010da1cd5f: jmpq   0x000000010da1cd5f  ;   {runtime_call}
[Exception Handler]
  0x000000010da1cd64: callq  0x000000010d974060  ;   {runtime_call}
  0x000000010da1cd69: mov    %rsp,-0x28(%rsp)
  0x000000010da1cd6e: sub    $0x80,%rsp
  0x000000010da1cd75: mov    %rax,0x78(%rsp)
  0x000000010da1cd7a: mov    %rcx,0x70(%rsp)
  0x000000010da1cd7f: mov    %rdx,0x68(%rsp)
  0x000000010da1cd84: mov    %rbx,0x60(%rsp)
  0x000000010da1cd89: mov    %rbp,0x50(%rsp)
  0x000000010da1cd8e: mov    %rsi,0x48(%rsp)
  0x000000010da1cd93: mov    %rdi,0x40(%rsp)
  0x000000010da1cd98: mov    %r8,0x38(%rsp)
  0x000000010da1cd9d: mov    %r9,0x30(%rsp)
  0x000000010da1cda2: mov    %r10,0x28(%rsp)
  0x000000010da1cda7: mov    %r11,0x20(%rsp)
  0x000000010da1cdac: mov    %r12,0x18(%rsp)
  0x000000010da1cdb1: mov    %r13,0x10(%rsp)
  0x000000010da1cdb6: mov    %r14,0x8(%rsp)
  0x000000010da1cdbb: mov    %r15,(%rsp)
  0x000000010da1cdbf: movabs $0x1099e391c,%rdi  ;   {external_word}
  0x000000010da1cdc9: movabs $0x10da1cd69,%rsi  ;   {internal_word}
  0x000000010da1cdd3: mov    %rsp,%rdx
  0x000000010da1cdd6: and    $0xfffffffffffffff0,%rsp
  0x000000010da1cdda: callq  0x0000000109807a0e  ;   {runtime_call}
  0x000000010da1cddf: hlt    
[Deopt Handler Code]
  0x000000010da1cde0: movabs $0x10da1cde0,%r10  ;   {section_word}
  0x000000010da1cdea: push   %r10
  0x000000010da1cdec: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da1cdf1: hlt    
  0x000000010da1cdf2: hlt    
  0x000000010da1cdf3: hlt    
  0x000000010da1cdf4: hlt    
  0x000000010da1cdf5: hlt    
  0x000000010da1cdf6: hlt    
  0x000000010da1cdf7: hlt    
<nmethod compile_id='14' compiler='C1' level='3' entry='0x000000010da1cbc0' size='1160' address='0x000000010da1ca50' relocation_offset='296' insts_offset='368' stub_offset='752' scopes_data_offset='944' scopes_pcs_offset='992' dependencies_offset='1136' nul_chk_table_offset='1144' method='java/lang/Character toLowerCase (I)I' bytes='9' count='2072' iicount='2072' stamp='0.281'/>
<writer thread='16131'/>
Decoding compiled method 0x000000010da1c350:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010bcda180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/l
<writer thread='3331'/>
<uncommon_trap thread='3331' reason='unloaded' action='reinterpret' index='48' compile_id='39' compile_kind='osr' compiler='C2' level='4' unresolved='1' name='java/lang/System' stamp='0.281'>
<jvms bci='31' method='com/garden/alanni/asm/Test main ([Ljava/lang/String;)V' bytes='85' count='1' backedge_count='432128' iicount='1'/>
</uncommon_trap>
<writer thread='16131'/>
ang
<writer thread='3331'/>
<make_not_entrant thread='3331' compile_id='39' compile_kind='osr' compiler='C2' level='4' stamp='0.281'/>
<writer thread='16131'/>
/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010da1c4a0: mov    0x8(%rsi),%r10d
  0x000000010da1c4a4: shl    $0x3,%r10
  0x000000010da1c4a8: cmp    %r10,%rax
  0x000000010da1c4ab: jne    0x000000010d949e60  ;   {runtime_call}
  0x000000010da1c4b1: data16 xchg %ax,%ax
  0x000000010da1c4b4: nopl   0x0(%rax,%rax,1)
  0x000000010da1c4bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010da1c4c0: mov    %eax,-0x14000(%rsp)
  0x000000010da1c4c7: push   %rbp
  0x000000010da1c4c8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)

  0x000000010da1c4cc: mov    %rsi,%r10
  0x000000010da1c4cf: mov    0xc(%rsi),%r8d     ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x000000010da1c4d3: mov    0xc(%r12,%r8,8),%ebp  ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x000000010da1c649
  0x000000010da1c4d8: test   %ecx,%ecx
  0x000000010da1c4da: jl     0x000000010da1c611  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x000000010da1c4e0: mov    $0xffffffff,%eax
  0x000000010da1c4e5: cmp    %ebp,%ecx
  0x000000010da1c4e7: jge    0x000000010da1c5c5  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x000000010da1c4ed: cmp    $0x10000,%edx
  0x000000010da1c4f3: jge    0x000000010da1c62d  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x000000010da1c4f9: cmp    %ebp,%ecx
  0x000000010da1c4fb: jae    0x000000010da1c5f5
  0x000000010da1c501: mov    %ebp,%r10d
  0x000000010da1c504: dec    %r10d
  0x000000010da1c507: cmp    %ebp,%r10d
  0x000000010da1c50a: jae    0x000000010da1c5f5
  0x000000010da1c510: lea    (%r12,%r8,8),%r9
  0x000000010da1c514: mov    %ecx,%r11d
  0x000000010da1c517: inc    %r11d              ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x000000010da1c51a: movzwl 0x10(%r9,%rcx,2),%r8d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010da1c520: cmp    %edx,%r8d
  0x000000010da1c523: je     0x000000010da1c5d3  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010da1c529: inc    %ecx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010da1c52b: cmp    %r11d,%ecx
  0x000000010da1c52e: jl     0x000000010da1c51a  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000010da1c530: mov    %ebp,%r11d
  0x000000010da1c533: add    $0xfffffff9,%r11d
  0x000000010da1c537: mov    $0x80000000,%r8d
  0x000000010da1c53d: cmp    %r11d,%r10d
  0x000000010da1c540: cmovl  %r8d,%r11d
  0x000000010da1c544: cmp    %r11d,%ecx
  0x000000010da1c547: jge    0x000000010da1c5ad
  0x000000010da1c549: nopl   0x0(%rax)          ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x000000010da1c550: movzwl 0x10(%r9,%rcx,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010da1c556: cmp    %edx,%r10d
  0x000000010da1c559: je     0x000000010da1c5d3  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010da1c55b: movslq %ecx,%r10
  0x000000010da1c55e: movzwl 0x12(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010da1c564: cmp    %edx,%ebx
  0x000000010da1c566: je     0x000000010da1c5d1  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010da1c568: movzwl 0x14(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010da1c56e: cmp    %edx,%ebx
  0x000000010da1c570: je     0x000000010da1c5d7  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010da1c572: movzwl 0x16(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010da1c578: cmp    %edx,%ebx
  0x000000010da1c57a: je     0x000000010da1c5dc  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010da1c57c: movzwl 0x18(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010da1c582: cmp    %edx,%ebx
  0x000000010da1c584: je     0x000000010da1c5e1  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010da1c586: movzwl 0x1a(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010da1c58c: cmp    %edx,%ebx
  0x000000010da1c58e: je     0x000000010da1c5e6  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010da1c590: movzwl 0x1c(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010da1c596: cmp    %edx,%ebx
  0x000000010da1c598: je     0x000000010da1c5eb  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010da1c59a: movzwl 0x1e(%r9,%r10,2),%r8d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010da1c5a0: cmp    %edx,%r8d
  0x000000010da1c5a3: je     0x000000010da1c5f0  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010da1c5a5: add    $0x8,%ecx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010da1c5a8: cmp    %r11d,%ecx
  0x000000010da1c5ab: jl     0x000000010da1c550  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000010da1c5ad: cmp    %ebp,%ecx
  0x000000010da1c5af: jge    0x000000010da1c5c5
  0x000000010da1c5b1: data16 xchg %ax,%ax       ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x000000010da1c5b4: movzwl 0x10(%r9,%rcx,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010da1c5ba: cmp    %edx,%r11d
  0x000000010da1c5bd: je     0x000000010da1c5d3  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010da1c5bf: inc    %ecx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010da1c5c1: cmp    %ebp,%ecx
  0x000000010da1c5c3: jl     0x000000010da1c5b4  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x000000010da1c5c5: add    $0x30,%rsp
  0x000000010da1c5c9: pop    %rbp
  0x000000010da1c5ca: test   %eax,-0x57365d0(%rip)        # 0x00000001082e6000
                                                ;   {poll_return}
  0x000000010da1c5d0: retq   
  0x000000010da1c5d1: inc    %ecx
  0x000000010da1c5d3: mov    %ecx,%eax
  0x000000010da1c5d5: jmp    0x000000010da1c5c5
  0x000000010da1c5d7: add    $0x2,%ecx
  0x000000010da1c5da: jmp    0x000000010da1c5d3
  0x000000010da1c5dc: add    $0x3,%ecx
  0x000000010da1c5df: jmp    0x000000010da1c5d3
  0x000000010da1c5e1: add    $0x4,%ecx
  0x000000010da1c5e4: jmp    0x000000010da1c5d3
  0x000000010da1c5e6: add    $0x5,%ecx
  0x000000010da1c5e9: jmp    0x000000010da1c5d3
  0x000000010da1c5eb: add    $0x6,%ecx
  0x000000010da1c5ee: jmp    0x000000010da1c5d3
  0x000000010da1c5f0: add    $0x7,%ecx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010da1c5f3: jmp    0x000000010da1c5d3
  0x000000010da1c5f5: mov    $0xffffff86,%esi
  0x000000010da1c5fa: mov    %edx,(%rsp)
  0x000000010da1c5fd: mov    %ecx,0x4(%rsp)
  0x000000010da1c601: mov    %r8d,0x8(%rsp)
  0x000000010da1c606: nop
  0x000000010da1c607: callq  0x000000010d9496a0  ; OopMap{[8]=NarrowOop off=364}
                                                ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)
                                                ;   {runtime_call}
  0x000000010da1c60c: callq  0x000000010988b424  ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)
                                                ;   {runtime_call}
  0x000000010da1c611: mov    $0xffffff65,%esi
  0x000000010da1c616: mov    %edx,(%rsp)
  0x000000010da1c619: mov    %ecx,0x8(%rsp)
  0x000000010da1c61d: mov    %r10,0x10(%rsp)
  0x000000010da1c622: nop
  0x000000010da1c623: callq  0x000000010d9496a0  ; OopMap{[16]=Oop off=392}
                                                ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)
                                                ;   {runtime_call}
  0x000000010da1c628: callq  0x000000010988b424  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)
                                                ;   {runtime_call}
  0x000000010da1c62d: mov    $0xffffff65,%esi
  0x000000010da1c632: mov    %ecx,0x4(%rsp)
  0x000000010da1c636: mov    %edx,0x8(%rsp)
  0x000000010da1c63a: mov    %r10,0x10(%rsp)
  0x000000010da1c63f: callq  0x000000010d9496a0  ; OopMap{[16]=Oop off=420}
                                                ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)
                                                ;   {runtime_call}
  0x000000010da1c644: callq  0x000000010988b424  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)
                                                ;   {runtime_call}
  0x000000010da1c649: mov    $0xfffffff6,%esi
  0x000000010da1c64e: nop
  0x000000010da1c64f: callq  0x000000010d9496a0  ; OopMap{off=436}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x000000010da1c654: callq  0x000000010988b424  ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x000000010da1c659: hlt    
  0x000000010da1c65a: hlt    
  0x000000010da1c65b: hlt    
  0x000000010da1c65c: hlt    
  0x000000010da1c65d: hlt    
  0x000000010da1c65e: hlt    
  0x000000010da1c65f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010da1c660: jmpq   0x000000010d973d60  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010da1c665: callq  0x000000010da1c66a
  0x000000010da1c66a: subq   $0x5,(%rsp)
  0x000000010da1c66f: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da1c674: hlt    
  0x000000010da1c675: hlt    
  0x000000010da1c676: hlt    
  0x000000010da1c677: hlt    
<nmethod compile_id='40' compiler='C2' level='4' entry='0x000000010da1c4a0' size='1736' address='0x000000010da1c350' relocation_offset='296' insts_offset='336' stub_offset='784' scopes_data_offset='816' scopes_pcs_offset='976' dependencies_offset='1712' nul_chk_table_offset='1720' method='java/lang/String indexOf (II)I' bytes='70' count='1843' backedge_count='114537' iicount='1843' stamp='0.285'/>
<writer thread='17923'/>
Decoding compiled method 0x000000010da219d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010be9bd28} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rsi:rsi   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000010da21b40: mov    0x8(%rsi),%r10d
  0x000000010da21b44: shl    $0x3,%r10
  0x000000010da21b48: cmp    %rax,%r10
  0x000000010da21b4b: jne    0x000000010d949e60  ;   {runtime_call}
  0x000000010da21b51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010da21b5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010da21b60: mov    %eax,-0x14000(%rsp)
  0x000000010da21b67: push   %rbp
  0x000000010da21b68: sub    $0x40,%rsp
  0x000000010da21b6c: movabs $0x10beacc60,%rax  ;   {metadata(method data for {method} {0x000000010be9bd28} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000010da21b76: mov    0xdc(%rax),%edi
  0x000000010da21b7c: add    $0x8,%edi
  0x000000010da21b7f: mov    %edi,0xdc(%rax)
  0x000000010da21b85: movabs $0x10be9bd28,%rax  ;   {metadata({method} {0x000000010be9bd28} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000010da21b8f: and    $0x1ff8,%edi
  0x000000010da21b95: cmp    $0x0,%edi
  0x000000010da21b98: je     0x000000010da21ca6  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@0 (line 133)

  0x000000010da21b9e: movabs $0x10beacc60,%rax  ;   {metadata(method data for {method} {0x000000010be9bd28} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000010da21ba8: addq   $0x1,0x118(%rax)
  0x000000010da21bb0: movabs $0x10beace20,%rax  ;   {metadata(method data for {method} {0x000000010be9b558} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000010da21bba: mov    0xdc(%rax),%esi
  0x000000010da21bc0: add    $0x8,%esi
  0x000000010da21bc3: mov    %esi,0xdc(%rax)
  0x000000010da21bc9: movabs $0x10be9b558,%rax  ;   {metadata({method} {0x000000010be9b558} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000010da21bd3: and    $0x7ffff8,%esi
  0x000000010da21bd9: cmp    $0x0,%esi
  0x000000010da21bdc: je     0x000000010da21cbd
  0x000000010da21be2: mov    %rdx,%rax
  0x000000010da21be5: and    $0xffff,%eax
  0x000000010da21beb: movabs $0x76ab516e8,%rsi  ;   {oop([I)}
  0x000000010da21bf5: movslq %eax,%rdi
  0x000000010da21bf8: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x000000010da21cd4
  0x000000010da21bfb: jae    0x000000010da21cde
  0x000000010da21c01: mov    0x10(%rsi,%rdi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x000000010da21c05: mov    %rax,%rsi
  0x000000010da21c08: and    $0x20000,%esi
  0x000000010da21c0e: cmp    $0x0,%esi
  0x000000010da21c11: movabs $0x10beacc60,%rsi  ;   {metadata(method data for {method} {0x000000010be9bd28} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000010da21c1b: movabs $0x138,%rdi
  0x000000010da21c25: je     0x000000010da21c35
  0x000000010da21c2b: movabs $0x148,%rdi
  0x000000010da21c35: mov    (%rsi,%rdi,1),%rbx
  0x000000010da21c39: lea    0x1(%rbx),%rbx
  0x000000010da21c3d: mov    %rbx,(%rsi,%rdi,1)
  0x000000010da21c41: je     0x000000010da21c97  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)

  0x000000010da21c47: mov    %rax,%rsi
  0x000000010da21c4a: and    $0x7fc0000,%esi
  0x000000010da21c50: cmp    $0x7fc0000,%esi
  0x000000010da21c56: movabs $0x10beacc60,%rsi  ;   {metadata(method data for {method} {0x000000010be9bd28} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000010da21c60: movabs $0x158,%rdi
  0x000000010da21c6a: je     0x000000010da21c7a
  0x000000010da21c70: movabs $0x168,%rdi
  0x000000010da21c7a: mov    (%rsi,%rdi,1),%rbx
  0x000000010da21c7e: lea    0x1(%rbx),%rbx
  0x000000010da21c82: mov    %rbx,(%rsi,%rdi,1)
  0x000000010da21c86: je     0x000000010da21c97  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x000000010da21c8c: shl    $0x5,%eax
  0x000000010da21c8f: sar    $0x17,%eax
  0x000000010da21c92: add    %edx,%eax
  0x000000010da21c94: mov    %rax,%rdx          ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)

  0x000000010da21c97: mov    %rdx,%rax
  0x000000010da21c9a: add    $0x40,%rsp
  0x000000010da21c9e: pop    %rbp
  0x000000010da21c9f: test   %eax,-0x573bba5(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da21ca5: retq   
  0x000000010da21ca6: mov    %rax,0x8(%rsp)
  0x000000010da21cab: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da21cb3: callq  0x000000010da074e0  ; OopMap{rsi=Oop off=376}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@-1 (line 133)
                                                ;   {runtime_call}
  0x000000010da21cb8: jmpq   0x000000010da21b9e
  0x000000010da21cbd: mov    %rax,0x8(%rsp)
  0x000000010da21cc2: movq   $0xffffffffffffffff,(%rsp)
  0x000000010da21cca: callq  0x000000010da074e0  ; OopMap{off=399}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x000000010da21ccf: jmpq   0x000000010da21be2
  0x000000010da21cd4: callq  0x000000010d9749c0  ; OopMap{rsi=Oop off=409}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x000000010da21cd9: callq  0x000000010d9749c0  ; OopMap{rsi=Oop off=414}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x000000010da21cde: mov    %rax,(%rsp)
  0x000000010da21ce2: callq  0x000000010d976580  ; OopMap{rsi=Oop off=423}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x000000010da21ce7: nop
  0x000000010da21ce8: nop
  0x000000010da21ce9: mov    0x2a8(%r15),%rax
  0x000000010da21cf0: movabs $0x0,%r10
  0x000000010da21cfa: mov    %r10,0x2a8(%r15)
  0x000000010da21d01: movabs $0x0,%r10
  0x000000010da21d0b: mov    %r10,0x2b0(%r15)
  0x000000010da21d12: add    $0x40,%rsp
  0x000000010da21d16: pop    %rbp
  0x000000010da21d17: jmpq   0x000000010d976a20  ;   {runtime_call}
  0x000000010da21d1c: hlt    
  0x000000010da21d1d: hlt    
  0x000000010da21d1e: hlt    
  0x000000010da21d1f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010da21d20: callq  0x000000010d974060  ;   {no_reloc}
  0x000000010da21d25: mov    %rsp,-0x28(%rsp)
  0x000000010da21d2a: sub    $0x80,%rsp
  0x000000010da21d31: mov    %rax,0x78(%rsp)
  0x000000010da21d36: mov    %rcx,0x70(%rsp)
  0x000000010da21d3b: mov    %rdx,0x68(%rsp)
  0x000000010da21d40: mov    %rbx,0x60(%rsp)
  0x000000010da21d45: mov    %rbp,0x50(%rsp)
  0x000000010da21d4a: mov    %rsi,0x48(%rsp)
  0x000000010da21d4f: mov    %rdi,0x40(%rsp)
  0x000000010da21d54: mov    %r8,0x38(%rsp)
  0x000000010da21d59: mov    %r9,0x30(%rsp)
  0x000000010da21d5e: mov    %r10,0x28(%rsp)
  0x000000010da21d63: mov    %r11,0x20(%rsp)
  0x000000010da21d68: mov    %r12,0x18(%rsp)
  0x000000010da21d6d: mov    %r13,0x10(%rsp)
  0x000000010da21d72: mov    %r14,0x8(%rsp)
  0x000000010da21d77: mov    %r15,(%rsp)
  0x000000010da21d7b: movabs $0x1099e391c,%rdi  ;   {external_word}
  0x000000010da21d85: movabs $0x10da21d25,%rsi  ;   {internal_word}
  0x000000010da21d8f: mov    %rsp,%rdx
  0x000000010da21d92: and    $0xfffffffffffffff0,%rsp
  0x000000010da21d96: callq  0x0000000109807a0e  ;   {runtime_call}
  0x000000010da21d9b: hlt    
[Deopt Handler Code]
  0x000000010da21d9c: movabs $0x10da21d9c,%r10  ;   {section_word}
  0x000000010da21da6: push   %r10
  0x000000010da21da8: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da21dad: hlt    
  0x000000010da21dae: hlt    
  0x000000010da21daf: hlt    
<nmethod compile_id='15' compiler='C1' level='3' entry='0x000000010da21b40' size='1344' address='0x000000010da219d0' relocation_offset='296' insts_offset='368' stub_offset='848' scopes_data_offset='1016' scopes_pcs_offset='1120' dependencies_offset='1312' nul_chk_table_offset='1320' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='2086' iicount='2086' stamp='0.289'/>
<writer thread='3331'/>
<task_queued compile_id='41' method='java/nio/Buffer limit ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.289' comment='tiered' hot_count='128'/>
<writer thread='17923'/>
Decoding compiled method 0x000000010da21710:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000010bcfd5b8} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/Reference&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000010da21860: mov    0x8(%rsi),%r10d
  0x000000010da21864: shl    $0x3,%r10
  0x000000010da21868: cmp    %rax,%r10
  0x000000010da2186b: jne    0x000000010d949e60  ;   {runtime_call}
  0x000000010da21871: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000010da2187c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000010da21880: mov    %eax,-0x14000(%rsp)
  0x000000010da21887: push   %rbp
  0x000000010da21888: sub    $0x30,%rsp
  0x000000010da2188c: mov    0xc(%rsi),%eax
  0x000000010da2188f: shl    $0x3,%rax          ;*aload_0
                                                ; - java.lang.ref.Reference::get@0 (line 254)

  0x000000010da21893: add    $0x30,%rsp
  0x000000010da21897: pop    %rbp
  0x000000010da21898: test   %eax,-0x573b79e(%rip)        # 0x00000001082e6100
                                                ;   {poll_return}
  0x000000010da2189e: retq   
  0x000000010da2189f: nop
  0x000000010da218a0: nop
  0x000000010da218a1: mov    0x2a8(%r15),%rax
  0x000000010da218a8: movabs $0x0,%r10
  0x000000010da218b2: mov    %r10,0x2a8(%r15)
  0x000000010da218b9: movabs $0x0,%r10
  0x000000010da218c3: mov    %r10,0x2b0(%r15)
  0x000000010da218ca: add    $0x30,%rsp
  0x000000010da218ce: pop    %rbp
  0x000000010da218cf: jmpq   0x000000010d976a20  ;   {runtime_call}
  0x000000010da218d4: hlt    
  0x000000010da218d5: hlt    
  0x000000010da218d6: hlt    
  0x000000010da218d7: hlt    
  0x000000010da218d8: hlt    
  0x000000010da218d9: hlt    
  0x000000010da218da: hlt    
  0x000000010da218db: hlt    
  0x000000010da218dc: hlt    
  0x000000010da218dd: hlt    
  0x000000010da218de: hlt    
  0x000000010da218df: hlt    
[Exception Handler]
[Stub Code]
  0x000000010da218e0: callq  0x000000010d974060  ;   {no_reloc}
  0x000000010da218e5: mov    %rsp,-0x28(%rsp)
  0x000000010da218ea: sub    $0x80,%rsp
  0x000000010da218f1: mov    %rax,0x78(%rsp)
  0x000000010da218f6: mov    %rcx,0x70(%rsp)
  0x000000010da218fb: mov    %rdx,0x68(%rsp)
  0x000000010da21900: mov    %rbx,0x60(%rsp)
  0x000000010da21905: mov    %rbp,0x50(%rsp)
  0x000000010da2190a: mov    %rsi,0x48(%rsp)
  0x000000010da2190f: mov    %rdi,0x40(%rsp)
  0x000000010da21914: mov    %r8,0x38(%rsp)
  0x000000010da21919: mov    %r9,0x30(%rsp)
  0x000000010da2191e: mov    %r10,0x28(%rsp)
  0x000000010da21923: mov    %r11,0x20(%rsp)
  0x000000010da21928: mov    %r12,0x18(%rsp)
  0x000000010da2192d: mov    %r13,0x10(%rsp)
  0x000000010da21932: mov    %r14,0x8(%rsp)
  0x000000010da21937: mov    %r15,(%rsp)
  0x000000010da2193b: movabs $0x1099e391c,%rdi  ;   {external_word}
  0x000000010da21945: movabs $0x10da218e5,%rsi  ;   {internal_word}
  0x000000010da2194f: mov    %rsp,%rdx
  0x000000010da21952: and    $0xfffffffffffffff0,%rsp
  0x000000010da21956: callq  0x0000000109807a0e  ;   {runtime_call}
  0x000000010da2195b: hlt    
[Deopt Handler Code]
  0x000000010da2195c: movabs $0x10da2195c,%r10  ;   {section_word}
  0x000000010da21966: push   %r10
  0x000000010da21968: jmpq   0x000000010d94b500  ;   {runtime_call}
  0x000000010da2196d: hlt    
  0x000000010da2196e: hlt    
  0x000000010da2196f: hlt    
<nmethod compile_id='21' compiler='C1' level='1' entry='0x000000010da21860' size='680' address='0x000000010da21710' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='624' dependencies_offset='672' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='1683' iicount='1683' stamp='0.290'/>
<writer thread='15619'/>
<task_queued compile_id='42' method='java/lang/Character toLowerCase (C)C' bytes='6' count='2048' iicount='2048' level='3' stamp='0.290' comment='tiered' hot_count='2048'/>
<task_queued compile_id='43' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='1152' iicount='1152' level='3' stamp='0.290' comment='tiered' hot_count='1152'/>
<task_queued compile_id='44' method='java/lang/String getChars (II[CI)V' bytes='62' count='1792' iicount='1792' level='3' stamp='0.290' comment='tiered' hot_count='1792'/>
<task_queued compile_id='45' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='1792' iicount='1792' level='3' stamp='0.290' comment='tiered' hot_count='1792'/>
<writer thread='12803'/>
<destroy_vm stamp='0.290'/>
<tty_done stamp='0.290'/>
</tty>
<compilation_log thread='17923'>
<start_compile_thread name='C1 CompilerThread3' thread='17923' process='25884' stamp='0.171'/>
<task compile_id='5' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='1037' iicount='1037' level='3' stamp='0.171'>
<phase name='buildIR' stamp='0.172'>
<klass id='757' name='java/lang/SecurityManager' flags='1'/>
<klass id='751' name='java/lang/System' flags='17'/>
<method id='849' holder='751' name='getSecurityManager' return='757' flags='9' bytes='4' iicount='1037'/>
<parse method='849'  stamp='0.172'>
<parse_done stamp='0.172'/>
</parse>
<phase name='optimize_blocks' stamp='0.172'>
<phase_done name='optimize_blocks' stamp='0.172'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.172'>
<phase_done name='rangeCheckElimination' stamp='0.172'/>
</phase>
<phase name='optimize_null_checks' stamp='0.172'>
<phase_done name='optimize_null_checks' stamp='0.172'/>
</phase>
<phase_done name='buildIR' stamp='0.172'/>
</phase>
<phase name='emit_lir' stamp='0.172'>
<phase name='lirGeneration' stamp='0.172'>
<phase_done name='lirGeneration' stamp='0.172'/>
</phase>
<phase name='linearScan' stamp='0.172'>
<phase_done name='linearScan' stamp='0.172'/>
</phase>
<phase_done name='emit_lir' stamp='0.172'/>
</phase>
<phase name='codeemit' stamp='0.172'>
<phase_done name='codeemit' stamp='0.172'/>
</phase>
<phase name='codeinstall' stamp='0.172'>
<phase_done name='codeinstall' stamp='0.180'/>
</phase>
<code_cache total_blobs='231' nmethods='2' adapters='151' free_code_cache='250551296'/>
<task_done success='1' nmsize='336' count='1057' stamp='0.180'/>
</task>
<task compile_id='7' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='768' iicount='768' level='3' stamp='0.180'>
<phase name='buildIR' stamp='0.180'>
<type id='740' name='void'/>
<klass id='745' name='java/lang/Object' flags='1'/>
<klass id='778' name='java/lang/ref/ReferenceQueue' flags='1'/>
<klass id='771' name='java/lang/ref/Reference' flags='1025'/>
<method id='849' holder='771' name='&lt;init&gt;' return='740' arguments='745 778' flags='0' bytes='25' iicount='768'/>
<parse method='849'  stamp='0.180'>
<bc code='183' bci='1'/>
<method id='851' holder='745' name='&lt;init&gt;' return='740' flags='1' bytes='1' iicount='10601'/>
<call method='851' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='771'/>
<parse_done stamp='0.180'/>
</parse>
<parse_done stamp='0.180'/>
</parse>
<phase name='optimize_blocks' stamp='0.180'>
<phase_done name='optimize_blocks' stamp='0.180'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.180'>
<phase_done name='rangeCheckElimination' stamp='0.180'/>
</phase>
<phase name='optimize_null_checks' stamp='0.180'>
<phase_done name='optimize_null_checks' stamp='0.180'/>
</phase>
<phase_done name='buildIR' stamp='0.180'/>
</phase>
<phase name='emit_lir' stamp='0.180'>
<phase name='lirGeneration' stamp='0.180'>
<phase_done name='lirGeneration' stamp='0.180'/>
</phase>
<phase name='linearScan' stamp='0.180'>
<phase_done name='linearScan' stamp='0.180'/>
</phase>
<phase_done name='emit_lir' stamp='0.180'/>
</phase>
<phase name='codeemit' stamp='0.180'>
<phase_done name='codeemit' stamp='0.180'/>
</phase>
<phase name='codeinstall' stamp='0.180'>
<dependency type='no_finalizable_subclasses' ctxk='771'/>
<phase_done name='codeinstall' stamp='0.182'/>
</phase>
<code_cache total_blobs='232' nmethods='3' adapters='151' free_code_cache='250560704'/>
<task_done success='1' nmsize='592' count='768' inlined_bytes='1' stamp='0.182'/>
</task>
<task compile_id='2' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='2190' iicount='2190' level='3' stamp='0.182'>
<phase name='buildIR' stamp='0.182'>
<klass id='838' name='[C' flags='1041'/>
<type id='738' name='int'/>
<klass id='849' name='java/util/Arrays' flags='1'/>
<method id='850' holder='849' name='copyOfRange' return='838' arguments='838 738 738' flags='9' bytes='63' iicount='2190'/>
<parse method='850'  stamp='0.182'>
<bc code='183' bci='16'/>
<type id='740' name='void'/>
<klass id='812' name='java/lang/StringBuilder' flags='17'/>
<method id='853' holder='812' name='&lt;init&gt;' return='740' flags='1' bytes='7' iicount='479'/>
<call method='853' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='183' bci='3'/>
<klass id='810' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='855' holder='810' name='&lt;init&gt;' return='740' arguments='738' flags='0' bytes='12' iicount='635'/>
<call method='855' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='855'>
<bc code='183' bci='1'/>
<klass id='745' name='java/lang/Object' flags='1'/>
<method id='857' holder='745' name='&lt;init&gt;' return='740' flags='1' bytes='1' iicount='10628'/>
<call method='857' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<parse_done stamp='0.183'/>
</parse>
<parse_done stamp='0.183'/>
</parse>
<parse_done stamp='0.183'/>
</parse>
<bc code='182' bci='20'/>
<method id='859' holder='812' name='append' return='812' arguments='738' flags='1' bytes='8' iicount='1'/>
<call method='859' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='859'>
<bc code='183' bci='2'/>
<method id='861' holder='810' name='append' return='810' arguments='738' flags='1' bytes='62' iicount='1'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.183'/>
</parse>
<bc code='182' bci='25'/>
<klass id='746' name='java/lang/String' flags='17'/>
<method id='864' holder='812' name='append' return='812' arguments='746' flags='1' bytes='8' iicount='1257'/>
<call method='864' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='864'>
<bc code='183' bci='2'/>
<method id='866' holder='810' name='append' return='810' arguments='746' flags='1' bytes='50' iicount='1706'/>
<call method='866' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.183'/>
</parse>
<bc code='182' bci='29'/>
<call method='859' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='859'>
<bc code='183' bci='2'/>
<call method='861' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.183'/>
</parse>
<bc code='182' bci='32'/>
<method id='868' holder='812' name='toString' return='746' flags='1' bytes='17' iicount='488'/>
<call method='868' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='868'>
<bc code='183' bci='13'/>
<method id='870' holder='746' name='&lt;init&gt;' return='740' arguments='838 738 738' flags='1' bytes='82' iicount='2068'/>
<call method='870' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.183'/>
</parse>
<bc code='183' bci='35'/>
<klass id='852' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='872' holder='852' name='&lt;init&gt;' return='740' arguments='746' flags='1' bytes='6' iicount='1'/>
<call method='872' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='54'/>
<klass id='874' name='java/lang/Math' flags='17'/>
<method id='875' holder='874' name='min' return='738' arguments='738 738' flags='9' bytes='11' iicount='7250'/>
<call method='875' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='875'>
<parse_done stamp='0.183'/>
</parse>
<bc code='184' bci='57'/>
<klass id='751' name='java/lang/System' flags='17'/>
<method id='877' holder='751' name='arraycopy' return='740' arguments='745 738 745 738 738' flags='265' bytes='0' compile_id='9' compile_kind='c2n' level='0' iicount='7424'/>
<call method='877' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.183'/>
</parse>
<phase name='optimize_blocks' stamp='0.183'>
<phase_done name='optimize_blocks' stamp='0.183'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.183'>
<phase_done name='rangeCheckElimination' stamp='0.183'/>
</phase>
<phase name='optimize_null_checks' stamp='0.183'>
<phase_done name='optimize_null_checks' stamp='0.183'/>
</phase>
<phase_done name='buildIR' stamp='0.183'/>
</phase>
<phase name='emit_lir' stamp='0.183'>
<phase name='lirGeneration' stamp='0.183'>
<phase_done name='lirGeneration' stamp='0.183'/>
</phase>
<phase name='linearScan' stamp='0.183'>
<phase_done name='linearScan' stamp='0.183'/>
</phase>
<phase_done name='emit_lir' stamp='0.183'/>
</phase>
<phase name='codeemit' stamp='0.183'>
<phase_done name='codeemit' stamp='0.183'/>
</phase>
<phase name='codeinstall' stamp='0.183'>
<phase_done name='codeinstall' stamp='0.193'/>
</phase>
<code_cache total_blobs='241' nmethods='4' adapters='152' free_code_cache='250553472'/>
<task_done success='1' nmsize='2872' count='2205' inlined_bytes='72' stamp='0.193'/>
</task>
<task compile_id='20' method='java/lang/String length ()I' bytes='6' count='5917' iicount='5917' level='2' stamp='0.193'>
<phase name='buildIR' stamp='0.193'>
<type id='738' name='int'/>
<klass id='746' name='java/lang/String' flags='17'/>
<method id='849' holder='746' name='length' return='738' flags='1' bytes='6' iicount='5917'/>
<parse method='849'  stamp='0.193'>
<parse_done stamp='0.193'/>
</parse>
<phase name='optimize_blocks' stamp='0.193'>
<phase_done name='optimize_blocks' stamp='0.193'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.193'>
<phase_done name='rangeCheckElimination' stamp='0.193'/>
</phase>
<phase name='optimize_null_checks' stamp='0.193'>
<phase_done name='optimize_null_checks' stamp='0.193'/>
</phase>
<phase_done name='buildIR' stamp='0.193'/>
</phase>
<phase name='emit_lir' stamp='0.193'>
<phase name='lirGeneration' stamp='0.193'>
<phase_done name='lirGeneration' stamp='0.193'/>
</phase>
<phase name='linearScan' stamp='0.193'>
<phase_done name='linearScan' stamp='0.193'/>
</phase>
<phase_done name='emit_lir' stamp='0.193'/>
</phase>
<phase name='codeemit' stamp='0.193'>
<phase_done name='codeemit' stamp='0.193'/>
</phase>
<phase name='codeinstall' stamp='0.193'>
<phase_done name='codeinstall' stamp='0.194'/>
</phase>
<code_cache total_blobs='242' nmethods='5' adapters='152' free_code_cache='250552576'/>
<task_done success='1' nmsize='336' count='5927' stamp='0.194'/>
</task>
<task compile_id='18' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='6787' iicount='6787' level='2' stamp='0.194'>
<phase name='buildIR' stamp='0.194'>
<klass id='849' name='java/lang/CharacterData' flags='1024'/>
<type id='738' name='int'/>
<method id='850' holder='849' name='of' return='849' arguments='738' flags='24' bytes='120' iicount='6787'/>
<parse method='850'  stamp='0.194'>
<parse_done stamp='0.194'/>
</parse>
<phase name='optimize_blocks' stamp='0.194'>
<phase_done name='optimize_blocks' stamp='0.194'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.194'>
<phase_done name='rangeCheckElimination' stamp='0.194'/>
</phase>
<phase name='optimize_null_checks' stamp='0.194'>
<phase_done name='optimize_null_checks' stamp='0.194'/>
</phase>
<phase_done name='buildIR' stamp='0.194'/>
</phase>
<phase name='emit_lir' stamp='0.194'>
<phase name='lirGeneration' stamp='0.194'>
<phase_done name='lirGeneration' stamp='0.194'/>
</phase>
<phase name='linearScan' stamp='0.194'>
<phase_done name='linearScan' stamp='0.194'/>
</phase>
<phase_done name='emit_lir' stamp='0.194'/>
</phase>
<phase name='codeemit' stamp='0.194'>
<phase_done name='codeemit' stamp='0.194'/>
</phase>
<phase name='codeinstall' stamp='0.194'>
<phase_done name='codeinstall' stamp='0.202'/>
</phase>
<code_cache total_blobs='247' nmethods='6' adapters='154' free_code_cache='250543488'/>
<task_done success='1' nmsize='1392' count='6787' stamp='0.202'/>
</task>
<task compile_id='19' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='6787' iicount='6787' level='2' stamp='0.202'>
<phase name='buildIR' stamp='0.202'>
<type id='738' name='int'/>
<klass id='849' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='850' holder='849' name='getProperties' return='738' arguments='738' flags='0' bytes='11' iicount='6787'/>
<parse method='850'  stamp='0.202'>
<parse_done stamp='0.202'/>
</parse>
<phase name='optimize_blocks' stamp='0.202'>
<phase_done name='optimize_blocks' stamp='0.202'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.202'>
<phase_done name='rangeCheckElimination' stamp='0.202'/>
</phase>
<phase name='optimize_null_checks' stamp='0.202'>
<phase_done name='optimize_null_checks' stamp='0.202'/>
</phase>
<phase_done name='buildIR' stamp='0.202'/>
</phase>
<phase name='emit_lir' stamp='0.202'>
<phase name='lirGeneration' stamp='0.202'>
<phase_done name='lirGeneration' stamp='0.202'/>
</phase>
<phase name='linearScan' stamp='0.202'>
<phase_done name='linearScan' stamp='0.202'/>
</phase>
<phase_done name='emit_lir' stamp='0.202'/>
</phase>
<phase name='codeemit' stamp='0.202'>
<phase_done name='codeemit' stamp='0.202'/>
</phase>
<phase name='codeinstall' stamp='0.202'>
<phase_done name='codeinstall' stamp='0.205'/>
</phase>
<code_cache total_blobs='253' nmethods='8' adapters='156' free_code_cache='250522176'/>
<task_done success='1' nmsize='368' count='6787' stamp='0.205'/>
</task>
<task compile_id='24' method='java/io/UnixFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='75' count='590' backedge_count='53053' iicount='590' level='3' stamp='0.212'>
<phase name='buildIR' stamp='0.213'>
<klass id='746' name='java/lang/String' flags='17'/>
<klass id='849' name='java/io/UnixFileSystem' flags='0'/>
<method id='850' holder='849' name='normalize' return='746' arguments='746' flags='1' bytes='75' iicount='590'/>
<parse method='850'  stamp='0.213'>
<bc code='182' bci='1'/>
<type id='738' name='int'/>
<method id='852' holder='746' name='length' return='738' flags='1' bytes='6' compile_id='20' compiler='C1' level='2' iicount='5938'/>
<call method='852' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='852'>
<parse_done stamp='0.213'/>
</parse>
<bc code='182' bci='19'/>
<type id='733' name='char'/>
<method id='854' holder='746' name='charAt' return='733' arguments='738' flags='1' bytes='29' compile_id='10' compiler='C2' level='4' iicount='60390'/>
<call method='854' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='854'>
<bc code='183' bci='18'/>
<type id='740' name='void'/>
<klass id='856' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='857' holder='856' name='&lt;init&gt;' return='740' arguments='738' unloaded='1'/>
<call method='857' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.213'/>
</parse>
<bc code='183' bci='44'/>
<method id='858' holder='849' name='normalize' return='746' arguments='746 738 738' flags='2' bytes='132' iicount='1'/>
<call method='858' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='849'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='69'/>
<call method='858' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='849'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.213'/>
</parse>
<phase name='optimize_blocks' stamp='0.213'>
<phase_done name='optimize_blocks' stamp='0.213'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.213'>
<phase_done name='rangeCheckElimination' stamp='0.213'/>
</phase>
<phase name='optimize_null_checks' stamp='0.213'>
<phase_done name='optimize_null_checks' stamp='0.213'/>
</phase>
<phase_done name='buildIR' stamp='0.213'/>
</phase>
<phase name='emit_lir' stamp='0.213'>
<phase name='lirGeneration' stamp='0.213'>
<phase_done name='lirGeneration' stamp='0.213'/>
</phase>
<phase name='linearScan' stamp='0.213'>
<phase_done name='linearScan' stamp='0.213'/>
</phase>
<phase_done name='emit_lir' stamp='0.213'/>
</phase>
<phase name='codeemit' stamp='0.213'>
<phase_done name='codeemit' stamp='0.214'/>
</phase>
<phase name='codeinstall' stamp='0.214'>
<dependency type='leaf_type' ctxk='849'/>
<phase_done name='codeinstall' stamp='0.221'/>
</phase>
<code_cache total_blobs='255' nmethods='13' adapters='156' free_code_cache='250532288'/>
<task_done success='1' nmsize='1640' count='593' backedge_count='53185' inlined_bytes='35' stamp='0.221'/>
</task>
<task compile_id='26' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='2532' backedge_count='9318' iicount='2532' level='3' stamp='0.221'>
<phase name='buildIR' stamp='0.221'>
<type id='732' name='boolean'/>
<klass id='746' name='java/lang/String' flags='17'/>
<type id='738' name='int'/>
<method id='849' holder='746' name='startsWith' return='732' arguments='746 738' flags='1' bytes='72' iicount='2532'/>
<parse method='849'  stamp='0.221'>
<parse_done stamp='0.221'/>
</parse>
<phase name='optimize_blocks' stamp='0.221'>
<phase_done name='optimize_blocks' stamp='0.221'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.221'>
<phase_done name='rangeCheckElimination' stamp='0.221'/>
</phase>
<phase name='optimize_null_checks' stamp='0.221'>
<phase_done name='optimize_null_checks' stamp='0.221'/>
</phase>
<phase_done name='buildIR' stamp='0.221'/>
</phase>
<phase name='emit_lir' stamp='0.221'>
<phase name='lirGeneration' stamp='0.221'>
<phase_done name='lirGeneration' stamp='0.221'/>
</phase>
<phase name='linearScan' stamp='0.221'>
<phase_done name='linearScan' stamp='0.221'/>
</phase>
<phase_done name='emit_lir' stamp='0.221'/>
</phase>
<phase name='codeemit' stamp='0.221'>
<phase_done name='codeemit' stamp='0.221'/>
</phase>
<phase name='codeinstall' stamp='0.221'>
<phase_done name='codeinstall' stamp='0.231'/>
</phase>
<code_cache total_blobs='259' nmethods='15' adapters='157' free_code_cache='250520640'/>
<task_done success='1' nmsize='816' count='2533' backedge_count='9318' stamp='0.231'/>
</task>
<task compile_id='28' method='java/util/ArrayList size ()I' bytes='5' count='791' iicount='791' level='1' stamp='0.231'>
<phase name='buildIR' stamp='0.231'>
<type id='738' name='int'/>
<klass id='849' name='java/util/ArrayList' flags='1'/>
<method id='850' holder='849' name='size' return='738' flags='1' bytes='5' iicount='791'/>
<parse method='850'  stamp='0.231'>
<parse_done stamp='0.231'/>
</parse>
<phase name='optimize_blocks' stamp='0.231'>
<phase_done name='optimize_blocks' stamp='0.231'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.231'>
<phase_done name='rangeCheckElimination' stamp='0.231'/>
</phase>
<phase name='optimize_null_checks' stamp='0.231'>
<phase_done name='optimize_null_checks' stamp='0.231'/>
</phase>
<phase_done name='buildIR' stamp='0.231'/>
</phase>
<phase name='emit_lir' stamp='0.231'>
<phase name='lirGeneration' stamp='0.231'>
<phase_done name='lirGeneration' stamp='0.231'/>
</phase>
<phase name='linearScan' stamp='0.231'>
<phase_done name='linearScan' stamp='0.231'/>
</phase>
<phase_done name='emit_lir' stamp='0.231'/>
</phase>
<phase name='codeemit' stamp='0.231'>
<phase_done name='codeemit' stamp='0.231'/>
</phase>
<phase name='codeinstall' stamp='0.231'>
<phase_done name='codeinstall' stamp='0.236'/>
</phase>
<code_cache total_blobs='262' nmethods='17' adapters='158' free_code_cache='250517568'/>
<task_done success='1' nmsize='272' count='791' stamp='0.236'/>
</task>
<task compile_id='1' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='2102' iicount='2102' level='3' stamp='0.236'>
<phase name='buildIR' stamp='0.236'>
<type id='740' name='void'/>
<klass id='838' name='[C' flags='1041'/>
<type id='738' name='int'/>
<klass id='746' name='java/lang/String' flags='17'/>
<method id='849' holder='746' name='&lt;init&gt;' return='740' arguments='838 738 738' flags='1' bytes='82' iicount='2102'/>
<parse method='849'  stamp='0.236'>
<bc code='183' bci='1'/>
<klass id='745' name='java/lang/Object' flags='1'/>
<method id='851' holder='745' name='&lt;init&gt;' return='740' flags='1' bytes='1' compile_id='12' compiler='C2' level='4' iicount='10721'/>
<call method='851' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<parse_done stamp='0.236'/>
</parse>
<bc code='183' bci='13'/>
<klass id='853' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='854' holder='853' name='&lt;init&gt;' return='740' arguments='738' unloaded='1'/>
<call method='854' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='30'/>
<call method='854' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='65'/>
<call method='854' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='75'/>
<klass id='856' name='java/util/Arrays' flags='1'/>
<method id='857' holder='856' name='copyOfRange' return='838' arguments='838 738 738' flags='9' bytes='63' compile_id='2' compiler='C1' level='3' iicount='2232'/>
<call method='857' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.240'/>
</parse>
<phase name='optimize_blocks' stamp='0.240'>
<phase_done name='optimize_blocks' stamp='0.240'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.240'>
<phase_done name='rangeCheckElimination' stamp='0.240'/>
</phase>
<phase name='optimize_null_checks' stamp='0.240'>
<phase_done name='optimize_null_checks' stamp='0.240'/>
</phase>
<phase_done name='buildIR' stamp='0.240'/>
</phase>
<phase name='emit_lir' stamp='0.240'>
<phase name='lirGeneration' stamp='0.240'>
<phase_done name='lirGeneration' stamp='0.240'/>
</phase>
<phase name='linearScan' stamp='0.240'>
<phase_done name='linearScan' stamp='0.240'/>
</phase>
<phase_done name='emit_lir' stamp='0.240'/>
</phase>
<phase name='codeemit' stamp='0.240'>
<phase_done name='codeemit' stamp='0.240'/>
</phase>
<phase name='codeinstall' stamp='0.240'>
<phase_done name='codeinstall' stamp='0.247'/>
</phase>
<code_cache total_blobs='262' nmethods='19' adapters='158' free_code_cache='250525312'/>
<task_done success='1' nmsize='1272' count='2104' inlined_bytes='1' stamp='0.247'/>
</task>
<task compile_id='33' method='java/util/HashMap getNode (ILjava/lang/Object;)Ljava/util/HashMap$Node;' bytes='148' count='1765' backedge_count='52' iicount='1765' level='3' stamp='0.247'>
<phase name='buildIR' stamp='0.247'>
<klass id='850' name='java/util/HashMap$Node' flags='8'/>
<type id='738' name='int'/>
<klass id='745' name='java/lang/Object' flags='1'/>
<klass id='849' name='java/util/HashMap' flags='1'/>
<method id='851' holder='849' name='getNode' return='850' arguments='738 745' flags='16' bytes='148' iicount='1765'/>
<parse method='851'  stamp='0.247'>
<bc code='182' bci='59'/>
<type id='732' name='boolean'/>
<method id='855' holder='745' name='equals' return='732' arguments='745' flags='1' bytes='11' iicount='1'/>
<call method='855' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='94'/>
<klass id='856' name='java/util/HashMap$TreeNode' flags='24'/>
<method id='857' holder='856' name='getTreeNode' return='856' arguments='738 745' flags='16' bytes='22' iicount='1'/>
<call method='857' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='126'/>
<call method='855' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.248'/>
</parse>
<phase name='optimize_blocks' stamp='0.248'>
<phase_done name='optimize_blocks' stamp='0.248'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.248'>
<phase_done name='rangeCheckElimination' stamp='0.248'/>
</phase>
<phase name='optimize_null_checks' stamp='0.248'>
<phase_done name='optimize_null_checks' stamp='0.248'/>
</phase>
<phase_done name='buildIR' stamp='0.248'/>
</phase>
<phase name='emit_lir' stamp='0.248'>
<phase name='lirGeneration' stamp='0.248'>
<phase_done name='lirGeneration' stamp='0.248'/>
</phase>
<phase name='linearScan' stamp='0.248'>
<phase_done name='linearScan' stamp='0.248'/>
</phase>
<phase_done name='emit_lir' stamp='0.248'/>
</phase>
<phase name='codeemit' stamp='0.248'>
<phase_done name='codeemit' stamp='0.248'/>
</phase>
<phase name='codeinstall' stamp='0.248'>
<phase_done name='codeinstall' stamp='0.259'/>
</phase>
<code_cache total_blobs='263' nmethods='20' adapters='158' free_code_cache='250521088'/>
<task_done success='1' nmsize='2472' count='1769' backedge_count='52' stamp='0.259'/>
</task>
<task compile_id='36' method='com/garden/alanni/asm/Test add (II)I' bytes='17' count='110215' iicount='110219' level='2' stamp='0.259'>
<phase name='buildIR' stamp='0.259'>
<type id='738' name='int'/>
<klass id='849' name='com/garden/alanni/asm/Test' flags='1'/>
<method id='850' holder='849' name='add' return='738' arguments='738 738' flags='1' bytes='17' iicount='110378'/>
<parse method='850'  stamp='0.259'>
<parse_done stamp='0.259'/>
</parse>
<phase name='optimize_blocks' stamp='0.259'>
<phase_done name='optimize_blocks' stamp='0.259'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.259'>
<phase_done name='rangeCheckElimination' stamp='0.259'/>
</phase>
<phase name='optimize_null_checks' stamp='0.259'>
<phase_done name='optimize_null_checks' stamp='0.259'/>
</phase>
<phase_done name='buildIR' stamp='0.259'/>
</phase>
<phase name='emit_lir' stamp='0.259'>
<phase name='lirGeneration' stamp='0.259'>
<phase_done name='lirGeneration' stamp='0.259'/>
</phase>
<phase name='linearScan' stamp='0.259'>
<phase_done name='linearScan' stamp='0.259'/>
</phase>
<phase_done name='emit_lir' stamp='0.259'/>
</phase>
<phase name='codeemit' stamp='0.259'>
<phase_done name='codeemit' stamp='0.259'/>
</phase>
<phase name='codeinstall' stamp='0.259'>
<phase_done name='codeinstall' stamp='0.262'/>
</phase>
<code_cache total_blobs='264' nmethods='21' adapters='158' free_code_cache='250520192'/>
<task_done success='1' nmsize='368' count='130525' stamp='0.262'/>
</task>
<task compile_id='34' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='2488' iicount='2488' level='3' stamp='0.262'>
<phase name='buildIR' stamp='0.262'>
<type id='738' name='int'/>
<klass id='745' name='java/lang/Object' flags='1'/>
<klass id='849' name='java/util/HashMap' flags='1'/>
<method id='850' holder='849' name='hash' return='738' arguments='745' flags='24' bytes='20' iicount='2488'/>
<parse method='850'  stamp='0.262'>
<bc code='182' bci='9'/>
<method id='852' holder='745' name='hashCode' return='738' flags='257' bytes='0' iicount='395'/>
<call method='852' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.262'/>
</parse>
<phase name='optimize_blocks' stamp='0.262'>
<phase_done name='optimize_blocks' stamp='0.262'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.262'>
<phase_done name='rangeCheckElimination' stamp='0.262'/>
</phase>
<phase name='optimize_null_checks' stamp='0.262'>
<phase_done name='optimize_null_checks' stamp='0.262'/>
</phase>
<phase_done name='buildIR' stamp='0.262'/>
</phase>
<phase name='emit_lir' stamp='0.262'>
<phase name='lirGeneration' stamp='0.262'>
<phase_done name='lirGeneration' stamp='0.262'/>
</phase>
<phase name='linearScan' stamp='0.262'>
<phase_done name='linearScan' stamp='0.262'/>
</phase>
<phase_done name='emit_lir' stamp='0.262'/>
</phase>
<phase name='codeemit' stamp='0.262'>
<phase_done name='codeemit' stamp='0.262'/>
</phase>
<phase name='codeinstall' stamp='0.262'>
<phase_done name='codeinstall' stamp='0.264'/>
</phase>
<code_cache total_blobs='268' nmethods='22' adapters='160' free_code_cache='250512256'/>
<task_done success='1' nmsize='584' count='2488' stamp='0.264'/>
</task>
<task compile_id='37' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='2433' iicount='2433' level='3' stamp='0.264'>
<phase name='buildIR' stamp='0.266'>
<type id='740' name='void'/>
<type id='738' name='int'/>
<klass id='810' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='849' holder='810' name='ensureCapacityInternal' return='740' arguments='738' flags='2' bytes='27' iicount='2437'/>
<parse method='849'  stamp='0.266'>
<bc code='183' bci='17'/>
<method id='851' holder='810' name='newCapacity' return='738' arguments='738' flags='2' bytes='39' iicount='747'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='838' name='[C' flags='1041'/>
<klass id='853' name='java/util/Arrays' flags='1'/>
<method id='854' holder='853' name='copyOf' return='838' arguments='838 738' flags='9' bytes='19' iicount='771'/>
<call method='854' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='854'>
<bc code='184' bci='11'/>
<klass id='856' name='java/lang/Math' flags='17'/>
<method id='857' holder='856' name='min' return='738' arguments='738 738' flags='9' bytes='11' compile_id='25' compiler='C2' level='4' iicount='7393'/>
<call method='857' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<parse_done stamp='0.266'/>
</parse>
<bc code='184' bci='14'/>
<klass id='745' name='java/lang/Object' flags='1'/>
<klass id='751' name='java/lang/System' flags='17'/>
<method id='859' holder='751' name='arraycopy' return='740' arguments='745 738 745 738 738' flags='265' bytes='0' compile_id='9' compile_kind='c2n' level='0' iicount='7424'/>
<call method='859' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.266'/>
</parse>
<parse_done stamp='0.266'/>
</parse>
<phase name='optimize_blocks' stamp='0.266'>
<phase_done name='optimize_blocks' stamp='0.266'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.266'>
<phase_done name='rangeCheckElimination' stamp='0.266'/>
</phase>
<phase name='optimize_null_checks' stamp='0.266'>
<phase_done name='optimize_null_checks' stamp='0.266'/>
</phase>
<phase_done name='buildIR' stamp='0.266'/>
</phase>
<phase name='emit_lir' stamp='0.266'>
<phase name='lirGeneration' stamp='0.266'>
<phase_done name='lirGeneration' stamp='0.266'/>
</phase>
<phase name='linearScan' stamp='0.266'>
<phase_done name='linearScan' stamp='0.266'/>
</phase>
<phase_done name='emit_lir' stamp='0.266'/>
</phase>
<phase name='codeemit' stamp='0.266'>
<phase_done name='codeemit' stamp='0.266'/>
</phase>
<phase name='codeinstall' stamp='0.266'>
<phase_done name='codeinstall' stamp='0.273'/>
</phase>
<code_cache total_blobs='274' nmethods='24' adapters='164' free_code_cache='250507328'/>
<task_done success='1' nmsize='1144' count='2437' inlined_bytes='30' stamp='0.273'/>
</task>
<task compile_id='17' method='java/lang/String indexOf (I)I' bytes='7' count='1795' iicount='1795' level='3' stamp='0.273'>
<phase name='buildIR' stamp='0.273'>
<type id='738' name='int'/>
<klass id='746' name='java/lang/String' flags='17'/>
<method id='849' holder='746' name='indexOf' return='738' arguments='738' flags='1' bytes='7' iicount='1795'/>
<parse method='849'  stamp='0.273'>
<bc code='182' bci='3'/>
<method id='851' holder='746' name='indexOf' return='738' arguments='738 738' flags='1' bytes='70' iicount='1820'/>
<call method='851' instr='invokevirtual'/>
<inline_fail reason='inlining prohibited by policy'/>
<parse_done stamp='0.273'/>
</parse>
<phase name='optimize_blocks' stamp='0.273'>
<phase_done name='optimize_blocks' stamp='0.273'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.273'>
<phase_done name='rangeCheckElimination' stamp='0.273'/>
</phase>
<phase name='optimize_null_checks' stamp='0.273'>
<phase_done name='optimize_null_checks' stamp='0.273'/>
</phase>
<phase_done name='buildIR' stamp='0.273'/>
</phase>
<phase name='emit_lir' stamp='0.273'>
<phase name='lirGeneration' stamp='0.273'>
<phase_done name='lirGeneration' stamp='0.273'/>
</phase>
<phase name='linearScan' stamp='0.273'>
<phase_done name='linearScan' stamp='0.273'/>
</phase>
<phase_done name='emit_lir' stamp='0.273'/>
</phase>
<phase name='codeemit' stamp='0.273'>
<phase_done name='codeemit' stamp='0.273'/>
</phase>
<phase name='codeinstall' stamp='0.273'>
<phase_done name='codeinstall' stamp='0.278'/>
</phase>
<code_cache total_blobs='275' nmethods='26' adapters='164' free_code_cache='250510592'/>
<task_done success='1' nmsize='520' count='1795' stamp='0.278'/>
</task>
<task compile_id='14' method='java/lang/Character toLowerCase (I)I' bytes='9' count='2072' iicount='2072' level='3' stamp='0.278'>
<phase name='buildIR' stamp='0.278'>
<type id='738' name='int'/>
<klass id='827' name='java/lang/Character' flags='17'/>
<method id='849' holder='827' name='toLowerCase' return='738' arguments='738' flags='9' bytes='9' iicount='2072'/>
<parse method='849'  stamp='0.278'>
<bc code='184' bci='1'/>
<klass id='852' name='java/lang/CharacterData' flags='1024'/>
<method id='853' holder='852' name='of' return='852' arguments='738' flags='24' bytes='120' compile_id='18' compiler='C1' level='2' iicount='6815'/>
<call method='853' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='855' holder='852' name='toLowerCase' return='738' arguments='738' flags='1024' bytes='0' iicount='1'/>
<call method='855' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.278'/>
</parse>
<phase name='optimize_blocks' stamp='0.278'>
<phase_done name='optimize_blocks' stamp='0.278'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.278'>
<phase_done name='rangeCheckElimination' stamp='0.278'/>
</phase>
<phase name='optimize_null_checks' stamp='0.278'>
<phase_done name='optimize_null_checks' stamp='0.278'/>
</phase>
<phase_done name='buildIR' stamp='0.278'/>
</phase>
<phase name='emit_lir' stamp='0.278'>
<phase name='lirGeneration' stamp='0.278'>
<phase_done name='lirGeneration' stamp='0.278'/>
</phase>
<phase name='linearScan' stamp='0.278'>
<phase_done name='linearScan' stamp='0.278'/>
</phase>
<phase_done name='emit_lir' stamp='0.278'/>
</phase>
<phase name='codeemit' stamp='0.278'>
<phase_done name='codeemit' stamp='0.278'/>
</phase>
<phase name='codeinstall' stamp='0.278'>
<phase_done name='codeinstall' stamp='0.281'/>
</phase>
<code_cache total_blobs='278' nmethods='27' adapters='165' free_code_cache='250503488'/>
<task_done success='1' nmsize='568' count='2072' stamp='0.281'/>
</task>
<task compile_id='15' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='2072' iicount='2072' level='3' stamp='0.281'>
<phase name='buildIR' stamp='0.281'>
<type id='738' name='int'/>
<klass id='849' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='850' holder='849' name='toLowerCase' return='738' arguments='738' flags='0' bytes='39' iicount='2072'/>
<parse method='850'  stamp='0.281'>
<bc code='182' bci='4'/>
<method id='852' holder='849' name='getProperties' return='738' arguments='738' flags='0' bytes='11' compile_id='19' compiler='C1' level='2' iicount='6815'/>
<call method='852' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='849'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='849'/>
<parse method='852'>
<parse_done stamp='0.285'/>
</parse>
<parse_done stamp='0.285'/>
</parse>
<phase name='optimize_blocks' stamp='0.285'>
<phase_done name='optimize_blocks' stamp='0.285'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.285'>
<phase_done name='rangeCheckElimination' stamp='0.285'/>
</phase>
<phase name='optimize_null_checks' stamp='0.285'>
<phase_done name='optimize_null_checks' stamp='0.285'/>
</phase>
<phase_done name='buildIR' stamp='0.285'/>
</phase>
<phase name='emit_lir' stamp='0.285'>
<phase name='lirGeneration' stamp='0.285'>
<phase_done name='lirGeneration' stamp='0.285'/>
</phase>
<phase name='linearScan' stamp='0.285'>
<phase_done name='linearScan' stamp='0.285'/>
</phase>
<phase_done name='emit_lir' stamp='0.285'/>
</phase>
<phase name='codeemit' stamp='0.285'>
<phase_done name='codeemit' stamp='0.285'/>
</phase>
<phase name='codeinstall' stamp='0.285'>
<dependency type='leaf_type' ctxk='849'/>
<phase_done name='codeinstall' stamp='0.289'/>
</phase>
<code_cache total_blobs='279' nmethods='29' adapters='165' free_code_cache='250505664'/>
<task_done success='1' nmsize='624' count='2086' inlined_bytes='11' stamp='0.289'/>
</task>
<task compile_id='21' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='1683' iicount='1683' level='1' stamp='0.289'>
<phase name='buildIR' stamp='0.289'>
<klass id='745' name='java/lang/Object' flags='1'/>
<klass id='771' name='java/lang/ref/Reference' flags='1025'/>
<method id='849' holder='771' name='get' return='745' flags='1' bytes='5' iicount='1683'/>
<parse method='849'  stamp='0.289'>
<parse_done stamp='0.289'/>
</parse>
<phase name='optimize_blocks' stamp='0.289'>
<phase_done name='optimize_blocks' stamp='0.289'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.289'>
<phase_done name='rangeCheckElimination' stamp='0.289'/>
</phase>
<phase name='optimize_null_checks' stamp='0.289'>
<phase_done name='optimize_null_checks' stamp='0.289'/>
</phase>
<phase_done name='buildIR' stamp='0.289'/>
</phase>
<phase name='emit_lir' stamp='0.289'>
<phase name='lirGeneration' stamp='0.289'>
<phase_done name='lirGeneration' stamp='0.289'/>
</phase>
<phase name='linearScan' stamp='0.289'>
<phase_done name='linearScan' stamp='0.289'/>
</phase>
<phase_done name='emit_lir' stamp='0.289'/>
</phase>
<phase name='codeemit' stamp='0.289'>
<phase_done name='codeemit' stamp='0.289'/>
</phase>
<phase name='codeinstall' stamp='0.289'>
<phase_done name='codeinstall' stamp='0.290'/>
</phase>
<code_cache total_blobs='280' nmethods='30' adapters='165' free_code_cache='250504960'/>
<task_done success='1' nmsize='272' count='1683' stamp='0.290'/>
</task>
<fragment>
<![CDATA[
<task compile_id='22' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='1329' iicount='1329' level='3' stamp='0.290'>
<phase name='buildIR' stamp='0.290'>
<klass id='812' name='java/lang/StringBuilder' flags='17'/>
<klass id='746' name='java/lang/String' flags='17'/>
<method id='849' holder='812' name='append' return='812' arguments='746' flags='1' bytes='8' iicount='1335'/>
<parse method='849'  stamp='0.290'>
<bc code='183' bci='2'/>
<klass id='810' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='851' holder='810' name='append' return='810' arguments='746' flags='1' bytes='50' iicount='1793'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.290'/>
</parse>
<phase name='optimize_blocks' stamp='0.290'>
<phase_done name='optimize_blocks' stamp='0.290'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.290'>
<phase_done name='rangeCheckElimination' stamp='0.290'/>
</phase>
<phase name='optimize_null_checks' stamp='0.290'>
<phase_done name='optimize_null_checks' stamp='0.290'/>
</phase>
<phase_done name='buildIR' stamp='0.290'/>
</phase>
<phase name='emit_lir' stamp='0.290'>
<phase name='lirGeneration' stamp='0.290'>
<phase_done name='lirGeneration' stamp='0.290'/>
</phase>
<phase name='linearScan' stamp='0.290'>
<phase_done name='linearScan' stamp='0.290'/>
</phase>
<phase_done name='emit_lir' stamp='0.290'/>
</phase>
<phase name='codeemit' stamp='0.290'>
<phase_done name='codeemit' stamp='0.290'/>
</phase>
<phase name='codeinstall' stamp='0.290'>
]]>
</fragment>
</compilation_log>
<compilation_log thread='18435'>
<start_compile_thread name='C2 CompilerThread2' thread='18435' process='25884' stamp='0.171'/>
<task compile_id='10' method='java/lang/String charAt (I)C' bytes='29' count='60257' iicount='60257' stamp='0.193'>
<phase name='parse' nodes='3' live='3' stamp='0.193'>
<type id='733' name='char'/>
<type id='738' name='int'/>
<klass id='746' name='java/lang/String' flags='17'/>
<method id='849' holder='746' name='charAt' return='733' arguments='738' flags='1' bytes='29' iicount='60257'/>
<klass id='851' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='849' bci='13' reason='unloaded' action='reinterpret' index='6' klass='851'/>
<parse method='849' uses='60257' stamp='0.193'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='60257' cnt='60257' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='60257' not_taken='0' cnt='60257' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='102' live='97' memory='35040' stamp='0.194'/>
</parse>
<phase_done name='parse' nodes='103' live='63' stamp='0.194'/>
</phase>
<phase name='optimizer' nodes='103' live='63' stamp='0.194'>
<phase name='ccp' nodes='103' live='63' stamp='0.194'>
<phase_done name='ccp' nodes='103' live='63' stamp='0.194'/>
</phase>
<phase name='idealLoop' nodes='103' live='63' stamp='0.194'>
<phase_done name='idealLoop' nodes='103' live='63' stamp='0.194'/>
</phase>
<phase_done name='optimizer' nodes='107' live='63' stamp='0.194'/>
</phase>
<phase name='matcher' nodes='107' live='63' stamp='0.194'>
<phase_done name='matcher' nodes='55' live='55' stamp='0.194'/>
</phase>
<phase name='regalloc' nodes='70' live='69' stamp='0.195'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='80' live='75' stamp='0.195'/>
</phase>
<phase name='output' nodes='80' live='75' stamp='0.195'>
<phase_done name='output' nodes='94' live='86' stamp='0.202'/>
</phase>
<code_cache total_blobs='253' nmethods='7' adapters='156' free_code_cache='250517824'/>
<task_done success='1' nmsize='216' count='60390' stamp='0.204'/>
</task>
<task compile_id='25' method='java/lang/Math min (II)I' bytes='11' count='7301' iicount='7301' stamp='0.213'>
<phase name='parse' nodes='3' live='3' stamp='0.213'>
<type id='738' name='int'/>
<klass id='849' name='java/lang/Math' flags='17'/>
<method id='850' holder='849' name='min' return='738' arguments='738 738' flags='9' bytes='11' iicount='7301'/>
<parse method='850' uses='7301' stamp='0.213'>
<bc code='163' bci='2'/>
<branch target_bci='9' taken='2818' not_taken='4483' cnt='7301' prob='0.385975'/>
<parse_done nodes='32' live='31' memory='23912' stamp='0.213'/>
</parse>
<phase_done name='parse' nodes='33' live='18' stamp='0.213'/>
</phase>
<phase name='optimizer' nodes='33' live='18' stamp='0.213'>
<phase name='ccp' nodes='33' live='18' stamp='0.213'>
<phase_done name='ccp' nodes='33' live='18' stamp='0.213'/>
</phase>
<phase name='idealLoop' nodes='33' live='18' stamp='0.213'>
<phase_done name='idealLoop' nodes='34' live='14' stamp='0.213'/>
</phase>
<phase_done name='optimizer' nodes='34' live='14' stamp='0.213'/>
</phase>
<phase name='matcher' nodes='34' live='14' stamp='0.213'>
<phase_done name='matcher' nodes='15' live='15' stamp='0.213'/>
</phase>
<phase name='regalloc' nodes='17' live='17' stamp='0.213'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='18' live='18' stamp='0.213'/>
</phase>
<phase name='output' nodes='18' live='18' stamp='0.213'>
<phase_done name='output' nodes='23' live='23' stamp='0.213'/>
</phase>
<code_cache total_blobs='254' nmethods='12' adapters='156' free_code_cache='250535616'/>
<task_done success='1' nmsize='56' count='7359' stamp='0.214'/>
</task>
<task compile_id='31' method='java/lang/String hashCode ()I' bytes='55' count='2887' backedge_count='73728' iicount='2887' stamp='0.221'>
<phase name='parse' nodes='3' live='3' stamp='0.221'>
<type id='738' name='int'/>
<klass id='746' name='java/lang/String' flags='17'/>
<method id='849' holder='746' name='hashCode' return='738' flags='1' bytes='55' iicount='2887'/>
<parse method='849' uses='2887' stamp='0.221'>
<bc code='154' bci='6'/>
<branch target_bci='53' taken='1408' not_taken='1144' cnt='2552' prob='0.551724'/>
<bc code='190' bci='13'/>
<uncommon_trap bci='13' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='14'/>
<branch target_bci='53' taken='2' not_taken='1142' cnt='1144' prob='0.00174825'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='1141' not_taken='69593' cnt='70734' prob='0.0161309'/>
<uncommon_trap bci='33' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='33' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='39'/>
<uncommon_trap bci='39' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='190' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='1141' not_taken='69593' cnt='69593' prob='0.0161309'/>
<parse_done nodes='190' live='184' memory='50008' stamp='0.231'/>
</parse>
<phase_done name='parse' nodes='191' live='124' stamp='0.231'/>
</phase>
<phase name='optimizer' nodes='191' live='124' stamp='0.231'>
<phase name='idealLoop' nodes='192' live='104' stamp='0.231'>
<loop_tree>
<loop idx='192' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='196' live='96' stamp='0.231'/>
</phase>
<phase name='idealLoop' nodes='196' live='96' stamp='0.231'>
<loop_tree>
<loop idx='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='222' live='102' stamp='0.231'/>
</phase>
<phase name='idealLoop' nodes='222' live='102' stamp='0.231'>
<loop_tree>
<loop idx='299' inner_loop='1' main_loop='299' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='312' live='172' stamp='0.231'/>
</phase>
<phase name='ccp' nodes='312' live='172' stamp='0.231'>
<phase_done name='ccp' nodes='312' live='172' stamp='0.232'/>
</phase>
<phase name='idealLoop' nodes='312' live='172' stamp='0.232'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='364' live='198' stamp='0.232'/>
</phase>
<phase name='idealLoop' nodes='364' live='198' stamp='0.232'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='370' live='184' stamp='0.232'/>
</phase>
<phase name='idealLoop' nodes='370' live='184' stamp='0.232'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='380' live='167' stamp='0.232'/>
</phase>
<phase_done name='optimizer' nodes='409' live='161' stamp='0.232'/>
</phase>
<phase name='matcher' nodes='409' live='161' stamp='0.232'>
<phase_done name='matcher' nodes='141' live='141' stamp='0.232'/>
</phase>
<phase name='regalloc' nodes='177' live='176' stamp='0.232'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='195' live='190' stamp='0.233'/>
</phase>
<phase name='output' nodes='195' live='190' stamp='0.233'>
<phase_done name='output' nodes='209' live='200' stamp='0.236'/>
</phase>
<code_cache total_blobs='262' nmethods='18' adapters='158' free_code_cache='250522688'/>
<task_done success='1' nmsize='376' count='2888' backedge_count='73779' stamp='0.239'/>
</task>
<task compile_id='39' compile_kind='osr' method='com/garden/alanni/asm/Test main ([Ljava/lang/String;)V' bytes='85' count='1' backedge_count='189983' iicount='1' osr_bci='12' stamp='0.266'>
<phase name='parse' nodes='3' live='3' stamp='0.266'>
<type id='740' name='void'/>
<klass id='850' name='[Ljava/lang/String;' flags='1041'/>
<klass id='849' name='com/garden/alanni/asm/Test' flags='1'/>
<method id='851' holder='849' name='main' return='740' arguments='850' flags='9' bytes='85' iicount='1'/>
<klass id='751' name='java/lang/System' flags='17'/>
<uncommon_trap method='851' bci='31' reason='unloaded' action='reinterpret' index='48' klass='751'/>
<parse method='851' uses='1' osr_bci='12' stamp='0.266'>
<uncommon_trap method='851' bci='31' reason='unloaded' action='reinterpret' index='48' klass='751'/>
<dependency type='leaf_type' ctxk='849'/>
<dependency type='leaf_type' ctxk='849'/>
<uncommon_trap bci='12' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='12' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='12' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='162' bci='15'/>
<branch target_bci='31' taken='0' not_taken='0'/>
<bc code='182' bci='21'/>
<type id='738' name='int'/>
<method id='855' holder='849' name='add' return='738' arguments='738 738' flags='1' bytes='17' compile_id='38' compiler='C2' level='4' iicount='189448'/>
<dependency type='unique_concrete_method' ctxk='849' x='855'/>
<call method='855' count='0' prof_factor='1' inline='1'/>
<inline_fail reason='call site not reached'/>
<direct_call bci='21'/>
<uncommon_trap bci='21' reason='null_check' action='maybe_recompile'/>
<bc code='178' bci='31'/>
<uncommon_trap bci='31' reason='unloaded' action='reinterpret' index='48'/>
<parse_done nodes='156' live='151' memory='46232' stamp='0.266'/>
</parse>
<phase_done name='parse' nodes='157' live='110' stamp='0.266'/>
</phase>
<phase name='optimizer' nodes='157' live='110' stamp='0.266'>
<phase name='idealLoop' nodes='162' live='104' stamp='0.266'>
<loop_tree>
<loop idx='162' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='169' live='102' stamp='0.266'/>
</phase>
<phase name='idealLoop' nodes='169' live='102' stamp='0.266'>
<loop_tree>
<loop idx='162' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='169' live='102' stamp='0.266'/>
</phase>
<phase name='idealLoop' nodes='169' live='102' stamp='0.266'>
<loop_tree>
<loop idx='162' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='169' live='102' stamp='0.266'/>
</phase>
<phase name='ccp' nodes='169' live='102' stamp='0.266'>
<phase_done name='ccp' nodes='169' live='102' stamp='0.266'/>
</phase>
<phase name='idealLoop' nodes='170' live='100' stamp='0.266'>
<loop_tree>
<loop idx='162' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='188' live='94' stamp='0.267'/>
</phase>
<phase name='idealLoop' nodes='188' live='94' stamp='0.267'>
<loop_tree>
<loop idx='162' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='188' live='78' stamp='0.267'/>
</phase>
<phase name='idealLoop' nodes='188' live='78' stamp='0.267'>
<loop_tree>
<loop idx='162' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='188' live='78' stamp='0.267'/>
</phase>
<phase_done name='optimizer' nodes='190' live='77' stamp='0.267'/>
</phase>
<phase name='matcher' nodes='190' live='77' stamp='0.267'>
<phase_done name='matcher' nodes='72' live='72' stamp='0.267'/>
</phase>
<phase name='regalloc' nodes='90' live='89' stamp='0.267'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='114' live='111' stamp='0.267'/>
</phase>
<phase name='output' nodes='114' live='111' stamp='0.267'>
<phase_done name='output' nodes='128' live='122' stamp='0.273'/>
</phase>
<dependency type='leaf_type' ctxk='849'/>
<dependency type='unique_concrete_method' ctxk='849' x='855'/>
<code_cache total_blobs='275' nmethods='25' adapters='164' free_code_cache='250506304'/>
<task_done success='1' nmsize='264' count='1' backedge_count='432128' stamp='0.275'/>
</task>
</compilation_log>
<compilation_log thread='16643'>
<start_compile_thread name='C2 CompilerThread1' thread='16643' process='25884' stamp='0.171'/>
<task compile_id='6' compile_kind='osr' method='java/lang/String hashCode ()I' bytes='55' count='2866' backedge_count='73412' iicount='2866' osr_bci='24' stamp='0.183'>
<phase name='parse' nodes='3' live='3' stamp='0.193'>
<type id='738' name='int'/>
<klass id='746' name='java/lang/String' flags='17'/>
<method id='849' holder='746' name='hashCode' return='738' flags='1' bytes='55' iicount='2867'/>
<parse method='849' uses='2867' osr_bci='24' stamp='0.193'>
<uncommon_trap bci='24' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='24' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='24' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='180' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='1132' not_taken='69286' cnt='70418' prob='0.0160754'/>
<bc code='52' bci='39'/>
<uncommon_trap bci='39' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='39' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='219' live='211' memory='54344' stamp='0.194'/>
</parse>
<phase_done name='parse' nodes='220' live='169' stamp='0.194'/>
</phase>
<phase name='optimizer' nodes='220' live='169' stamp='0.194'>
<phase name='idealLoop' nodes='230' live='160' stamp='0.194'>
<loop_tree>
<loop idx='230' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='245' live='154' stamp='0.195'/>
</phase>
<phase name='idealLoop' nodes='245' live='154' stamp='0.195'>
<loop_tree>
<loop idx='230' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='296' live='161' stamp='0.195'/>
</phase>
<phase name='idealLoop' nodes='296' live='161' stamp='0.195'>
<loop_tree>
<loop idx='301' main_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='399' live='227' stamp='0.195'/>
</phase>
<phase name='ccp' nodes='399' live='227' stamp='0.195'>
<phase_done name='ccp' nodes='399' live='227' stamp='0.195'/>
</phase>
<phase name='idealLoop' nodes='402' live='220' stamp='0.195'>
<loop_tree>
<loop idx='364' inner_loop='1' pre_loop='301' >
</loop>
<loop idx='301' inner_loop='1' main_loop='301' >
</loop>
<loop idx='319' inner_loop='1' post_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='402' live='214' stamp='0.195'/>
</phase>
<phase name='idealLoop' nodes='402' live='214' stamp='0.195'>
<loop_tree>
<loop idx='364' inner_loop='1' pre_loop='301' >
</loop>
<loop idx='431' inner_loop='1' main_loop='431' >
</loop>
<loop idx='319' inner_loop='1' post_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='450' live='228' stamp='0.196'/>
</phase>
<phase name='idealLoop' nodes='450' live='228' stamp='0.196'>
<loop_tree>
<loop idx='364' inner_loop='1' pre_loop='301' >
</loop>
<loop idx='480' inner_loop='1' main_loop='480' >
</loop>
<loop idx='319' inner_loop='1' post_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='493' live='251' stamp='0.196'/>
</phase>
<phase name='idealLoop' nodes='493' live='251' stamp='0.196'>
<loop_tree>
<loop idx='364' inner_loop='1' pre_loop='301' >
</loop>
<loop idx='480' inner_loop='1' main_loop='480' >
</loop>
<loop idx='319' inner_loop='1' post_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='496' live='248' stamp='0.196'/>
</phase>
<phase_done name='optimizer' nodes='529' live='239' stamp='0.196'/>
</phase>
<phase name='matcher' nodes='529' live='239' stamp='0.196'>
<phase_done name='matcher' nodes='210' live='210' stamp='0.196'/>
</phase>
<phase name='regalloc' nodes='272' live='269' stamp='0.196'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='318' live='297' stamp='0.197'/>
</phase>
<phase name='output' nodes='318' live='297' stamp='0.197'>
<phase_done name='output' nodes='335' live='308' stamp='0.202'/>
</phase>
<code_cache total_blobs='253' nmethods='10' adapters='156' free_code_cache='250531456'/>
<task_done success='1' nmsize='536' count='2873' backedge_count='73516' stamp='0.212'/>
</task>
<task compile_id='29' compile_kind='osr' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='1448' backedge_count='94302' iicount='1448' osr_bci='20' stamp='0.213'>
<phase name='parse' nodes='3' live='3' stamp='0.213'>
<type id='738' name='int'/>
<klass id='838' name='[C' flags='1041'/>
<klass id='841' name='[B' flags='1041'/>
<klass id='849' name='sun/nio/cs/UTF_8$Encoder' flags='26'/>
<method id='850' holder='849' name='encode' return='738' arguments='838 738 738 841' flags='1' bytes='359' iicount='1450'/>
<klass id='855' name='sun/nio/cs/Surrogate$Parser' unloaded='1'/>
<uncommon_trap method='850' bci='175' reason='unloaded' action='reinterpret' index='22' klass='855'/>
<uncommon_trap method='850' bci='153' reason='unloaded' action='reinterpret' index='22' klass='855'/>
<parse method='850' uses='1450' osr_bci='20' stamp='0.213'>
<uncommon_trap method='850' bci='175' reason='unloaded' action='reinterpret' index='22' klass='855'/>
<uncommon_trap method='850' bci='153' reason='unloaded' action='reinterpret' index='22' klass='855'/>
<uncommon_trap bci='20' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='20' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='20' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='162' bci='24'/>
<branch target_bci='54' taken='1248' not_taken='76020' cnt='77268' prob='0.0161516'/>
<bc code='52' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='29' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='33'/>
<branch target_bci='54' taken='0' not_taken='76021' cnt='76021' prob='never'/>
<uncommon_trap bci='33' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='52' bci='48'/>
<uncommon_trap bci='48' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='84' bci='50'/>
<uncommon_trap bci='50' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='50' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='57'/>
<branch target_bci='356' taken='1248' not_taken='0' cnt='1248' prob='always'/>
<uncommon_trap bci='57' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='299' live='288' memory='78072' stamp='0.214'/>
</parse>
<phase_done name='parse' nodes='300' live='233' stamp='0.214'/>
</phase>
<phase name='optimizer' nodes='300' live='233' stamp='0.214'>
<phase name='idealLoop' nodes='320' live='211' stamp='0.214'>
<loop_tree>
<loop idx='320' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='435' live='220' stamp='0.214'/>
</phase>
<phase name='idealLoop' nodes='435' live='220' stamp='0.214'>
<loop_tree>
<loop idx='440' main_loop='440' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='637' live='356' stamp='0.214'/>
</phase>
<phase name='idealLoop' nodes='637' live='356' stamp='0.214'>
<loop_tree>
<loop idx='568' inner_loop='1' pre_loop='440' >
</loop>
<loop idx='680' inner_loop='1' main_loop='680' >
</loop>
<loop idx='476' inner_loop='1' post_loop='440' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='720' live='374' stamp='0.215'/>
</phase>
<phase name='ccp' nodes='720' live='374' stamp='0.215'>
<phase_done name='ccp' nodes='720' live='374' stamp='0.215'/>
</phase>
<phase name='idealLoop' nodes='724' live='361' stamp='0.215'>
<loop_tree>
<loop idx='568' inner_loop='1' pre_loop='440' >
</loop>
<loop idx='680' inner_loop='1' main_loop='680' >
</loop>
<loop idx='476' inner_loop='1' post_loop='440' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='746' live='351' stamp='0.215'/>
</phase>
<phase name='idealLoop' nodes='746' live='351' stamp='0.215'>
<loop_tree>
<loop idx='568' inner_loop='1' pre_loop='440' >
</loop>
<loop idx='783' inner_loop='1' main_loop='783' >
</loop>
<loop idx='476' inner_loop='1' post_loop='440' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='817' live='404' stamp='0.215'/>
</phase>
<phase name='idealLoop' nodes='817' live='404' stamp='0.215'>
<loop_tree>
<loop idx='568' inner_loop='1' pre_loop='440' >
</loop>
<loop idx='783' inner_loop='1' main_loop='783' >
</loop>
<loop idx='476' inner_loop='1' post_loop='440' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='823' live='398' stamp='0.216'/>
</phase>
<phase_done name='optimizer' nodes='872' live='389' stamp='0.216'/>
</phase>
<phase name='matcher' nodes='872' live='389' stamp='0.216'>
<phase_done name='matcher' nodes='336' live='336' stamp='0.216'/>
</phase>
<phase name='regalloc' nodes='432' live='431' stamp='0.216'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='579' live='529' stamp='0.217'/>
</phase>
<phase name='output' nodes='579' live='529' stamp='0.218'>
<phase_done name='output' nodes='604' live='543' stamp='0.221'/>
</phase>
<code_cache total_blobs='257' nmethods='14' adapters='156' free_code_cache='250524032'/>
<task_done success='1' nmsize='1080' count='1467' backedge_count='95132' stamp='0.227'/>
</task>
</compilation_log>
<compilation_log thread='16131'>
<start_compile_thread name='C2 CompilerThread0' thread='16131' process='25884' stamp='0.170'/>
<task compile_id='8' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='20104' backedge_count='11477' iicount='20104' stamp='0.193'>
<phase name='parse' nodes='3' live='3' stamp='0.193'>
<type id='732' name='boolean'/>
<klass id='745' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/String' flags='17'/>
<method id='849' holder='746' name='equals' return='732' arguments='745' flags='1' bytes='81' iicount='20104'/>
<parse method='849' uses='20104' stamp='0.193'>
<bc code='166' bci='2'/>
<branch target_bci='7' taken='18892' not_taken='1212' cnt='20104' prob='0.939713'/>
<bc code='193' bci='8'/>
<uncommon_trap bci='8' reason='class_check' action='maybe_recompile'/>
<bc code='153' bci='11'/>
<branch target_bci='79' taken='1' not_taken='18891' cnt='18892' prob='5.29325e-05'/>
<bc code='192' bci='15'/>
<uncommon_trap bci='15' reason='null_check' action='make_not_entrant'/>
<uncommon_trap bci='15' reason='class_check' action='maybe_recompile'/>
<bc code='190' bci='23'/>
<uncommon_trap bci='23' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='30'/>
<uncommon_trap bci='30' reason='null_check' action='maybe_recompile'/>
<bc code='160' bci='31'/>
<branch target_bci='79' taken='18180' not_taken='711' cnt='18891' prob='0.962363'/>
<bc code='153' bci='53'/>
<branch target_bci='77' taken='71' not_taken='9264' cnt='9335' prob='0.00760578'/>
<uncommon_trap bci='56' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='56' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='60'/>
<uncommon_trap bci='60' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='60' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='52' bci='65'/>
<uncommon_trap bci='65' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='65' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='66'/>
<branch target_bci='71' taken='8624' not_taken='640' cnt='9264' prob='0.930915'/>
<bc code='153' bci='53'/>
<branch target_bci='77' taken='71' not_taken='9264' cnt='8624' prob='0.00760578'/>
<parse_done nodes='297' live='282' memory='77040' stamp='0.194'/>
</parse>
<phase_done name='parse' nodes='298' live='206' stamp='0.194'/>
</phase>
<phase name='optimizer' nodes='298' live='206' stamp='0.194'>
<phase name='idealLoop' nodes='325' live='172' stamp='0.195'>
<loop_tree>
<loop idx='332' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='350' live='152' stamp='0.195'/>
</phase>
<phase name='idealLoop' nodes='350' live='152' stamp='0.195'>
<loop_tree>
<loop idx='509' inner_loop='1' main_loop='509' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='565' live='265' stamp='0.195'/>
</phase>
<phase name='idealLoop' nodes='565' live='265' stamp='0.195'>
<loop_tree>
<loop idx='428' inner_loop='1' pre_loop='332' >
</loop>
<loop idx='597' inner_loop='1' main_loop='597' >
</loop>
<loop idx='375' inner_loop='1' post_loop='332' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='617' live='301' stamp='0.195'/>
</phase>
<phase name='ccp' nodes='617' live='301' stamp='0.195'>
<phase_done name='ccp' nodes='617' live='301' stamp='0.195'/>
</phase>
<phase name='idealLoop' nodes='617' live='300' stamp='0.196'>
<loop_tree>
<loop idx='428' inner_loop='1' pre_loop='332' >
</loop>
<loop idx='597' inner_loop='1' main_loop='597' >
</loop>
<loop idx='375' inner_loop='1' post_loop='332' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='620' live='279' stamp='0.196'/>
</phase>
<phase name='idealLoop' nodes='620' live='279' stamp='0.196'>
<loop_tree>
<loop idx='428' inner_loop='1' pre_loop='332' >
</loop>
<loop idx='597' inner_loop='1' main_loop='597' >
</loop>
<loop idx='375' inner_loop='1' post_loop='332' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='623' live='276' stamp='0.196'/>
</phase>
<phase_done name='optimizer' nodes='712' live='266' stamp='0.196'/>
</phase>
<phase name='matcher' nodes='712' live='266' stamp='0.196'>
<phase_done name='matcher' nodes='218' live='218' stamp='0.196'/>
</phase>
<phase name='regalloc' nodes='298' live='296' stamp='0.197'>
<regalloc attempts='3' success='1'/>
<phase_done name='regalloc' nodes='354' live='329' stamp='0.198'/>
</phase>
<phase name='output' nodes='354' live='329' stamp='0.198'>
<phase_done name='output' nodes='383' live='342' stamp='0.202'/>
</phase>
<code_cache total_blobs='253' nmethods='9' adapters='156' free_code_cache='250526592'/>
<task_done success='1' nmsize='632' count='20115' backedge_count='11503' stamp='0.209'/>
</task>
<task compile_id='12' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='10715' iicount='10715' stamp='0.209'>
<phase name='parse' nodes='3' live='3' stamp='0.209'>
<type id='740' name='void'/>
<klass id='745' name='java/lang/Object' flags='1'/>
<method id='849' holder='745' name='&lt;init&gt;' return='740' flags='1' bytes='1' iicount='10715'/>
<parse method='849' uses='10715' stamp='0.209'>
<parse_done nodes='54' live='53' memory='27144' stamp='0.209'/>
</parse>
<phase_done name='parse' nodes='56' live='38' stamp='0.209'/>
</phase>
<phase name='optimizer' nodes='56' live='38' stamp='0.209'>
<phase name='ccp' nodes='56' live='38' stamp='0.209'>
<phase_done name='ccp' nodes='56' live='38' stamp='0.209'/>
</phase>
<phase name='idealLoop' nodes='56' live='38' stamp='0.209'>
<phase_done name='idealLoop' nodes='56' live='38' stamp='0.209'/>
</phase>
<phase_done name='optimizer' nodes='56' live='37' stamp='0.209'/>
</phase>
<phase name='matcher' nodes='56' live='37' stamp='0.209'>
<phase_done name='matcher' nodes='33' live='33' stamp='0.209'/>
</phase>
<phase name='regalloc' nodes='42' live='42' stamp='0.209'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='45' live='44' stamp='0.209'/>
</phase>
<phase name='output' nodes='45' live='44' stamp='0.209'>
<phase_done name='output' nodes='55' live='53' stamp='0.212'/>
</phase>
<code_cache total_blobs='253' nmethods='11' adapters='156' free_code_cache='250536128'/>
<task_done success='1' nmsize='152' count='10718' stamp='0.213'/>
</task>
<task compile_id='30' compile_kind='osr' method='java/lang/String indexOf (II)I' bytes='70' count='1699' backedge_count='113710' iicount='1699' osr_bci='37' stamp='0.214'>
<phase name='parse' nodes='3' live='3' stamp='0.221'>
<type id='738' name='int'/>
<klass id='746' name='java/lang/String' flags='17'/>
<method id='849' holder='746' name='indexOf' return='738' arguments='738 738' flags='1' bytes='70' iicount='1702'/>
<parse method='849' uses='1702' osr_bci='37' stamp='0.221'>
<uncommon_trap bci='37' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='37' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='37' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='1208' not_taken='108743' cnt='109951' prob='0.0109867'/>
<bc code='52' bci='47'/>
<uncommon_trap bci='47' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='47' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='49'/>
<branch target_bci='55' taken='108738' not_taken='5' cnt='108743' prob='0.999954'/>
<parse_done nodes='169' live='162' memory='48008' stamp='0.221'/>
</parse>
<phase_done name='parse' nodes='170' live='125' stamp='0.221'/>
</phase>
<phase name='optimizer' nodes='170' live='125' stamp='0.221'>
<phase name='idealLoop' nodes='175' live='117' stamp='0.221'>
<loop_tree>
<loop idx='175' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='227' live='124' stamp='0.222'/>
</phase>
<phase name='idealLoop' nodes='227' live='124' stamp='0.222'>
<loop_tree>
<loop idx='232' main_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='331' live='187' stamp='0.222'/>
</phase>
<phase name='idealLoop' nodes='331' live='187' stamp='0.222'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='356' inner_loop='1' main_loop='356' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='379' live='205' stamp='0.222'/>
</phase>
<phase name='ccp' nodes='379' live='205' stamp='0.222'>
<phase_done name='ccp' nodes='379' live='205' stamp='0.222'/>
</phase>
<phase name='idealLoop' nodes='381' live='200' stamp='0.222'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='356' inner_loop='1' main_loop='356' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='385' live='195' stamp='0.222'/>
</phase>
<phase name='idealLoop' nodes='385' live='195' stamp='0.222'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='409' inner_loop='1' main_loop='409' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='431' live='231' stamp='0.222'/>
</phase>
<phase name='idealLoop' nodes='431' live='231' stamp='0.222'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='474' inner_loop='1' main_loop='474' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='507' live='293' stamp='0.223'/>
</phase>
<phase name='idealLoop' nodes='507' live='293' stamp='0.223'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='474' inner_loop='1' main_loop='474' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='507' live='286' stamp='0.223'/>
</phase>
<phase_done name='optimizer' nodes='567' live='273' stamp='0.223'/>
</phase>
<phase name='matcher' nodes='567' live='273' stamp='0.223'>
<phase_done name='matcher' nodes='219' live='219' stamp='0.223'/>
</phase>
<phase name='regalloc' nodes='302' live='302' stamp='0.223'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='321' live='318' stamp='0.224'/>
</phase>
<phase name='output' nodes='321' live='318' stamp='0.224'>
<phase_done name='output' nodes='355' live='329' stamp='0.231'/>
</phase>
<code_cache total_blobs='261' nmethods='16' adapters='158' free_code_cache='250519424'/>
<task_done success='1' nmsize='536' count='1703' backedge_count='113910' stamp='0.236'/>
</task>
<task compile_id='38' method='com/garden/alanni/asm/Test add (II)I' bytes='17' count='131776' iicount='131776' stamp='0.262'>
<phase name='parse' nodes='3' live='3' stamp='0.262'>
<type id='738' name='int'/>
<klass id='849' name='com/garden/alanni/asm/Test' flags='1'/>
<method id='850' holder='849' name='add' return='738' arguments='738 738' flags='1' bytes='17' compile_id='36' compiler='C1' level='2' iicount='132041'/>
<parse method='850' uses='132041' stamp='0.262'>
<parse_done nodes='45' live='44' memory='25888' stamp='0.262'/>
</parse>
<phase_done name='parse' nodes='46' live='29' stamp='0.262'/>
</phase>
<phase name='optimizer' nodes='46' live='29' stamp='0.262'>
<phase name='ccp' nodes='46' live='29' stamp='0.262'>
<phase_done name='ccp' nodes='46' live='29' stamp='0.262'/>
</phase>
<phase name='idealLoop' nodes='46' live='29' stamp='0.262'>
<phase_done name='idealLoop' nodes='46' live='29' stamp='0.262'/>
</phase>
<phase_done name='optimizer' nodes='46' live='29' stamp='0.262'/>
</phase>
<phase name='matcher' nodes='46' live='29' stamp='0.262'>
<phase_done name='matcher' nodes='32' live='32' stamp='0.262'/>
</phase>
<phase name='regalloc' nodes='34' live='34' stamp='0.262'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='35' live='35' stamp='0.262'/>
</phase>
<phase name='output' nodes='35' live='35' stamp='0.262'>
<phase_done name='output' nodes='42' live='42' stamp='0.264'/>
</phase>
<code_cache total_blobs='270' nmethods='23' adapters='161' free_code_cache='250511040'/>
<task_done success='1' nmsize='120' count='189448' stamp='0.266'/>
</task>
<task compile_id='40' method='java/lang/String indexOf (II)I' bytes='70' count='1820' backedge_count='114262' iicount='1820' stamp='0.266'>
<phase name='parse' nodes='3' live='3' stamp='0.273'>
<type id='738' name='int'/>
<klass id='746' name='java/lang/String' flags='17'/>
<method id='849' holder='746' name='indexOf' return='738' arguments='738 738' flags='1' bytes='70' iicount='1820'/>
<parse method='849' uses='1820' stamp='0.278'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<bc code='156' bci='7'/>
<branch target_bci='15' taken='1611' not_taken='0' cnt='1611' prob='always'/>
<uncommon_trap bci='7' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='17'/>
<branch target_bci='22' taken='1296' not_taken='315' cnt='1611' prob='0.804469'/>
<bc code='162' bci='25'/>
<branch target_bci='63' taken='0' not_taken='1296' cnt='1296' prob='never'/>
<uncommon_trap bci='25' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='1290' not_taken='109147' cnt='110437' prob='0.0116809'/>
<uncommon_trap bci='43' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='43' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='47'/>
<uncommon_trap bci='47' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='47' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='49'/>
<branch target_bci='55' taken='109141' not_taken='6' cnt='109147' prob='0.999945'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='1290' not_taken='109147' cnt='109141' prob='0.0116809'/>
<parse_done nodes='184' live='174' memory='50256' stamp='0.278'/>
</parse>
<phase_done name='parse' nodes='185' live='129' stamp='0.278'/>
</phase>
<phase name='optimizer' nodes='185' live='129' stamp='0.278'>
<phase name='idealLoop' nodes='186' live='115' stamp='0.278'>
<loop_tree>
<loop idx='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='193' live='105' stamp='0.278'/>
</phase>
<phase name='idealLoop' nodes='193' live='105' stamp='0.278'>
<loop_tree>
<loop idx='192' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='206' live='111' stamp='0.278'/>
</phase>
<phase name='idealLoop' nodes='206' live='111' stamp='0.278'>
<loop_tree>
<loop idx='282' inner_loop='1' main_loop='282' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='295' live='187' stamp='0.278'/>
</phase>
<phase name='ccp' nodes='295' live='187' stamp='0.278'>
<phase_done name='ccp' nodes='295' live='187' stamp='0.278'/>
</phase>
<phase name='idealLoop' nodes='295' live='187' stamp='0.278'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='321' inner_loop='1' main_loop='321' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='342' live='222' stamp='0.279'/>
</phase>
<phase name='idealLoop' nodes='342' live='222' stamp='0.279'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='385' inner_loop='1' main_loop='385' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='418' live='288' stamp='0.279'/>
</phase>
<phase name='idealLoop' nodes='418' live='288' stamp='0.279'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='385' inner_loop='1' main_loop='385' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='418' live='271' stamp='0.279'/>
</phase>
<phase name='idealLoop' nodes='418' live='271' stamp='0.279'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='385' inner_loop='1' main_loop='385' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='418' live='268' stamp='0.279'/>
</phase>
<phase_done name='optimizer' nodes='481' live='258' stamp='0.279'/>
</phase>
<phase name='matcher' nodes='481' live='258' stamp='0.279'>
<phase_done name='matcher' nodes='197' live='197' stamp='0.279'/>
</phase>
<phase name='regalloc' nodes='279' live='278' stamp='0.279'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='296' live='293' stamp='0.280'/>
</phase>
<phase name='output' nodes='296' live='293' stamp='0.280'>
<phase_done name='output' nodes='329' live='305' stamp='0.281'/>
</phase>
<code_cache total_blobs='279' nmethods='28' adapters='165' free_code_cache='250501696'/>
<task_done success='1' nmsize='472' count='1843' backedge_count='114537' stamp='0.285'/>
</task>
</compilation_log>
<hotspot_log_done stamp='0.292'/>
</hotspot_log>
